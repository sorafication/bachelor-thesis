<!DOCTYPE html>
<!-- saved from url=(0073)https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Using_promises -->
<html lang="de" dir="ltr" class=""><head prefix="og: http://ogp.me/ns#"><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <link rel="preconnect" href="https://interactive-examples.mdn.mozilla.net/" pr="0.75">
  
  <meta http-equiv="X-UA-Compatible" content="IE=Edge">
  <script>(function(d) { d.className = d.className.replace(/\bno-js/, ''); })(document.documentElement);</script>
  <title>Promises benutzen - JavaScript | MDN</title>

  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="robots" content="index, follow">

  
<link rel="preload" href="https://developer.mozilla.org/static/fonts/locales/ZillaSlab-Regular.subset.bbc33fb47cf6.woff2" as="font" type="font/woff2" crossorigin="">
<link rel="preload" href="https://developer.mozilla.org/static/fonts/locales/ZillaSlab-Bold.subset.e96c15f68c68.woff2" as="font" type="font/woff2" crossorigin="">

  <link rel="home" href="https://developer.mozilla.org/de/">
  <link rel="license" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Using_promises#license">

  <link href="./Promises benutzen - JavaScript _ MDN_files/react-header.c2034e7be118.css" rel="stylesheet" type="text/css">
<link href="./Promises benutzen - JavaScript _ MDN_files/auth-modal.be43f0f58a73.css" rel="stylesheet" type="text/css">
<link href="./Promises benutzen - JavaScript _ MDN_files/react-mdn.704638bbb52f.css" rel="stylesheet" type="text/css">
<link href="./Promises benutzen - JavaScript _ MDN_files/subscriptions.3cebf84de805.css" rel="stylesheet" type="text/css">

  <link href="./Promises benutzen - JavaScript _ MDN_files/prism.a6f275e5032b.css" rel="stylesheet" type="text/css">

  
<style>
    @font-face {
        font-family: zillaslab;
        font-display: swap;
        src: url(/static/fonts/locales/ZillaSlab-Regular.subset.bbc33fb47cf6.woff2) format('woff2'),
             url(/static/fonts/locales/ZillaSlab-Regular.subset.0357f12613a7.woff) format('woff');
        font-weight: normal;
        font-style: normal;
    }

    @font-face {
        font-family: zillaslab;
        font-display: swap;
        src: url(/static/fonts/locales/ZillaSlab-Bold.subset.e96c15f68c68.woff2) format('woff2'),
             url(/static/fonts/locales/ZillaSlab-Bold.subset.da0ccde4ca4a.woff) format('woff');
        font-weight: bold;
        font-style: normal;
    }
</style>


  
<script>
    // Mozilla DNT Helper
    /* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/. */ if(typeof Mozilla==='undefined'){var Mozilla={}}Mozilla.dntEnabled=function(dnt,ua){'use strict';var dntStatus=dnt||navigator.doNotTrack||window.doNotTrack||navigator.msDoNotTrack;var userAgent=ua||navigator.userAgent;var anomalousWinVersions=['Windows NT 6.1','Windows NT 6.2','Windows NT 6.3'];var fxMatch=userAgent.match(/Firefox\/(\d+)/);var ieRegEx=/MSIE|Trident/i;var isIE=ieRegEx.test(userAgent);var platform=userAgent.match(/Windows.+?(?=;)/g);if(isIE&&typeof Array.prototype.indexOf!=='function'){return false}else if(fxMatch&&parseInt(fxMatch[1],10)<32){dntStatus='Unspecified'}else if(isIE&&platform&&anomalousWinVersions.indexOf(platform.toString())!==-1){dntStatus='Unspecified'}else{dntStatus={'0':'Disabled','1':'Enabled'}[dntStatus]||'Unspecified'}return dntStatus==='Enabled'?true:false};
    // only load GA if DNT is not enabled
    if (Mozilla && !Mozilla.dntEnabled()) {
        window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
        ga('create', 'UA-36116321-5', 'mozilla.org');
        ga('set', 'anonymizeIp', true);
    }
</script>
<script async="" src="./Promises benutzen - JavaScript _ MDN_files/analytics.js"></script>


  <script>
LUX=(function(){var a=("undefined"!==typeof(LUX)&&"undefined"!==typeof(LUX.gaMarks)?LUX.gaMarks:[]);var d=("undefined"!==typeof(LUX)&&"undefined"!==typeof(LUX.gaMeasures)?LUX.gaMeasures:[]);var j="LUX_start";var k=window.performance;var l=("undefined"!==typeof(LUX)&&LUX.ns?LUX.ns:(Date.now?Date.now():+(new Date())));if(k&&k.timing&&k.timing.navigationStart){l=k.timing.navigationStart}function f(){if(k&&k.now){return k.now()}var o=Date.now?Date.now():+(new Date());return o-l}function b(n){if(k){if(k.mark){return k.mark(n)}else{if(k.webkitMark){return k.webkitMark(n)}}}a.push({name:n,entryType:"mark",startTime:f(),duration:0});return}function m(p,t,n){if("undefined"===typeof(t)&&h(j)){t=j}if(k){if(k.measure){if(t){if(n){return k.measure(p,t,n)}else{return k.measure(p,t)}}else{return k.measure(p)}}else{if(k.webkitMeasure){return k.webkitMeasure(p,t,n)}}}var r=0,o=f();if(t){var s=h(t);if(s){r=s.startTime}else{if(k&&k.timing&&k.timing[t]){r=k.timing[t]-k.timing.navigationStart}else{return}}}if(n){var q=h(n);if(q){o=q.startTime}else{if(k&&k.timing&&k.timing[n]){o=k.timing[n]-k.timing.navigationStart}else{return}}}d.push({name:p,entryType:"measure",startTime:r,duration:(o-r)});return}function h(n){return c(n,g())}function c(p,o){for(i=o.length-1;i>=0;i--){var n=o[i];if(p===n.name){return n}}return undefined}function g(){if(k){if(k.getEntriesByType){return k.getEntriesByType("mark")}else{if(k.webkitGetEntriesByType){return k.webkitGetEntriesByType("mark")}}}return a}return{mark:b,measure:m,gaMarks:a,gaMeasures:d}})();LUX.ns=(Date.now?Date.now():+(new Date()));LUX.ac=[];LUX.cmd=function(a){LUX.ac.push(a)};LUX.init=function(){LUX.cmd(["init"])};LUX.send=function(){LUX.cmd(["send"])};LUX.addData=function(a,b){LUX.cmd(["addData",a,b])};LUX_ae=[];window.addEventListener("error",function(a){LUX_ae.push(a)});LUX_al=[];if("function"===typeof(PerformanceObserver)){var LongTaskObserver=new PerformanceObserver(function(c){var b=c.getEntries();for(var a=0;a<b.length;a++){var d=b[a];LUX_al.push(d)}});try{LongTaskObserver.observe({entryTypes:["longtask"],buffered:true})}catch(e){}};
</script>
<script src="./Promises benutzen - JavaScript _ MDN_files/lux.js" async="" defer="" crossorigin="anonymous"></script>


  <script>
  window.fetch || document.write('<script src="/static/build/js/fetch-polyfill.63fdc379c7eb.js"><\/script>');
</script>
<script>
  // Only include the fat polyfill for browsers that seem to not have
  // certain JS features. E.g. Firefox 38.
  Array.prototype.includes || document.write('<script src="/static/build/js/js-polyfill.6f2e22100487.js"><\/script>');
</script>

  <script async="" type="text/javascript" src="./Promises benutzen - JavaScript _ MDN_files/perf.654b849a6fd9.js" charset="utf-8"></script>

  <!-- common social tags -->
  
  <meta property="og:type" content="website">
  <meta property="og:image" content="https://developer.mozilla.org/static/img/opengraph-logo.72382e605ce3.png">
  <meta property="og:site_name" content="MDN-Web-Dokumentation">
  <meta name="twitter:card" content="summary">
  <meta name="twitter:image" content="https://developer.mozilla.org/static/img/opengraph-logo.72382e605ce3.png">
  <meta name="twitter:site" content="@MozDevNet">
  <meta name="twitter:creator" content="@MozDevNet">
  <link rel="search" type="application/opensearchdescription+xml" href="https://developer.mozilla.org/de/search/xml" title="MDN-Web-Dokumentation">

  <!-- third-generation iPad with high-resolution Retina display: -->
  <link rel="apple-touch-icon-precomposed" sizes="144x144" href="https://developer.mozilla.org/static/img/favicon144.e7e21ca263ca.png">
  <!-- iPhone with high-resolution Retina display: -->
  <link rel="apple-touch-icon-precomposed" sizes="114x114" href="https://developer.mozilla.org/static/img/favicon114.d526f38b09c5.png">
  <!-- first- and second-generation iPad: -->
  <link rel="apple-touch-icon-precomposed" sizes="72x72" href="https://developer.mozilla.org/static/img/favicon72.cc65d1d762a0.png">
  <!-- non-Retina iPhone, iPod Touch, and Android 2.1+ devices: -->
  <link rel="apple-touch-icon-precomposed" href="https://developer.mozilla.org/static/img/favicon57.de33179910ae.png">
  <!-- basic favicon -->
  <link rel="shortcut icon" href="https://developer.mozilla.org/static/img/favicon32.7f3da72dcea1.png">

  <link href="./Promises benutzen - JavaScript _ MDN_files/banners.e6cd46767c2e.css" rel="stylesheet" type="text/css">




<link href="./Promises benutzen - JavaScript _ MDN_files/browser-compat-report.b2d4e900e250.css" rel="stylesheet" type="text/css">


<link href="./Promises benutzen - JavaScript _ MDN_files/mdn-subscriptions.dbb82432d74c.css" rel="stylesheet" type="text/css">


  <link rel="canonical" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Using_promises">

  
  <link rel="alternate" hreflang="de" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Using_promises" title="Promises benutzen">
  
    <link rel="alternate" hreflang="en" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises" title="Using Promises">
  
    <link rel="alternate" hreflang="es" href="https://developer.mozilla.org/es/docs/Web/JavaScript/Guide/Usar_promesas" title="Usar promesas">
  
    <link rel="alternate" hreflang="fr" href="https://developer.mozilla.org/fr/docs/Web/JavaScript/Guide/Utiliser_les_promesses" title="Utiliser les promesses">
  
    <link rel="alternate" hreflang="ja" href="https://developer.mozilla.org/ja/docs/Web/JavaScript/Guide/Using_promises" title="Promiseを使う">
  
    <link rel="alternate" hreflang="ko" href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Guide/Using_promises" title="Using promises">
  
    <link rel="alternate" hreflang="pt" href="https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Guide/Usando_promises" title="Usando promises">
  
    <link rel="alternate" hreflang="ru" href="https://developer.mozilla.org/ru/docs/Web/JavaScript/Guide/Ispolzovanie_promisov" title="Использование промисов">
  
    <link rel="alternate" hreflang="uk" href="https://developer.mozilla.org/uk/docs/Web/JavaScript/Guide/Using_promises" title="Використання промісів">
  
    <link rel="alternate" hreflang="vi" href="https://developer.mozilla.org/vi/docs/Web/JavaScript/Guide/Using_promises" title="Sử dụng Promise">
  
    <link rel="alternate" hreflang="zh" href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Using_promises" title="使用 Promise">
  
    <link rel="alternate" hreflang="zh-TW" href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Guide/Using_promises" title="使用 Promise">
  

  <!-- document-specific social tags -->
  <meta property="og:title" content="Promises benutzen">
  <meta property="og:url" content="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Using_promises">
  <meta name="twitter:url" content="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Using_promises">
  <meta name="twitter:title" content="Promises benutzen">
  
  <meta property="og:description" content="Ein Promise ist ein Objekt, das die finale Beendigung einer asynchronen Operation repräsentiert. Je nachdem, ob die Operation erfolgreich oder fehlerhaft beendet wurde, wird das Promise entsprechend gekennzeichnet.">
  <meta name="description" content="Ein Promise ist ein Objekt, das die finale Beendigung einer asynchronen Operation repräsentiert. Je nachdem, ob die Operation erfolgreich oder fehlerhaft beendet wurde, wird das Promise entsprechend gekennzeichnet.">
  <meta name="twitter:description" content="Ein Promise ist ein Objekt, das die finale Beendigung einer asynchronen Operation repräsentiert. Je nachdem, ob die Operation erfolgreich oder fehlerhaft beendet wurde, wird das Promise entsprechend gekennzeichnet.">
  

  
    <link href="./Promises benutzen - JavaScript _ MDN_files/print.ca192a439743.css" rel="stylesheet" type="text/css" media="print">
  
</head>
<body>
  <script>
    // make sure global mdn object exists
    var mdn = window.mdn || {};

    (function(win) {
        'use strict';

        win.mdn.features = {};
        win.mdn.stripePublicKey = 'pk_live_GZl4tCi8J5mWhKbJeRey4DSy';
        win.mdn.contributionSupportEmail = 'mdn-support@mozilla.com';

        win.mdn.siteUrl = 'https://developer.mozilla.org';
        win.mdn.wikiSiteUrl = 'https://wiki.developer.mozilla.org';
        win.mdn.staticPath = '/static/';
        win.mdn.wiki = {
            autosuggestTitleUrl: '/de/docs/get-documents'
        };

        win.mdn.notifications = [];

        

        // interactive editor config
        win.mdn.interactiveEditor = {
            siteUrl: "https://developer.mozilla.org",
            editorUrl: "https://interactive-examples.mdn.mozilla.net"
        };
        win.mdn.langCookieName = "django_language";

    })(this);
</script>

  

  <div id="react-container" data-component-name="SPA"><div class="loading-bar"></div><ul id="nav-access" data-testid="a11y-nav"><li><a id="skip-main" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Using_promises#content">Zum Hauptinhalt springen</a></li><li><a id="skip-language" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Using_promises#language">Sprache wählen</a></li><li><a id="skip-search" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Using_promises#main-q">Zur Suche springen</a></li></ul><header class="page-header" data-testid="header"><a href="https://developer.mozilla.org/de/" class="logo" aria-label="MDN-Web-Dokumentation"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 219 48" role="img"><path d="M49.752 30.824h59.917v17.132H49.75zm57.23 12.3c-.103.03-.21.048-.316.05-.338 0-.514-.15-.514-.582v-3.256c0-1.71-1.352-2.543-2.976-2.543a7.206 7.206 0 00-3.21.676l-.29 1.724 1.71.182.245-.842a2.338 2.338 0 011.147-.216c1.214 0 1.23.913 1.23 1.69v.234c-.407-.048-.818-.07-1.23-.068-1.71 0-3.49.433-3.49 2.276 0 1.563 1.23 2.144 2.31 2.144a2.7 2.7 0 002.41-1.494c.018.88.77 1.563 1.648 1.494a2.89 2.89 0 001.353-.338zm-4.604-.05a.787.787 0 01-.88-.867c0-.815.677-1.015 1.432-1.015.36.008.722.04 1.078.098-.05 1.235-.852 1.783-1.63 1.783zM97.388 33l-3.24 11.433h2.11L99.5 33.002zm-4.353 0l-3.24 11.433h2.11L95.145 33zm-6.89 6.645h2.243V36.94h-2.242zm0 4.802h2.243v-2.706h-2.242zm-3.617-1.64H80.1l4.156-4.736-.166-1.13h-6.58l-.268 2.63 1.546.164.338-1.163h2.343l-4.123 4.734.216 1.13h6.544l.467-2.63-1.69-.164zM72.143 36.79c-2.706 0-4.02 1.812-4.02 4.004 0 2.394 1.595 3.804 3.905 3.804 2.394 0 4.122-1.51 4.122-3.905-.003-2.093-1.32-3.906-4.01-3.906zm-.054 6.154c-1.165 0-1.763-.997-1.763-2.292 0-1.414.676-2.23 1.778-2.23 1.015 0 1.83.677 1.83 2.196 0 1.438-.73 2.327-1.846 2.327zm-5.906-3.564c0-1.78-1.224-2.594-2.577-2.594a2.51 2.51 0 00-2.44 1.612c-.367-1.1-1.364-1.613-2.443-1.613a2.48 2.48 0 00-2.276 1.278v-1.13h-3.14v1.63h.996v4.24h-.997v1.63h4.572v-1.63h-1.432V40.2c0-1.048.433-1.78 1.448-1.78.845 0 1.278.502 1.278 1.797v4.224h3.14v-1.63h-.996v-2.612c0-1.048.433-1.78 1.447-1.78.846 0 1.278.502 1.278 1.797v4.214h3.142V42.8h-.998zm78.791-22.39h-6.29c.23-1.935 1.16-3.558 3.274-3.558 2.245 0 3.2 1.857 3.016 3.558zM218.952 0v29.137h-169.2V0zM71.706 6.885h-3.85L61.51 20.01h-.104L54.882 6.884h-3.84v1.65h2.19V21.98H51.12v1.65h5.927v-1.65h-2.012V11.24h.1l5.75 11.553H61.9l5.62-11.474h.105v10.66h-1.962v1.65h5.942v-1.65h-2.09V8.536h2.19zm9.993 16.76c5.285 0 8.484-3.48 8.484-8.42 0-4.847-3.094-8.353-8.56-8.353H74.12v1.623h2.114v13.527H74.12v1.623zm27.05-16.76h-6.426v1.65h2.526v11.268h-.1L95.21 6.885H91.6v1.65h2.22V21.98h-1.935v1.65h6.385v-1.65h-2.655V10.444h.1l9.724 13.202h1.21V8.535h2.09zm26.71 5.29h-5.156v1.467h1.83l-1.857 7.247h-.128l-3.586-8.716h-1.21l-3.423 8.718h-.127l-2.14-7.247h1.933v-1.47h-5.41v1.467h1.522l3.25 10.003h1.352l3.432-8.766h.13l3.496 8.765h1.393l3.122-10.003h1.573zm6.704 11.727c2.837 0 4.514-1.583 4.83-3.568l-1.523-.338c-.36 1.42-1.365 2.347-3.17 2.347-2.283 0-3.53-1.468-3.636-4.02h8.058c.1-.445.153-.898.156-1.354-.024-2.71-1.728-5.03-4.873-5.03-3.246 0-5.26 2.58-5.26 6.14 0 3.712 2.162 5.825 5.412 5.825zm13.408 0c3.663 0 5.134-3.25 5.134-6.294 0-3.642-2.063-5.67-4.924-5.67-2.19 0-3.402 1.186-4.1 2.603V5.905h-3.53v1.47h1.692v12.923a22.8 22.8 0 01-.338 3.35h1.805a44.05 44.05 0 00.235-1.906c.747 1.39 2.242 2.165 4.02 2.165zm26.198-1.728h-1.985V5.904h-4.6v1.47h2.798v6.653c-.748-1.342-2.15-2.09-3.842-2.09-3.74 0-5.183 3.2-5.183 6.267 0 3.584 1.958 5.698 4.924 5.698 2.087 0 3.352-1.224 4.1-2.577v2.323h3.784zm6.963 1.728c3.53 0 5.75-2.526 5.742-6.006 0-3.25-1.934-5.982-5.647-5.982s-5.67 2.735-5.67 6.087c0 3.457 2.09 5.905 5.568 5.905zm12.942 0c3.172 0 4.538-2.114 4.866-4.112l-1.548-.34c-.334 1.885-1.315 2.917-3.094 2.917-2.27 0-3.507-1.637-3.507-4.397 0-2.475.982-4.487 3.43-4.487a4.4 4.4 0 012.45.646l.42 1.936 1.496-.18-.44-2.758c-1.16-.876-2.397-1.187-3.92-1.187-3.556 0-5.362 2.966-5.362 6.14 0 3.685 2.036 5.825 5.208 5.825zm11.166 0c2.76 0 4.874-1.34 4.847-3.595 0-4.565-7.1-2.195-7.1-5.184 0-1.177 1.03-1.69 2.474-1.69.826-.015 1.64.18 2.368.567l.267 1.864 1.495-.18-.284-2.68a8.135 8.135 0 00-3.997-1.06c-2.088 0-4.255.903-4.255 3.328 0 4.46 7.193 2.063 7.193 5.208 0 1.315-1.495 1.934-3.095 1.934a5.812 5.812 0 01-2.553-.568l.078-1.522-1.444-.156-.362 2.604c.977.643 2.736 1.133 4.36 1.133zm-54.042-6.11c0 2.373-1.058 4.564-3.584 4.564a3.455 3.455 0 01-3.534-3.456v-1.728c.05-1.7 1.444-3.686 3.635-3.686 1.948 0 3.48 1.444 3.483 4.305zm19.18-1.06v1.833c-.076 1.73-1.57 3.79-3.634 3.79-1.985 0-3.48-1.47-3.48-4.28 0-2.425 1.133-4.59 3.686-4.59a3.36 3.36 0 013.43 3.248zm14.597 1.133c0 2.58-1.34 4.488-3.79 4.488-2.453 0-3.74-1.958-3.74-4.46 0-2.55 1.34-4.434 3.74-4.434 2.397 0 3.79 1.778 3.79 4.405zm-104.39-2.593c0 4.16-2.32 6.763-6.574 6.763h-3.478V8.508h3.466c4.254 0 6.574 2.71 6.587 6.764zM.116 0h47.956v47.956H.116zM42.01 22.02c-.036-.723-.12-1.448-.17-2.166a1.74 1.74 0 00-.395-.98 2.465 2.465 0 00-1.026-.74c-.808-.314-1.622-.664-2.435-.975a21.509 21.509 0 01-3.342-1.472 2.626 2.626 0 01-1.296-1.972 2.954 2.954 0 00-1.47-2.228 4.062 4.062 0 00-2.958-.35c-.734.176-1.5.165-2.23-.033l-1.112-.34-.302-.09-.873-.26c-1.57-.468-2.228-.713-4.773-.278a14.678 14.678 0 00-7.09 3.897l-6.37 6.76h5.72l-3.504 3.71h6.026l-3.503 3.71h4.844l-1.548 4.06c5.93 6.07 12.25 7.295 12.25 7.295 0-1.673.38-8.24.826-9.34a5.25 5.25 0 01.762-1.54 4.211 4.211 0 013.393-1.547c1.303 0 2.597.238 3.815.702.74.31 1.577.264 2.277-.122a38.42 38.42 0 001.498-.94.839.839 0 01.556-.18c.54.06 1.054-.237 1.27-.734.16-.33.35-.64.524-.97.472-.884.69-1.88.633-2.88z"></path></svg></a><nav class="main-nav" aria-label="Main menu"><button type="button" class="ghost main-menu-toggle" aria-haspopup="true" aria-label="Show Menu"></button><ul class="main-menu "><li class="top-level-entry-container"><button id="technologies-button" type="button" class="top-level-entry" aria-haspopup="true" aria-expanded="false">Technologien</button><ul role="menu" aria-labelledby="technologies-button"><li data-item="Technologien" role="none"><a href="https://developer.mozilla.org/de/docs/Web" role="menuitem">Technologieübersicht</a></li><li data-item="Technologien" role="none"><a href="https://developer.mozilla.org/de/docs/Web/HTML" role="menuitem">HTML</a></li><li data-item="Technologien" role="none"><a href="https://developer.mozilla.org/de/docs/Web/CSS" role="menuitem">CSS</a></li><li data-item="Technologien" role="none"><a href="https://developer.mozilla.org/de/docs/Web/JavaScript" role="menuitem">JavaScript</a></li><li data-item="Technologien" role="none"><a href="https://developer.mozilla.org/de/docs/Web/Guide/Graphics" role="menuitem">Grafik</a></li><li data-item="Technologien" role="none"><a href="https://developer.mozilla.org/de/docs/Web/HTTP" role="menuitem">HTTP</a></li><li data-item="Technologien" role="none"><a href="https://developer.mozilla.org/de/docs/Web/API" role="menuitem">APIs / DOM</a></li><li data-item="Technologien" role="none"><a href="https://developer.mozilla.org/de/docs/Mozilla/Add-ons/WebExtensions" role="menuitem">Browser-Erweiterungen</a></li><li data-item="Technologien" role="none"><a href="https://developer.mozilla.org/de/docs/Web/MathML" role="menuitem">MathML</a></li></ul></li><li class="top-level-entry-container"><button id="references-guides-button" type="button" class="top-level-entry" aria-haspopup="true" aria-expanded="false">Referenzen &amp; Leitfäden</button><ul role="menu" aria-labelledby="references-guides-button"><li data-item="Referenzen &amp; Leitfäden" role="none"><a href="https://developer.mozilla.org/de/docs/Learn" role="menuitem">Web-Entwicklung lernen</a></li><li data-item="Referenzen &amp; Leitfäden" role="none"><a href="https://developer.mozilla.org/de/docs/Web/Tutorials" role="menuitem">Anleitungen</a></li><li data-item="Referenzen &amp; Leitfäden" role="none"><a href="https://developer.mozilla.org/de/docs/Web/Reference" role="menuitem">Nachschlagewerke</a></li><li data-item="Referenzen &amp; Leitfäden" role="none"><a href="https://developer.mozilla.org/de/docs/Web/Guide" role="menuitem">Entwickler-Leitfäden</a></li><li data-item="Referenzen &amp; Leitfäden" role="none"><a href="https://developer.mozilla.org/de/docs/Web/Accessibility" role="menuitem">Barrierefreiheit</a></li><li data-item="Referenzen &amp; Leitfäden" role="none"><a href="https://developer.mozilla.org/de/docs/Games" role="menuitem">Spieleentwicklung</a></li><li data-item="Referenzen &amp; Leitfäden" role="none"><a href="https://developer.mozilla.org/de/docs/Web" role="menuitem">…weitere Dokumente</a></li></ul></li><li class="top-level-entry-container"><button id="feedback-button" type="button" class="top-level-entry" aria-haspopup="true" aria-expanded="false">Feedback</button><ul role="menu" aria-labelledby="feedback-button"><li data-item="Feedback" role="none"><a href="https://developer.mozilla.org/de/docs/MDN/Feedback" role="menuitem">Feedback senden</a></li><li data-item="Feedback" role="none"><a target="_blank" rel="noopener noreferrer" href="https://support.mozilla.org/" role="menuitem">Holen Sie sich Hilfe zu Firefox<!-- --> 🌐</a></li><li data-item="Feedback" role="none"><a target="_blank" rel="noopener noreferrer" href="https://stackoverflow.com/" role="menuitem">Holen Sie sich Hilfe zu Web-Entwicklung<!-- --> 🌐</a></li><li data-item="Feedback" role="none"><a href="https://developer.mozilla.org/de/docs/MDN/Community" role="menuitem">Werden Sie Teil der MDN-Gemeinschaft</a></li><li data-item="Feedback" role="none"><a target="_blank" rel="noopener noreferrer" href="https://github.com/mdn/sprints/issues/new?template=issue-template.md&amp;projects=mdn/sprints/2&amp;labels=user-report&amp;title=https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Using_promises" role="menuitem">Melden Sie ein Inhaltsproblem<!-- --> 🌐</a></li><li data-item="Feedback" role="none"><a target="_blank" rel="noopener noreferrer" href="https://github.com/mdn/kuma/issues/new/choose" role="menuitem">Ein Problem melden<!-- --> 🌐</a></li></ul></li></ul></nav><div class="header-search "><form id="nav-main-search" action="https://developer.mozilla.org/de/search" method="get" role="search"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" aria-hidden="true" class="search-icon"><path fill-rule="nonzero" d="M15.5 14h-.79l-.28-.27a6.5 6.5 0 001.48-5.34c-.47-2.78-2.79-5-5.59-5.34a6.505 6.505 0 00-7.27 7.27c.34 2.8 2.56 5.12 5.34 5.59a6.5 6.5 0 005.34-1.48l.27.28v.79l4.25 4.25c.41.41 1.08.41 1.49 0 .41-.41.41-1.08 0-1.49L15.5 14zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"></path></svg><label for="main-q" class="visually-hidden">MDN durchsuchen</label><input type="search" class="search-input-field" id="main-q" name="q" placeholder="MDN durchsuchen" pattern="(.|\s)*\S(.|\s)*" required=""></form><button class="toggle-form"><svg xmlns="http://www.w3.org/2000/svg" role="presentation" viewBox="0 0 24 24" class="close-icon hide"><path d="M18.3 5.71a.996.996 0 00-1.41 0L12 10.59 7.11 5.7A.996.996 0 105.7 7.11L10.59 12 5.7 16.89a.996.996 0 101.41 1.41L12 13.41l4.89 4.89a.996.996 0 101.41-1.41L13.41 12l4.89-4.89c.38-.38.38-1.02 0-1.4z" fill-rule="nonzero"></path></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" aria-hidden="true" class="search-icon"><path fill-rule="nonzero" d="M15.5 14h-.79l-.28-.27a6.5 6.5 0 001.48-5.34c-.47-2.78-2.79-5-5.59-5.34a6.505 6.505 0 00-7.27 7.27c.34 2.8 2.56 5.12 5.34 5.59a6.5 6.5 0 005.34-1.48l.27.28v.79l4.25 4.25c.41.41 1.08.41 1.49 0 .41-.41.41-1.08 0-1.49L15.5 14zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"></path></svg><span>Suche öffnen</span></button></div><a href="https://developer.mozilla.org/de/users/account/signup-landing?next=/de/docs/Web/JavaScript/Guide/Using_promises" rel="nofollow" class="signin-link">Anmelden</a></header><main role="main"><header class="documentation-page-header"><div class="titlebar-container"><div class="titlebar"><h1 class="title">Promises benutzen</h1></div></div><div class="full-width-row-container"><div class="max-content-width-container"><nav class="breadcrumbs" role="navigation"><ol typeof="BreadcrumbList" vocab="https://schema.org/" aria-label="breadcrumbs"><li property="itemListElement" typeof="ListItem"><a href="https://developer.mozilla.org/de/docs/Web" class="breadcrumb-chevron" property="item" typeof="WebPage"><span class="pre-text">Siehe<!-- -->&nbsp;</span><span property="name">Webtechnologien für Entwickler</span></a><meta property="position" content="1"></li><li property="itemListElement" typeof="ListItem"><a href="https://developer.mozilla.org/de/docs/Web/JavaScript" class="breadcrumb-chevron" property="item" typeof="WebPage"><span class="pre-text">Siehe<!-- -->&nbsp;</span><span property="name">JavaScript</span></a><meta property="position" content="2"></li><li property="itemListElement" typeof="ListItem"><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide" class="breadcrumb-previous" property="item" typeof="WebPage"><span class="pre-text">Siehe<!-- -->&nbsp;</span><span property="name">Guide</span></a><meta property="position" content="3"></li><li property="itemListElement" typeof="ListItem"><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Using_promises" class="crumb-current-page" property="item" typeof="WebPage"><span property="name" aria-current="page">Promises benutzen</span></a><meta property="position" content="4"></li></ol></nav><div class="dropdown-container language-menu"><button id="header-language-menu" type="button" class="dropdown-menu-label" aria-haspopup="true" aria-owns="language-menu" aria-label="Die aktuelle Sprache ist Deutsch. Wählen Sie Ihre bevorzugte Sprache.">Deutsch<span class="dropdown-arrow-down" aria-hidden="true">▼</span></button><ul id="language-menu" class="dropdown-menu-items right " aria-expanded="false" role="menu"><li lang="en-US" role="menuitem"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises" title="Englisch (US)"><bdi>English (US)</bdi></a></li><li lang="es" role="menuitem"><a href="https://developer.mozilla.org/es/docs/Web/JavaScript/Guide/Usar_promesas" title="Spanisch"><bdi>Español</bdi></a></li><li lang="fr" role="menuitem"><a href="https://developer.mozilla.org/fr/docs/Web/JavaScript/Guide/Utiliser_les_promesses" title="Französisch"><bdi>Français</bdi></a></li><li lang="ja" role="menuitem"><a href="https://developer.mozilla.org/ja/docs/Web/JavaScript/Guide/Using_promises" title="Japanisch"><bdi>日本語</bdi></a></li><li lang="ko" role="menuitem"><a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Guide/Using_promises" title="Koreanisch"><bdi>한국어</bdi></a></li><li lang="pt-BR" role="menuitem"><a href="https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Guide/Usando_promises" title="Portugiesisch (Brasilianisch)"><bdi>Português (do&nbsp;Brasil)</bdi></a></li><li lang="ru" role="menuitem"><a href="https://developer.mozilla.org/ru/docs/Web/JavaScript/Guide/Ispolzovanie_promisov" title="Russisch"><bdi>Русский</bdi></a></li><li lang="uk" role="menuitem"><a href="https://developer.mozilla.org/uk/docs/Web/JavaScript/Guide/Using_promises" title="Ukrainisch"><bdi>Українська</bdi></a></li><li lang="vi" role="menuitem"><a href="https://developer.mozilla.org/vi/docs/Web/JavaScript/Guide/Using_promises" title="Vietnamesisch"><bdi>Tiếng Việt</bdi></a></li><li lang="zh-CN" role="menuitem"><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Using_promises" title="Chinesisch (Vereinfacht)"><bdi>中文 (简体)</bdi></a></li><li lang="zh-TW" role="menuitem"><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Guide/Using_promises" title="Chinesisch (Traditionell)"><bdi>正體中文 (繁體)</bdi></a></li></ul></div></div></div></header><div class="wiki-left-present content-layout"><aside class="document-toc-container"><section class="document-toc"><header><h2>Auf dieser Seite</h2><button type="button" class="toc-trigger-mobile">Zum Abschnitt springen<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 28" aria-hidden="true" role="img"><path d="M16 11a.99.99 0 01-.297.703l-7 7C8.516 18.89 8.265 19 8 19s-.516-.109-.703-.297l-7-7A.996.996 0 010 11c0-.547.453-1 1-1h14c.547 0 1 .453 1 1z"></path></svg></button></header><ul><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Using_promises#Garantien" rel="internal">Garantien</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Using_promises#Chaining" rel="internal">Chaining</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Using_promises#Fehler%C3%BCbertragung" rel="internal">Fehlerübertragung</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Using_promises#Promise_rejection-Events" rel="internal">Promise rejection-Events</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Using_promises#Ein_Promise-Objekt_in_einer_alten_Callback-API_erzeugen" rel="internal">Ein Promise-Objekt in einer alten Callback-API erzeugen</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Using_promises#Komposition" rel="internal">Komposition</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Using_promises#Timing" rel="internal">Timing</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Using_promises#Nesting" rel="internal">Nesting</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Using_promises#Typische_Fehler" rel="internal">Typische Fehler</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Using_promises#Wenn_Promises_auf_Tasks_treffen" rel="internal">Wenn Promises auf Tasks treffen</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Using_promises#Siehe_auch" rel="internal">Siehe auch</a></li><li class="toc-related-topics"><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Using_promises#sidebar-quicklinks">Verwandte Themen</a></li></ul></section></aside><div id="content" class="article text-content"><p class="overheadIndicator translationInProgress"><bdi>Diese Übersetzung ist unvollständig.<!-- -->&nbsp;<a href="https://wiki.developer.mozilla.org/de/docs/Web/JavaScript/Guide/Using_promises$edit" rel="nofollow">Bitte helfen Sie uns, diesen Artikel aus dem Englischen zu übersetzen</a></bdi></p><article id="wikiArticle"><div><div class="prevnext" style="text-align: right;">
    <p><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Details_of_the_Object_Model" rel="nofollow" style="float: left;">« zurück</a><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Iterators_and_Generators" rel="nofollow">weiter  »</a></p>
</div></div>

<p class="summary">Ein <a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Promise"><code>Promise</code></a> ist ein&nbsp;Objekt, das die finale Beendigung einer asynchronen Operation repräsentiert. Je nachdem, ob die Operation erfolgreich oder fehlerhaft beendet wurde, wird das Promise entsprechend gekennzeichnet.</p>

<p class="summary">Da in den meisten Fällen bereits existierende Promises benutzt werden, wird diese Anleitung zuerst die Benutzung von zurückgegebenen Promises erklären, und dann darauf eingehen, wie diese erzeugt werden.</p>

<p class="summary">Grob gesagt ist ein Promise ein zurückgegebenes Objekt, an welches Callback-Funktionen angehängt werden können, anstatt dass diese einer Funktion übergeben werden.</p>

<p class="summary">Betrachten wir z.B. folgende Funktion <code>createAudioFileAsync()</code>, welche asynchron eine Audio-Datei generiert; an diese werden Audio-Einstellungen sowie zwei Callback-Funktionen übergeben - eine für das erfolgreiche Erzeugen der Audio-Datei, und die andere für auftretende Fehler.</p>

<p class="summary">Ein beispielhafter Code, den <code>createAudioFileAsync()</code> nutzen würde, sieht in etwa so aus:</p>

<pre class="summary notranslate line-numbers language-html"><code class=" language-html">function successCallback(result) {
  console.log("Audio-Datei bereit unter URL: " + result);
}

function failureCallback(error) {
  console.error("Fehlerhafte Generierung der Audio-Datei: " + error);
}

createAudioFileAsync(audioSettings, successCallback, failureCallback);
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>In modernen Funktionen, welche Promises zurückgeben, kann man die Callbacks stattdessen direkt anhängen:</p>

<p>Würde <code>createAudioFileAsync()</code> so umgeschrieben, dass es als Rückgabewert ein Promise hätte, wäre die Nutzung davon einfach so:</p>

<pre class="notranslate line-numbers language-html"><code class=" language-html">createAudioFileAsync(audiosettings).then(successCallback, failureCallback);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>Das ist die Kurzform von:</p>

<pre class="notranslate line-numbers language-html"><code class=" language-html">const promise = createAudioFileAsync(audioSettings);
promise.then(successCallback, failureCallback);
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>Dies nennt man einen <em>asynchronen Funktionsaufruf</em>. Diese Vorgehensweise hat mehrere Vorteile, von denen in diesem Artikel jeder einzeln geschildert wird.</p>

<h2 id="Garantien">Garantien</h2>

<p>Anders als bei Callback-Übergabe nach dem alten Verfahren, können Promise-Objekte folgendes sicherstellen:</p>

<ul>
 <li>Callback-Funktionen werden erst aufgerufen, wenn der <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop#Run-to-completion">derzeitige Durchlauf des Javascript Event Loops </a>vollständig ist.</li>
 <li>Callback-Funktionen, die in <code>.then()</code> angehängt werden, werden <em>nach</em> dem Ende der asynchronen Operation aufgerufen.</li>
 <li>Mehrere Callback-Funktionen können durch mehrmaliges Aufrufen von <code>.then()</code> angehängt werden, um unabhängig von der Funktion selbst in der Anhänge-Reihenfolge aufgerufen zu werden.</li>
</ul>

<p>Allerdings ist der wohl kurzfristigste Nutzen von Promises das Chaining.</p>

<h2 id="Chaining">Chaining</h2>

<p>Eine häufige Aufgabenstellung ist der Aufruf von zwei oder mehr asynchronen Funktionen nacheinander in Sequenz, wobei Ergebnisse aus der vorangegangenen Funktion in die folgende Funktion übernommen werden. Dies ist realisierbar mittels einer <em>Promise chain</em>.</p>

<p>Hier steckt der Zauber drin: Die Funktion <code>.then()</code> gibt stets ein neues Promise-Objekt zurück:</p>

<pre class="brush: js notranslate line-numbers language-js"><code class=" language-js"><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> promise2 <span class="token operator">=</span> promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>successCallback<span class="token punctuation">,</span> failureCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>oder auch</p>

<pre class="brush: js notranslate line-numbers language-js"><code class=" language-js"><span class="token keyword">const</span> promise2 <span class="token operator">=</span> <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>successCallback<span class="token punctuation">,</span> failureCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>Hierbei repräsentiert <code>promise2</code> nicht nur den vollständigen Aufruf von <code>doSomething()</code>, sondern auch die Ergebnisse der beiden angehängten Funktionen <code>successCallback</code> oder <code>failureCallback</code> - diese können ebenfalls asynchrone Funktionen sein, die Promises zurückgeben. In diesem Fall werden jegliche Callback-Funktionen, die an <code>promise2</code> angehängt würden, jeweils auch eingereiht in den jeweiligen Promise-Rückgabewerten von <code>successCallback</code> oder <code>failureCallback</code>.</p>

<p>Grundsätzlich repräsentiert jedes Promise-Objekt die Vervollständigung eines asynchronen Schritts in der Kette.</p>

<p>Nach dem alten Verfahren führte das Aneinanderreihen von mehreren asynchronen Operationen zur klassischen <em>Callback pyramid of doom</em>:</p>

<pre class="brush: js notranslate line-numbers language-js"><code class=" language-js"><span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">doSomethingElse</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">newResult</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">doThirdThing</span><span class="token punctuation">(</span>newResult<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">finalResult</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Got the final result: '</span> <span class="token operator">+</span> finalResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> failureCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> failureCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> failureCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>Mit moderenen Funktionen können diese Callback-Funktionen stattdessen an die zurückgegebenen Promise-Objekte angehängt werden, womit die <em>Promise chain</em> geformt wird:</p>

<pre class="brush: js notranslate line-numbers language-js"><code class=" language-js"><span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">doSomethingElse</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">newResult</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">doThirdThing</span><span class="token punctuation">(</span>newResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">finalResult</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Got the final result: '</span> <span class="token operator">+</span> finalResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>failureCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>Die Argumente für <code>.then()</code> sind optional, und <code>.catch(failureCallback)</code> ist die Kurzschreibform von <code>.then(null, failureCallback)</code>. Dies kann stattdessen auch mit <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions">Pfeil-Funktionen</a> ausgedrückt werden:</p>

<pre class="brush: js notranslate line-numbers language-js"><code class=" language-js"><span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token function">doSomethingElse</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">newResult</span> <span class="token operator">=&gt;</span> <span class="token function">doThirdThing</span><span class="token punctuation">(</span>newResult<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">finalResult</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Got the final result: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>finalResult<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>failureCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>Wichtig</strong>: Immer Rückgabewerte angeben; sonst können die Callback das Ergebnis eines vorherigen Promise nicht abfangen.</p>

<h3 id="Chaining_nach_einem_.catch">Chaining nach einem <code>.catch()</code></h3>

<p>Es ist auch möglich, nach einem Fehler, sprich <code>.catch()</code>, weiter zu verkettern. Dies ist nützlich um neue Operationen auszuführen, auch nachdem es einen Fehler in der Kette gab.</p>

<pre class="brush: js notranslate line-numbers language-js"><code class=" language-js"><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Initial'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'Something failed'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Do this'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Do that'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Do this, no matter what happened before'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>Das obige Beispiel hat die nachfolgenden Ausgaben:</p>

<pre class="notranslate line-numbers language-html"><code class=" language-html">Initial
Do that
Do this, no matter what happened before
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>Zu beachten ist hier, dass der Text "Do this" nicht ausgegeben wird, weil der Fehler "Something failed" einen Abbruch ausgelöst hat.</p>

<h2 id="Fehlerübertragung">Fehlerübertragung</h2>

<p>Schaut man sich weiter oben die <em>Callback pyramid of doom</em> an, wird sichtbar, dass <code>failureCallback</code> dort mehrmals angegeben werden muss, anders als nur einmal beim Beispiel unten:</p>

<pre class="brush: js notranslate line-numbers language-js"><code class=" language-js"><span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token function">doSomethingElse</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">newResult</span> <span class="token operator">=&gt;</span> <span class="token function">doThirdThing</span><span class="token punctuation">(</span>newResult<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">finalResult</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Got the final result: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>finalResult<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>failureCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>Grundsätzlich hält eine Promise chain bei einer Exception an und erlaubt nur noch Zugriffe von <code>.catch()</code>-Handlern. Dies ist modelliert nach der Funktionsweise von synchronem Code:</p>

<pre class="brush: js notranslate line-numbers language-js"><code class=" language-js"><span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">syncDoSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> newResult <span class="token operator">=</span> <span class="token function">syncDoSomethingElse</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> finalResult <span class="token operator">=</span> <span class="token function">syncDoThirdThing</span><span class="token punctuation">(</span>newResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Got the final result: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>finalResult<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">failureCallback</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>Diese Symmetrie mit synchronem Code erreichte ihren Höhepunkt in der <code><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function">async/await</a></code>-Komfortschreibweise in ECMAScript 2017:</p>

<pre class="brush: js notranslate line-numbers language-js"><code class=" language-js"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> newResult <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">doSomethingElse</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> finalResult <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">doThirdThing</span><span class="token punctuation">(</span>newResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Got the final result: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>finalResult<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">failureCallback</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>Diese Schreibweise baut auf Promises auf; so ist <code>doSomething()</code> die selbe Funktion wie vorher. <a class="external" href="https://developers.google.com/web/fundamentals/getting-started/primers/async-functions" rel="noopener">Hier</a> kann man mehr über diese Syntax erfahren.</p>

<p>Promise-Objekte lösen mit der <em>Callback pyramid of doom </em>ein fundamentales Designproblem, indem sie alle Fehler, auch geworfene Exceptions und Programmierfehler, abfangen. Diese Eigenschaft ist essentiell für die funktionale Komposition von asynchronen Operationen.</p>

<h2 id="Promise_rejection-Events">Promise rejection-Events</h2>

<p>Immer, wenn ein Promise abgelehnt ("rejected") wird, wird eines von zwei Events zum globalen Scope (grundsätzlich entweder <code><a href="https://developer.mozilla.org/de/docs/Web/API/Window">window</a></code>, oder, falls in einem Web-Worker gearbeitet wird, der <code><a href="https://developer.mozilla.org/de/docs/Web/API/Worker">Worker</a></code> selbst oder ein anderes, <code>Worker</code>-basiertes Interface) geschickt. Diese beiden Events sind:</p>

<dl>
 <dt><code><a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/rejectionhandled_event">rejectionHandled</a></code></dt>
 <dd>Wird bei der Ablehnung eines Promise gesendet, nachdem die Ablehnung von der reject-Funktion des Ausführenden verarbeitet wurde.</dd>
 <dt><code><a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/unhandledrejection_event">unhandledRejection</a></code></dt>
 <dd>Wird bei der Ablehnung eines Promise gesendet, wenn es keinen Rejection-Handler gibt.</dd>
</dl>

<p>In beiden Fällen hat das Event (vom Typ <code><a href="https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent">PromiseRejectionEvent</a></code>) als Member das Attribut <code><a href="https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent/promise">promise</a></code> welches auf das abgelehnte Promise zeigt, sowie ein Attribut <code><a href="https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent/reason">reason</a></code> welches eine Begründung für die Ablehnung des Promise enthält.</p>

<p>Diese Events bilden ein Fallback für die Fehlerbehandlung bei Promises sowie eine Hilfestellung beim Debugging des eigenen Promise-Managements. Da die Händler im Kontext global sind, werden alle Fehler unabhängig von der Quelle zu ihnen geschickt.</p>

<p>Ein Fall der besonderen Nützlichkeit: Wenn man Code in <a href="https://developer.mozilla.org/de/docs/Glossary/Node.js">Node.js</a> schreibt, kann es oft passieren, dass im Projekt hinzugefügte Module unverarbeitete abgelehnte Promises haben. Diese werden von der Node-Laufzeitumgebung in die Konsole geloggt. Zu Analysezwecken, zur Verarbeitung durch den eigenen Code, oder auch einfach zur Verhinderung von übermäßigem Output, kann man diese abgelehnten Promises einfangen, indem man für das <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/unhandledrejection_event"><code>unhandledrejection</code> event</a> einen Handler hinzufügen:</p>

<pre class="brush: js notranslate line-numbers language-js"><code class=" language-js">window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'unhandledrejection'</span><span class="token punctuation">,</span> <span class="token parameter">event</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">/* Hier lässt sich Code einfügen, um die Attribute des Events
     zu untersuchen */</span>
  event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>Indem die <code><a href="https://developer.mozilla.org/en-US/docs/Web/API/Event/preventDefault">preventDefault()</a></code>-Methode des Events aufgerufen wird, wird die standardmäßige Operation bei unverarbeiteten abgelehnten Promises verhindert. Üblicherweise beinhaltet dies das Loggen des Fehlers in der Konsole; im Fall von Node ist das tatsächlich der Fall.</p>

<p>Idealerweise sollte man abgelehnte Promises immer untersuchen, um sicher zu gehen, dass es sich nicht um Code-Fehler handelt.</p>

<h2 id="Ein_Promise-Objekt_in_einer_alten_Callback-API_erzeugen">Ein Promise-Objekt in einer alten Callback-API erzeugen</h2>

<p>Ein einfaches <a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Promise"><code>Promise</code></a> kann durch dessen Konstruktor-Methode erzeugt werden. Diese Art und Weise sollte nur genutzt werden, um alte APIs damit zu umschließen.</p>

<p>Idealerweise würden alle asynchronen Funktionen bereits Promises zurückgeben. In der Realität erwarten einige APIs immer Callback-Funktionen für Erfolg und Fehlerfall, die nach dem alten Prinzip übergeben werden müssen. Ein eindeutiges Beispiel hierfür ist die Funktion <a href="https://developer.mozilla.org/de/docs/Web/API/WindowTimers/setTimeout"><code>setTimeout()</code></a>:</p>

<pre class="brush: js notranslate line-numbers language-js"><code class=" language-js"><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">saySomething</span><span class="token punctuation">(</span><span class="token string">"10 seconds passed"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>Callback-Funktionen nach dem alten Verfahren und Promises zu vermischen, bringt Probleme mit sich. Wenn <code>saySomething()</code> fehlschlägt oder Programmierfehler enthält, wird dies durch nichts abgefangen.</p>

<p>Glücklicherweise kann man solche Fälle mit einem Promise umschließen. Ein Best Practice besteht darin, problematische Funktionen auf der niedrigstmöglichen Ebene zu umschließen, und sie nie wieder direkt aufzurufen:</p>

<pre class="brush: js notranslate line-numbers language-js"><code class=" language-js"><span class="token keyword">const</span> <span class="token function-variable function">wait</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ms</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> ms<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">wait</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">saySomething</span><span class="token punctuation">(</span><span class="token string">"10 seconds"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>failureCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>Der Promise-Konstruktor empfängt grundsätzlich eine Ausführenden-Funktion, die es möglich macht, ein Promise manuell aufzulösen oder abzulehnen. Da <code>setTimeout()</code> nicht wirklich fehlschlägt, wurde im oberen Beispiel die Ablehnung ausgelassen.</p>

<h2 id="Komposition">Komposition</h2>

<p><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve" rel="nofollow"><code>Promise.resolve()</code></a> und <a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Promise/reject"><code>Promise.reject()</code></a> sind Abkürzungen für das manuelle Erzeugen von jeweils bereits aufgelösten oder abgelehnten Promises. In bestimmten Fällen kann dies nützlich sein.</p>

<p><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Promise/all"><code>Promise.all()</code></a> und <a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Promise/race"><code>Promise.race()</code></a> sind zwei Kompositionswerkzeuge für das parallele Durchführen von asynchronen Operationen.</p>

<p>Sequenzielle Komposition ist möglich durch cleveres Javascript:</p>

<pre class="notranslate line-numbers language-html"><code class=" language-html">[func1, func2].reduce((p, f) =&gt; p.then(f), Promise.resolve());<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>Im oberen Beispiel wird ein Array von asynchronen Funktionen auf eine Promise chain reduziert. Somit ist es das gleiche, wie <code>Promise.resolve().then(func1).then(func2);</code>.</p>

<p>Auch ist es möglich, dies mit einer wiederverwendbaren Kompositionsfunktion umzusetzen, die häufig in der funktionalen Programmierung vorkommt:</p>

<pre class="brush: js notranslate line-numbers language-js"><code class=" language-js"><span class="token keyword">const</span> <span class="token function-variable function">applyAsync</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span>val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> acc<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">composeAsync</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>funcs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token parameter">x</span> <span class="token operator">=&gt;</span> funcs<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span>applyAsync<span class="token punctuation">,</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>Die Funktion <code>composeAsync()</code> akzeptiert eine dynamische Anzahl von Funktionen als Parameter, und hat als Rückgabewert eine Funktion, die einen Initialwert akzeptiert, welcher durch die Kompositions-Pipeline durchgereicht wird. Der Nutzen besteht darin, dass einige oder alle übergebenen Funktionen entweder synchron oder asynchron sein können, und garantiert wird, dass sie in der richtigen Reihenfolge ausgeführt werden.</p>

<pre class="brush: js notranslate line-numbers language-js"><code class=" language-js"><span class="token keyword">const</span> transformData <span class="token operator">=</span> <span class="token function">composeAsync</span><span class="token punctuation">(</span>func1<span class="token punctuation">,</span> asyncFunc1<span class="token punctuation">,</span> asyncFunc2<span class="token punctuation">,</span> func2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">transformData</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>In ECMAScript 2017 kann sequenzielle Komposition mittels <code>async/await</code> noch einfacher durchgeführt werden:</p>

<pre class="brush: js notranslate line-numbers language-js"><code class=" language-js"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> f <span class="token keyword">of</span> <span class="token punctuation">[</span>func1<span class="token punctuation">,</span> func2<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<h2 id="Timing">Timing</h2>

<p>Um Überraschungen vorzubeugen, werden Funktionen die an <code>.then()</code> übergeben werden niemals synchron aufgerufen, auch wenn das Promise bereits aufgelöst wurde:</p>

<pre class="brush: js notranslate line-numbers language-js"><code class=" language-js">Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1, 2</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>Anstatt sofort ausgeführt zu werden, wird die übergebene Funktion in eine Microtask-Warteschlange eingereiht; das bedeutet, sie wird erst ausgeführt, wenn die Warteschlange am ende des aktuellen Durchlaufs des Javascript event loops geleert wird, sprich zeitnah:</p>

<pre class="brush: js notranslate line-numbers language-js"><code class=" language-js"><span class="token keyword">const</span> <span class="token function-variable function">wait</span> <span class="token operator">=</span> <span class="token parameter">ms</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> ms<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1, 2, 3, 4</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="Nesting">Nesting</h2>

<p>Einfache Promise chains sollten möglichst flach und ohne Nesting implementiert werden, da Nesting auch das Ergebnis von undurchdachter Komposition sein kann. Siehe auch bei typischen Fehlern.</p>

<p>Als Nesting wird eine Kontrollstruktur bezeichnet, um den Scope von catch-Statements zu begrenzen. Ein nested catch fängt nur Fehler in seinem Scope und niedriger ab, nicht außerhalb. Korrekt genutzt führt dies zu höherer Präzision in der Fehlerbehandlung:</p>

<pre class="brush: js notranslate line-numbers language-js"><code class=" language-js"><span class="token function">doSomethingCritical</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token function">doSomethingOptional</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">optionalResult</span> <span class="token operator">=&gt;</span> <span class="token function">doSomethingExtraNice</span><span class="token punctuation">(</span>optionalResult<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// Ignorieren, wenn optionale Operation fehlschlägt</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">moreCriticalStuff</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"Critical failure: "</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="Typische_Fehler">Typische Fehler</h2>

<p>In diesem Abschnitt werden übliche Programmierfehler thematisiert, auf die man achten sollte, um Promise chains nicht zu kompromittieren. Im unteren Beispiel wurden drei der am häufigsten vorkommenden Fehler untergebracht:</p>

<pre class="brush: js example-bad notranslate line-numbers language-js"><code class=" language-js"><span class="token function">eineFunktion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">ergebnis</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">eineZweiteFunktion</span><span class="token punctuation">(</span>ergebnis<span class="token punctuation">)</span> <span class="token comment">// Kein Promise-Rückgabewert für innere Chain + unnötiges Nesting</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">neuesErgebnis</span> <span class="token operator">=&gt;</span> <span class="token function">eineDritteFunktion</span><span class="token punctuation">(</span>neuesErgebnis<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">eineVierteFunktion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Keine Chain-Terminierung mit einem catch!</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>Der erste Programmierfehler ist, dass die Promise chain nicht ordentlich geknüpft wurde. Passieren tut dies, wenn ein neues Promise erzeugt, aber nicht zurückgegeben wird. Das führt dazu, dass die Promise chain reisst, oder aber, dass zwei chains entstehen, die sich in einer Race condition befinden. Im Klartext heisst das, dass <code>eineVierteFunktion()</code> nicht darauf wartet, dass <code>eineZweiteFunktion()</code> oder <code>eineDritteFunktion()</code> abgeschlossen sind, und, wahrscheinlich unbeabsichtigt, parallel mit ihnen ausgeführt wird. Einzelne Promise chains haben zusätzlich eigene Fehlerbehandlungen, was in diesem Fall zu nicht abgefangenen Fehlern führt.</p>

<p>Der zweite Programmierfehler ist das unnötige Nesting, welches den ersten Fehler mitverursachen kann. Da Nesting auch den Scope der inneren Fehler-Handler begrenzt, kann dies zu nicht abgefangenen Fehlern führen. Eine Variante hiervon ist das <a class="external" href="https://stackoverflow.com/questions/23803743/what-is-the-explicit-promise-construction-antipattern-and-how-do-i-avoid-it" rel="noopener">Promise-Konstruktor-Antipattern</a>, welches Nesting mit der redundanten Nutzung eines Promise-Konstruktors, um Code, der bereits Promises nutzt, zu umschließen, kombiniert.</p>

<p>Der dritte Programmierfehler ist, die Terminierung der Promise chain mit einem <code>.catch()</code> wegzulassen. Unterminierte chains führen in den meisten Browsern zu nicht abgefangenen Promise-Ablehnungen.</p>

<p>Als Faustregel sei genannt, dass Promise chains immer entweder zurückgegeben oder terminiert werden sollen, und neue Promises sofort zurückgegeben werden sollten, um die Hierarchie flach zu halten:</p>

<pre class="brush: js example-good notranslate line-numbers language-js"><code class=" language-js"><span class="token function">eineFunktion</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">ergebnis</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">eineZweiteFunktion</span><span class="token punctuation">(</span>ergennis<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">neuesErgebnis</span> <span class="token operator">=&gt;</span> <span class="token function">eineDritteFunktion</span><span class="token punctuation">(</span>neuesErgebnis<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">eineVierteFunktion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">fehler</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>fehler<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>Zu beachten ist, dass <code>() =&gt; x</code> die Kurzschreibform für <code>() =&gt; { return x; }</code> ist.</p>

<p>Im oberen Beispiel steht jetzt eine einzelne, deterministische Promise chain mit ordentlicher Fehlerbehandlung.</p>

<p>Das Verwenden von <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function"><code>async</code>/<code>await</code></a> adressiert die meisten, wenn nicht alle dieser Fehlerquellen; stattdessen kann dann der typische Fehler entstehen, dass man <a class="external" href="https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function" rel="noopener"><code>await</code></a>-Keyword vergisst.</p>

<h2 id="Wenn_Promises_auf_Tasks_treffen">Wenn Promises auf Tasks treffen</h2>

<p>In einer Situation, in der es Promises und Tasks (z.B. Events oder Callbacks) gibt, die in einer unvorhergesehenen Reihenfolge ausgeführt werden / feuern können, ist es möglich, sich einen Microtask zunutze zu machen, um den Status von Promises zu prüfen oder diese auszubalancieren, wenn diese unter bestimmten Bedingungen erzeugt werden.</p>

<p>Für weitere Informationen über Microtasks und das Einreihen einer Funktion als Microtask mittels <code><a href="https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/queueMicrotask">queueMicrotask()</a></code>, kann im <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTML_DOM_API/Microtask_guide">Microtask-Guide</a> nachlesen.</p>

<h2 id="Siehe_auch">Siehe auch</h2>

<ul>
 <li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Promise/then"><code>Promise.then()</code></a></li>
 <li><code><a href="https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/queueMicrotask">async/await</a></code></li>
 <li><a class="external" href="http://promisesaplus.com/" rel="noopener">Promises/A+ specification</a></li>
 <li><a class="external" href="https://medium.com/@ramsunvtech/promises-of-promise-part-1-53f769245a53" rel="noopener">Venkatraman.R - JS Promise (Part 1, Basics)</a></li>
 <li><a class="external" href="https://medium.com/@ramsunvtech/js-promise-part-2-q-js-when-js-and-rsvp-js-af596232525c#.dzlqh6ski" rel="noopener">Venkatraman.R - JS Promise (Part 2 - Using Q.js, When.js and RSVP.js)</a></li>
 <li><a class="external" href="https://tech.io/playgrounds/11107/tools-for-promises-unittesting/introduction" rel="noopener">Venkatraman.R - Tools for Promises Unit&nbsp;Testing</a></li>
 <li><a class="external" href="http://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html" rel="noopener">Nolan Lawson: We have a problem with promises — Common mistakes with promises</a></li>
</ul>

<div class="prevnext" style="text-align: right;">
    <p><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Details_of_the_Object_Model" rel="nofollow" style="float: left;">« zurück</a><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Iterators_and_Generators" rel="nofollow">weiter  »</a></p>
</div></article><div class="metadata"><section class="document-meta"><header class="visually-hidden"><h4>Metadata</h4></header> <ul><li class="last-modified"><b>Zuletzt verändert:</b> <time datetime="2020-07-30T12:41:00.985340">30. Juli 2020</time>,<!-- --> <a href="https://wiki.developer.mozilla.org/de/docs/Web/JavaScript/Guide/Using_promises$history" rel="nofollow">von MDN-Mitwirkenden</a></li></ul></section></div></div><div id="sidebar-quicklinks" class="sidebar"><div class="quick-links"><div class="quick-links-head sidebar-heading">Verwandte Themen</div><div>
 <ol>
  <li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript"><strong><em>JavaScript</em></strong></a></li>
  <li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Tutorials"><strong>Tutorials:</strong></a></li>
  <li class="toggle">
    <details>
      <summary>Einleitend</summary>
      <ol>
        <li><a class="new" href="https://developer.mozilla.org/de/docs/Learn/Getting_started_with_the_web/JavaScript_basics" rel="nofollow">JavaScript Grundlagen</a></li>
        <li><a href="https://developer.mozilla.org/de/docs/Learn/JavaScript/First_steps">JavaScript first steps</a></li>
        <li><a class="new" href="https://developer.mozilla.org/de/docs/Learn/JavaScript/Building_blocks" rel="nofollow">JavaScript building blocks</a></li>
        <li><a href="https://developer.mozilla.org/de/docs/Learn/JavaScript/Objects">Introducing JavaScript objects</a></li>
      </ol>
    </details>
  </li>
  <li class="toggle">
    <details open="">
      <summary>JavaScript Guide</summary>
      <ol>
          <li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Introduction" rel="nofollow">Einführung</a></li>
          <li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Grammar_and_Types" rel="nofollow">Grammatik und Typen</a></li>
          <li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Control_flow_and_error_handling" rel="nofollow">Kontrollfluss und Fehlerbehandlung</a></li>
          <li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Loops_and_iteration" rel="nofollow">Schleifen und Iterationen</a></li>
          <li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Functions" rel="nofollow">Funktionen</a></li>
          <li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Expressions_and_Operators" rel="nofollow">Ausdrücke und Operatoren</a></li>
          <li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Numbers_and_dates">Zahlen und Zeitangaben</a></li>
          <li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Text_formatting" rel="nofollow">Textformatierung</a></li>
          <li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Regular_Expressions">Reguläre Ausdrücke</a></li>
          <li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Indexed_collections">Indexierte Collections</a></li>
          <li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Keyed_collections">Collections mit Schlüsseln</a></li>
          <li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Working_with_Objects" rel="nofollow">Mit Objekten arbeiten</a></li>
          <li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Details_of_the_Object_Model" rel="nofollow">Feinheiten des Objektmodells</a></li>
          <li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Using_promises">Using promises</a></li>
          <li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Iterators_and_generators" rel="nofollow">Iteratoren und Generatoren</a></li>
          <li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Meta_programming">Metaprogrammierung</a></li>
          <li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Modules">JavaScript modules</a></li>
        </ol>
    </details>
  </li>
  <li class="toggle">
    <details>
      <summary>Fortgeschritten</summary>
      <ol>
        <li><a class="new" href="https://developer.mozilla.org/de/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks" rel="nofollow">Client-side JavaScript frameworks</a></li>
        <li><a class="new" href="https://developer.mozilla.org/de/docs/Learn/JavaScript/Client-side_web_APIs" rel="nofollow">Client-side web APIs</a></li>
        <li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/A_re-introduction_to_JavaScript" rel="nofollow">Eine Wiedereinführung in JavaScript</a></li>
        <li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Data_structures" rel="nofollow">JavaScript Datenstrukturen</a></li>
        <li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Equality_comparisons_and_sameness" rel="nofollow">Vergleiche auf Gleichheit</a></li>
        <li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Closures">Closures</a></li>
      </ol>
    </details>
  </li>
  <li class="toggle">
    <details>
      <summary>Erweitert</summary>
      <ol>
        <li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Inheritance_and_the_prototype_chain">Vererbung und Prototypenkette</a></li>
        <li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Strict_mode">Strict Modus</a></li>
        <li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Typed_arrays">JavaScript Typed-Arrays</a></li>
        <li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Memory_Management" rel="nofollow">Memory Management</a></li>
        <li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/EventLoop">Laufzeitmodell und Event-Loop</a></li>
      </ol>
    </details>
  </li>
  <li><strong><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference">Referenzen:</a></strong></li>
  <li class="toggle">
    <details>
       <summary>Standardobjekte</summary>
        <ol><li><span class="sidebar-icon"><span class="icon-only-inline" title="This is an experimental API that should not be used in production code."><i class="icon-beaker"> </i></span></span><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/AggregateError" rel="nofollow" title="The AggregateError object represents an error when several errors need to be wrapped in a single error. It is thrown when multiple errors need to be reported by an operation, for example by Promise.any(), when all promises passed to it reject.">AggregateError</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/AggregateError$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Array" title="Das JavaScript-Array ist ein globales Objekt und Konstruktor für das Erstellen von Arrays, welche listenähnliche Objekte sind.">Array</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" title="Das ArrayBuffer Objekt repräsentiert einen generischen Buffer mit fester Länge. Der Inhalt eines ArrayBuffers kann nicht direkt bearbeitet werden; stattdessen wird eines der typisierten Array-Objekte oder ein DataView Objekt verwendet, welches den Buffer in einem bestimmten Format repräsentiert und von welchem aus sein Inhalt bearbeitet werden kann.">ArrayBuffer</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/AsyncFunction" title="Der AsyncFunction Konstruktor erstellt ein neues AsyncFunction Objekt. In JavaScript ist jede asynchrone Funktion ein AsyncFunction Objekt.">AsyncFunction</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Atomics" title="Das Atomics Objekt unterstützt atomare Operationen als statische Methoden. Diese werden mit SharedArrayBuffer Objekte benutzt.">Atomics</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/BigInt" rel="nofollow" title="BigInt is a built-in object that provides a way to represent whole numbers larger than 253 - 1, which is the largest number JavaScript can reliably represent with the Number primitive and represented by the Number.MAX_SAFE_INTEGER constant. BigInt can be used for arbitrarily large integers.">BigInt</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/BigInt$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array" rel="nofollow" title="The BigInt64Array typed array represents an array of 64-bit signed integers in the platform byte order. If control over byte order is needed, use DataView instead. The contents are initialized to 0n. Once established, you can reference elements in the array using the object&#39;s methods, or by using standard array index syntax (that is, using bracket notation).">BigInt64Array</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/BigUint64Array" rel="nofollow" title="The BigUint64Array typed array represents an array of 64-bit unsigned integers in the platform byte order. If control over byte order is needed, use DataView instead. The contents are initialized to 0n. Once established, you can reference elements in the array using the object&#39;s methods, or by using standard array index syntax (that is, using bracket notation).">BigUint64Array</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/BigUint64Array$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Boolean" title="Das Boolean Objekt ist ein Objekt-Wrapper für einen booleschen Wert.">Boolean</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/DataView" title="Die DataView Ansicht unterstützt eine Low-Level Schnittstelle für das Lesen und Schreiben von mehrere Zahlentypen in einem ArrayBuffer. Diese Ansicht ist unabhängig von den Plattform Byte-Reihenfolgen.">DataView</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Date" title="Erstellt eine JavaScript Date Instanz, die einen einzelnen Moment der Zeit repräsentiert. Date Objekte basieren auf dem Zeitwert, der der Anzahl der Millisekunden seit dem 1. Januar 1970 (UTC) entspricht.">Date</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Error" title="Der Error Konstruktor erstellt ein Fehler (Error) Objekt. Instanzen von Error Objekten werden geworfen (thrown), wenn zur Laufzeit ein Fehler auftritt. Das Error Objekt kann zudem als Basis für benutzerdefinierte Fehler benutzt werden. Weiter unten werden schon eingebaute Fehlertypen beschrieben.">Error</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/EvalError" title="Das EvalError Objekt bedeutet einen Fehler in Verbindung mit der globalen eval() Funktion. Dieser Fehler wird nicht von JavaScript erzeugt, jedoch gibt es das EvalError Objekt noch aus Kompatibilitätsgründen.">EvalError</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry" rel="nofollow" title="A FinalizationRegistry object lets you request a callback when an object is garbage-collected.">FinalizationRegistry</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Float32Array" title="Das Float32Array getypte Array repräsentiert ein Array von 32 Bit Gleitkommazahlen (entspricht dem C Datengyp float) in der Plattform-Byte-Reihenfolge. Wenn Kontrolle über die Byte-Reihenfolge erforderlich ist, muss DataView stattdessen benutz werden. Die Inhalte werden mit 0 initialisiert. Wie erwartet, kann man Element in einem Array mit Objektmethoden referenzieren oder man benutzt die normale Arrayindex-Syntax (das ist die Klammernotation).">Float32Array</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Float64Array" title="Das Float64Array getypte Array repräsentiert ein Array von 64 Bit Gleitkommazahlen (entspricht dem C Datentyp double) in der Plattform-Byte-Reihenfolge. Wenn Kontrolle über die Byte-Reihenfolge erforderlich ist, muss stattdessen DataView benutz werden. Die Inhalte werden mit 0 initialisiert. Wie erwartet, kann man Elemente in einem Array mit Objektmethoden referenzieren oder man benutzt die normale Array-Index-Syntax (das ist die Klammernotation).">Float64Array</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Function" title="Der Function Konstruktor erstellt ein neues Funktion Objekt. Das direkte Aufrufen kann Funktionen dynamisch erstellen, hat aber Sicherheits- und Performanceprobleme genau wie der Einsatz von eval. Im Gegensatz zu eval ermöglicht der Function-Konstruktor die Ausführung von Code im globalen Gültigkeitsbereich, was zu besseren Programmiergewohnheiten führt und eine effizientere Code-Minimierung ermöglicht.">Function</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Generator" title="Das Generator Objekt wird von der Generator Function zurückgegeben und entspricht beidem, dem Iterable Protokoll und dem Iterator Protokoll.">Generator</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction" title="Der GeneratorFunction Konstruktor erstellt eine neues Generator Funktion Objekt. aktuell ist in JavaScript jede Generatorfunktion ein GeneratorFunction Objekt.">GeneratorFunction</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Infinity" title="Die globale Eigenschaft Infinity ist ein numerischer Wert, der die Unendlichkeit repräsentiert.">Infinity</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Int16Array" title="Das Int16Array getypte Array repräsentiert ein Array von zweierkomplement 16 Bit vorzeichenbehafteten, ganze Zahlen in der Plattform-Byte-Reihenfolge. Wenn Kontrolle über die Byte-Reihenfolge erforderlich ist, muss DataView stattdessen benutz werden. Die Inhalte werden mit 0 initialisiert. Wie erwartet, kann man Element in einem Array mit Objektmethoden referenzieren oder man benutzt die normale Arrayindex-Syntax (das ist die Klammernotation).">Int16Array</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Int32Array" title="Das Int32Array getypte Array repräsentiert ein Array von zweierkomplement 32 Bit vorzeichenbehafteten, ganze Zahlen in der Plattform-Byte-Reihenfolge. Wenn Kontrolle über die Byte-Reihenfolge erforderlich ist, muss DataView stattdessen benutz werden. Die Inhalte werden mit 0 initialisiert. Wie erwartet, kann man Element in einem Array mit Objektmethoden referenzieren oder man benutzt die normale Arrayindex-Syntax (das ist die Klammernotation).">Int32Array</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Int8Array" title="Das Int8Array getypte Array repräsentiert ein Array von zweierkomplement 8 Bit vorzeichenbehafteten, ganze Zahlen in der Plattform-Byte-Reihenfolge. Die Inhalte werden mit 0 initialisiert. Wie erwartet, kann man Element in einem Array mit Objektmethoden referenzieren oder man benutzt die normale Arrayindex-Syntax (das ist die Klammernotation).">Int8Array</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/InternalError" title="Das InternalError Objekt zeigt einen Fehler an, der in der JavaScript-Umgebung auftritt. Zum Beispiel: &quot;InternalError: too much recursion&quot;.">InternalError</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Intl" title="Das Intl Objekt ist der Namensraum für die ECMAScript Internationalisierunges API, welche sprachenabhängige Stringvergleiche, Zahlenformate und Datums bzw. Zeitformate unterstützt. Der Konstruktoren für Collator, NumberFormat und DateTimeFormat Objekte sind Eigenschaften des Intl Objektes. Diese Seite dokumentiert diese Eigenschaften sowie die Funktionalität, die in Internationalisierungskonstruktoren und anderen sprachsensitiven Funktionen gemeinsam sind.">Intl</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/JSON" title="Das JSON Objekt enthält Methoden für das Einlesen und Konvertieren der JavaScript Objekt Notation (JSON) in JavaScript und umgekehrt. Es kann nicht aufgerufen oder erstellt werden. Außer seinen zwei Methoden hat das Objekt keine interessante Funktionalität.">JSON</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Map" title="Ein Map Object iteriert in der Reihenfolge des Einfügens über seine Elemente — eine for...of Schleife gibt ein Array mit [key, value] für jede Iteration zurück.">Map</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Math" title="Math ist ein Standardobjekt, das Eigenschaften und Methoden für mathematische Konstanten und Funktionen besitzt. Es ist kein Funktionsobjekt.">Math</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/NaN" title="Die globale NaN Eigenschaft ist ein Wert, der Not-A-Number (keine Zahl) repräsentiert.">NaN</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Number" title="Das JavaScript Objekt Number ist ein Container Objekt (Wrapper Objekt), welches das Arbeiten mit numerischen Werten erlaubt. Ein Number Objekt wird erzeugt indem der Number() Konstruktor verwendet wird.">Number</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Object" title="Der Object-Konstruktor erstellt ein Objekt">Object</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Promise" title="Das Promise Objekt stellt eine Representation einer eventuellen Ausführung (oder eines Fehlschlags) einer asynchronen Operation und den daraus resultierenden Ergebnissen dar.">Promise</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Proxy" rel="nofollow" title="The Proxy object enables you to create a proxy for another object, which can intercept and redefine fundamental operations for that object.">Proxy</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Proxy$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/RangeError" title="The RangeError object indicates an error when a value is not in the set or range of allowed values.">RangeError</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError" rel="nofollow" title="The ReferenceError object represents an error when a non-existent variable is referenced.">ReferenceError</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Reflect" title="Im Gegensatz zu den meisten globalen Objekten hat Reflect keinen Konstruktor. Sie können es nicht mit einem new operator verwenden, oder Reflect als Funktion aufrufen.">Reflect</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/RegExp" title="Der RegExp constructor erstellt ein Objekt mit regulären Werten, um diese dann als Muster an einem Text anzuwenden.">RegExp</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Set" title="Ein Set-Objekt speichert eindeutige Werte jedes beliebigen Typs, egal ob es sich dabei um primitive Werte oder Objektreferenzen handelt.">Set</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer" rel="nofollow" title="The SharedArrayBuffer object is used to represent a generic, fixed-length raw binary data buffer, similar to the ArrayBuffer object, but in a way that they can be used to create views on shared memory. Unlike an ArrayBuffer, a SharedArrayBuffer cannot become detached.">SharedArrayBuffer</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/String" title="Das globale String-Objekt ist ein Konstruktor für Strings, auch Zeichenketten genannt.">String</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Symbol" rel="nofollow" title="The data type symbol is a primitive data type. The Symbol() function returns a value of type symbol, has static properties that expose several members of built-in objects, has static methods that expose the global symbol registry, and resembles a built-in object class, but is incomplete as a constructor because it does not support the syntax &quot;new Symbol()&quot;.">Symbol</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Symbol$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError" title="Das SyntaxError Objekt repräsentiert einen Fehler, der auftritt, wenn versucht wird syntaktisch falschen Quelltext zu interpretieren.">SyntaxError</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/TypeError" title="Das TypeError Objekt repräsentiert einen Fehler, wenn ein Wert nicht dem erwartetem Typ enspricht.">TypeError</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/TypedArray" rel="nofollow" title="A TypedArray object describes an array-like view of an underlying binary data buffer. There is no global property named TypedArray, nor is there a directly visible TypedArray constructor.  Instead, there are a number of different global properties, whose values are typed array constructors for specific element types, listed below. On the following pages you will find common properties and methods that can be used with any typed array containing elements of any type.">TypedArray</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/TypedArray$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/URIError" rel="nofollow" title="The URIError object represents an error when a global URI handling function was used in a wrong way.">URIError</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/URIError$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array" rel="nofollow" title="The Uint16Array typed array represents an array of 16-bit unsigned integers in the platform byte order. If control over byte order is needed, use DataView instead. The contents are initialized to 0. Once established, you can reference elements in the array using the object&#39;s methods, or using standard array index syntax (that is, using bracket notation).">Uint16Array</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array" rel="nofollow" title="The Uint32Array typed array represents an array of 32-bit unsigned integers in the platform byte order. If control over byte order is needed, use DataView instead. The contents are initialized to 0. Once established, you can reference elements in the array using the object&#39;s methods, or using standard array index syntax (that is, using bracket notation).">Uint32Array</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array" rel="nofollow" title="The Uint8Array typed array represents an array of 8-bit unsigned integers. The contents are initialized to 0. Once established, you can reference elements in the array using the object&#39;s methods, or using standard array index syntax (that is, using bracket notation).">Uint8Array</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray" rel="nofollow" title="The Uint8ClampedArray typed array represents an array of 8-bit unsigned integers clamped to 0-255; if you specified a value that is out of the range of [0,255], 0 or 255 will be set instead; if you specify a non-integer, the nearest integer will be set. The contents are initialized to 0. Once established, you can reference elements in the array using the object&#39;s methods, or using standard array index syntax (that is, using bracket notation).">Uint8ClampedArray</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/WeakMap" rel="nofollow" title="The WeakMap object is a collection of key/value pairs in which the keys are weakly referenced. The keys must be objects and the values can be arbitrary values.">WeakMap</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/WeakMap$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/WeakRef" rel="nofollow" title="A WeakRef object lets you hold a weak reference to another object, without preventing that object from getting garbage-collected.">WeakRef</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/WeakRef$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/WeakSet" rel="nofollow" title="The WeakSet object lets you store weakly held objects in a collection.">WeakSet</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/WeakSet$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly" title="Das WebAssembly JavaScript Objekt existiert als Namensraum für alle WebAssembly-bezogenen Funktionalitäten.">WebAssembly</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/decodeURI" rel="nofollow" title="The decodeURI() function decodes a Uniform Resource Identifier (URI) previously created by encodeURI() or by a similar routine.">decodeURI()</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/decodeURI$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent" title="Die Funktion decodeURIComponent() dekodiert eine URI-Komponente die zuvor durch encodeURIComponent (oder einer ähnlichen Funktion) kodiert wurden.">decodeURIComponent()</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/encodeURI" title="Die encodeURI() Funktion kodiert ein Uniform Resource Identifier (Abk. URI, englisch für einheitlicher Bezeichner für Ressurcen), indem sie jedes Vorkommen von speziellen Zeichen durch die jeweilige UTF-8 Zeichenkette ersetzt, die das Zeichen repräsentiert.">encodeURI()</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent" title="Die Methode encodeURIComponent() kodiert eine Komponente des Uniform Resource Identifier (URI) indem jedes Vorkommen bestimmter Zeichen durch ein, zwei, drei oder vier Escape-Sequenzen ersetzt werden, die der UTF8-Kodierung des Zeichens entsprechen. Vier Escape-Sequenzen werden nur bei Zeichen bestehend aus zwei &quot;Surrogate&quot;-Zeichen verwendet.">encodeURIComponent()</a></li><li><span class="sidebar-icon"><span class="icon-only-inline" title="This deprecated API should no longer be used, but will probably still work."><i class="icon-thumbs-down-alt"> </i></span></span><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/escape" title="Die veraltete Funktion escape() erzeugt einen neuen Text, in welchem gewisse Zeichen durch eine Hexadezimal-Escape-Sequenz ersetzt wurden. Es wird empfohlen, encodeURI oder encodeURIComponent stattdessen zu nutzen.">escape()</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/eval" rel="nofollow" title="The eval() function evaluates JavaScript code represented as a string.">eval()</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/eval$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/globalThis" rel="nofollow" title="The global globalThis property contains the global this value, which is akin to the global object.">globalThis</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/globalThis$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/isFinite" title="Die globale Funktion isFinite() prüft, ob eine Zahl endlich ist oder nicht. Wenn der übergeben Wert keine Nummer ist, wird dieser zuerst konvertiert.">isFinite()</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/isNaN" title="Die isNaN() Methode prüft, ob ein Wert NaN ist. Bemerkung: Aufgrund innerer Zwänge weist die isNaN Methode interessante Regeln auf. Alternativ kann die in ECMAScript 2015 definierte Methode Number.isNaN() genutzt werden.">isNaN()</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/null" title="Der Wert null repräsentiert das absichtliche Fehlen eines Wertes. Es ist einer der Primitiven Werte in Javascript.">null</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/parseFloat" title="Die parseFloat()-Funktion parst ein Zeichenketten-Argument und gibt eine Fließkommazahl zurück.">parseFloat()</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/parseInt" title="Die parseInt() Methode liest ein String-Argument ein und gibt eine ganze Zahl im angegebenen Zahlensystem zurück.">parseInt()</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/undefined" title="Die globale Eigenschaft undefined repräsentiert den Wert undefined . Dieser Wert ist einer der primitiven Typen in JavaScript.">undefined</a></li><li><span class="sidebar-icon"><span class="icon-only-inline" title="This deprecated API should no longer be used, but will probably still work."><i class="icon-thumbs-down-alt"> </i></span></span><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/unescape" title="Die veraltete unescape() Methode erstellt einen neuen String, in dem hexadezimal escapte Sequenzen mit den entsprechenden umgewandelten Zeichen ersetzt werden. Die escape Sequenz kann vorher durch eine Funktion wie escape erzeugt werden. Da unescape veraltet ist, sollte decodeURI oder decodeURIComponent verwendet werden.">unescape()</a></li><li><span class="sidebar-icon"><span class="icon-only-inline" title="This API has not been standardized."><i class="icon-warning-sign"> </i></span></span><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/uneval" title="Die uneval() Funktion gibt den Quelltext eines Objekts als String zurück.">uneval()</a></li></ol>
    </details>
  </li>
  <li class="toggle">
    <details>
      <summary>Ausdrücke &amp; Operatoren</summary>
      <ol><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Addition" rel="nofollow" title="The addition operator (+) produces the sum of numeric operands or string concatenation.">Addition (+)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Addition$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Addition_assignment" rel="nofollow" title="The addition assignment operator (+=) adds the value of the right operand to a variable and assigns the result to the variable. The types of the two operands determine the behavior of the addition assignment operator. Addition or concatenation is possible.">Addition assignment (+=)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Addition_assignment$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Assignment" rel="nofollow" title="The simple assignment operator (=) is used to assign a value to a variable. The assignment operation evaluates to the assigned value. Chaining the assignment operator is possible in order to assign a single value to multiple variables">Assignment (=)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Assignment$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Bitwise_AND" rel="nofollow" title="The bitwise AND operator (&amp;) returns a 1 in each bit position for which the corresponding bits of both operands are 1s.">Bitwise AND (&amp;)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Bitwise_AND$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Bitwise_AND_assignment" rel="nofollow" title="The bitwise AND assignment operator (&amp;=) uses the binary representation of both operands, does a bitwise AND operation on them and assigns the result to the variable.">Bitwise AND assignment (&amp;=)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Bitwise_AND_assignment$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Bitwise_NOT" rel="nofollow" title="The bitwise NOT operator (~) inverts the bits of its operand.">Bitwise NOT (~)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Bitwise_NOT$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Bitwise_OR" rel="nofollow" title="The bitwise OR operator (|) returns a 1 in each bit position for which the corresponding bits of either or both operands are 1s.">Bitwise OR (|)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Bitwise_OR$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Bitwise_OR_assignment" rel="nofollow" title="The bitwise OR assignment operator (|=) uses the binary representation of both operands, does a bitwise OR operation on them and assigns the result to the variable.">Bitwise OR assignment (|=)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Bitwise_OR_assignment$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR" rel="nofollow" title="The bitwise XOR operator (^) returns a 1 in each bit position for which the corresponding bits of either but not both operands are 1s.">Bitwise XOR (^)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR_assignment" rel="nofollow" title="The bitwise XOR assignment operator (^=) uses the binary representation of both operands, does a bitwise XOR operation on them and assigns the result to the variable.">Bitwise XOR assignment (^=)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR_assignment$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Comma_Operator" title="Der Kommaoperator wertet jeden Operanden (von links nach rechts) aus und gibt den Wert des letzten Operanden zurück.">Kommaoperator</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Conditional_Operator" title="Der bedingte (ternäre) Operator ist der einzige Operator in JavaScript, der drei Operanden hat. Er wird häufig als Kurzform eines if Statements genutzt.">Bedingter (ternärer) Operator</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Decrement" rel="nofollow" title="The decrement operator (--) decrements (subtracts one from) its operand and returns a value.">Decrement (--)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Decrement$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Destrukturierende_Zuweisung" title="Die destrukturierende Zuweisung ermöglicht es, Daten aus Arrays oder Objekten zu extrahieren, und zwar mit Hilfe einer Syntax, die der Konstruktion von Array- und Objekt-Literalen nachempfunden ist.">Destrukturierende Zuweisung</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Division" rel="nofollow" title="The division operator (/) produces the quotient of its operands where the left operand is the dividend and the right operand is the divisor.">Division (/)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Division$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Division_assignment" rel="nofollow" title="The division assignment operator (/=) divides a variable by the value of the right operand and assigns the result to the variable.">Division assignment (/=)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Division_assignment$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Equality" rel="nofollow" title="The equality operator (==) checks whether its two operands are equal, returning a Boolean result. Unlike the strict equality operator, it attempts to convert and compare operands that are of different types.">Equality (==)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Equality$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Exponentiation" rel="nofollow" title="The exponentiation operator (**) returns the result of raising the first operand to the power of the second operand.">Exponentiation (**)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Exponentiation$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Exponentiation_assignment" rel="nofollow" title="The exponentiation assignment operator (**=) raises the value of a variable to the power of the right operand.">Exponentiation assignment (**=)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Exponentiation_assignment$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/function" title="Das Schlüsselwort function kann benutzt werden, um eine Funktion innerhalb eines Ausdrucks zu definieren.">Funktionsausdruck</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Greater_than" rel="nofollow" title="The greater than operator (&gt;) returns true if the left operand is greater than the right operand, and false otherwise.">Greater than (&gt;)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Greater_than$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Greater_than_or_equal" rel="nofollow" title="The greater than or equal operator (&gt;=) returns true if the left operand is greater than or equal to the right operand, and false otherwise.">Greater than or equal (&gt;=)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Greater_than_or_equal$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Grouping" title="Der Gruppierungsoperator ( ) kontrolliert die Priorität beim Auswerten von Ausdrücken.">Gruppierungsoperator</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Increment" rel="nofollow" title="The increment operator (++) increments (adds one to) its operand and returns a value.">Increment (++)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Increment$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Inequality" rel="nofollow" title="The inequality operator (!=) checks whether its two operands are not equal, returning a Boolean result. Unlike the strict inequality operator, it attempts to convert and compare operands that are of different types.">Inequality (!=)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Inequality$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Left_shift" rel="nofollow" title="The left shift operator (&lt;&lt;) shifts the first operand the specified number of bits to the left. Excess bits shifted off to the left are discarded. Zero bits are shifted in from the right.">Left shift (&lt;&lt;)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Left_shift$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Left_shift_assignment" rel="nofollow" title="The left shift assignment operator (&lt;&lt;=) moves the specified amount of bits to the left and assigns the result to the variable.">Left shift assignment (&lt;&lt;=)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Left_shift_assignment$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Less_than" rel="nofollow" title="The less than operator (&lt;) returns true if the left operand is less than the right operand, and false otherwise.">Less than (&lt;)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Less_than$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Less_than_or_equal" rel="nofollow" title="The less than or equal operator (&lt;=) returns true if the left operand is less than or equal to the right operand, and false otherwise.">Less than or equal (&lt;=)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Less_than_or_equal$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Logical_AND" rel="nofollow" title="The logical AND (&amp;&amp;) operator (logical conjunction) for a set of operands is true if and only if all of its operands are true. It is typically used with Boolean (logical) values. When it is, it returns a Boolean value. However, the &amp;&amp; operator actually returns the value of one of the specified operands, so if this operator is used with non-Boolean values, it will return a non-Boolean value.">Logical AND (&amp;&amp;)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Logical_AND$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Logical_AND_assignment" rel="nofollow" title="The logical AND assignment (x &amp;&amp;= y) operator only assigns if x is truthy.">Logical AND assignment (&amp;&amp;=)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Logical_AND_assignment$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Logical_NOT" rel="nofollow" title="The logical NOT (!) operator (logical complement, negation) takes truth to falsity and vice versa. It is typically used with Boolean (logical) values. When used with non-Boolean values, it returns false if its single operand can be converted to true; otherwise, returns true.">Logical NOT (!)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Logical_NOT$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Logical_OR" rel="nofollow" title="The logical OR (||) operator (logical disjunction) for a set of operands is true if and only if one or more of its operands is true. It is typically used with Boolean (logical) values. When it is, it returns a Boolean value. However, the || operator actually returns the value of one of the specified operands, so if this operator is used with non-Boolean values, it will return a non-Boolean value.">Logical OR (||)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Logical_OR$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Logical_OR_assignment" rel="nofollow" title="The logical OR assignment (x ||= y) operator only assigns if x is falsy.">Logical OR assignment (||=)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Logical_OR_assignment$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Logical_nullish_assignment" rel="nofollow" title="The logical nullish assignment (x ??= y) operator only assigns if x is nullish (null or undefined).">Logical nullish assignment (??=)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Logical_nullish_assignment$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Multiplication" rel="nofollow" title="The multiplication operator (*) produces the product of the operands.">Multiplication (*)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Multiplication$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Multiplication_assignment" rel="nofollow" title="The multiplication assignment operator (*=) multiplies a variable by the value of the right operand and assigns the result to the variable.">Multiplication assignment (*=)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Multiplication_assignment$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator" rel="nofollow" title="The nullish coalescing operator (??) is a logical operator that returns its right-hand side operand when its left-hand side operand is null or undefined, and otherwise returns its left-hand side operand.">Nullish coalescing operator (??)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Objekt_Initialisierer" title="Objekte können mit new Object(), Object.create(), oder mit der literal Notation (Initialisierungs Notation) initialisiert werden. Ein Objekt Initialisierer ist eine Komma getrennte Liste von null oder mehreren Paaren von Eigenschafts-Namen und zugehörigen Werten eines Objektes, eingeschlossen in geschwungene Klammern ({}).">Objekt Initialisierer</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Operator_Precedence" title="Die Operatorpriorität bestimmt, in welcher Reihenfolge Operatoren ausgeführt werden. Operatoren, die in der Rangfolge zuerst kommen, werden auch zuerst ausgeführt.">Operatorenpriorität</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Optionale_Verkettung" title="Der ?. Operator funktioniert ähnlich wie der . -Verkettungs Operator, außer dass er keinen Fehler bei einem nullish (null oder undefined) Wert auswirft, sondern stattdessen den Ausdruck beendet und undefined zurückgibt.">Optionale Verkettung</a></li><li><span class="sidebar-icon"><span class="icon-only-inline" title="This is an experimental API that should not be used in production code."><i class="icon-beaker"> </i></span></span><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Pipeline_operator" title="Der experimentelle Pipline Operator |&gt; (aktuell in Stage 1) erlaubt es verkettete Funktionsaufrufe in einer Lesbaren form zu erstellen. Grundsätzlich ist der Pipline Operator syntaktischer Zucker für den Aufruf einer Funktion mit einem Argument. Er erlaubt es">Pipeline Operator</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Property_Accessors" title="Eigenschaftszugriffe erlauben den Zugriff auf Eigenschaften eines Objekts, indem die Punktnotation oder Klammernotation benutzt wird.">Eigenschaftszugriff</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Remainder" rel="nofollow" title="The remainder operator (%) returns the remainder left over when one operand is divided by a second operand. It always takes the sign of the dividend.">Remainder (%)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Remainder$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Remainder_assignment" rel="nofollow" title="The remainder assignment operator (%=) divides a variable by the value of the right operand and assigns the remainder to the variable.">Remainder assignment (%=)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Remainder_assignment$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Right_shift" rel="nofollow" title="The right shift operator (&gt;&gt;) shifts the first operand the specified number of bits to the right. Excess bits shifted off to the right are discarded. Copies of the leftmost bit are shifted in from the left. Since the new leftmost bit has the same value as the previous leftmost bit, the sign bit (the leftmost bit) does not change. Hence the name &quot;sign-propagating&quot;.">Right shift (&gt;&gt;)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Right_shift$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Right_shift_assignment" rel="nofollow" title="The right shift assignment operator (&gt;&gt;=) moves the specified amount of bits to the right and assigns the result to the variable.">Right shift assignment (&gt;&gt;=)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Right_shift_assignment$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Spread_syntax" title="The source for this interactive example is stored in a GitHub repository. If you&#39;d like to contribute to the interactive examples project, please clone https://github.com/mdn/interactive-examples and send us a pull request.">Spread syntax</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Strict_equality" rel="nofollow" title="The strict equality operator (===) checks whether its two operands are equal, returning a Boolean result. Unlike the equality operator, the strict equality operator always considers operands of different types to be different.">Strict equality (===)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Strict_equality$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Strict_inequality" rel="nofollow" title="The strict inequality operator (!==) checks whether its two operands are not equal, returning a Boolean result. Unlike the inequality operator, the strict inequality operator always considers operands of different types to be different.">Strict inequality (!==)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Strict_inequality$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Subtraction" rel="nofollow" title="The subtraction operator (-) subtracts the two operands, producing their difference.">Subtraction (-)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Subtraction$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Subtraction_assignment" rel="nofollow" title="The subtraction assignment operator (-=) subtracts the value of the right operand from a variable and assigns the result to the variable.">Subtraction assignment (-=)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Subtraction_assignment$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Unary_negation" rel="nofollow" title="The unary negation operator (-) precedes its operand and negates it.">Unary negation (-)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Unary_negation$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Unary_plus" rel="nofollow" title="The unary plus operator (+) precedes its operand and evaluates to its operand but attempts to convert it into a number, if it isn&#39;t already.">Unary plus (+)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Unary_plus$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift" rel="nofollow" title="The unsigned right shift operator (&gt;&gt;&gt;) (zero-fill right shift) shifts the first operand the specified number of bits to the right. Excess bits shifted off to the right are discarded. Zero bits are shifted in from the left. The sign bit becomes 0, so the result is always non-negative. Unlike the other bitwise operators, zero-fill right shift returns an unsigned 32-bit integer.">Unsigned right shift (&gt;&gt;&gt;)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift_assignment" rel="nofollow" title="The unsigned right shift assignment operator (&gt;&gt;&gt;=) moves the specified amount of bits to the right and assigns the result to the variable.">Unsigned right shift assignment (&gt;&gt;&gt;=)</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift_assignment$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/async_function" title="Das async function Schlüsselwort kann benutzt werden, um async Funktionen in Ausdrücken zu benutzen.">async function Ausdruck</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/await" title="Der await Operator wird genutzt, um auf einen Promise zu warten. Er kann nur in einer async Funktion benutzt werden.">await</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/class" title="Der class-Ausdruck ist eine Methode zur Definition einer Klasse in ECMAScript 2015. Ähnlich wie beim function-Ausdruck kann der class-Ausdruck benannt oder unbenannt sein. Ist er benannt, so gilt der Name nur lokal im Klassenkörper. JavaScript-Klassen nutzen prototyp-basierte Vererbung.">Der class-Ausdruck</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/delete" title="Der JavaScript delete-Operator entfernt eine Eigenschaft eines Objekts. Wenn keine weitere Referenz auf dieselbe Eigenschaft mehr existiert, wird diese automatisch freigegeben.">delete Operator</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/function*" title="Das function* Schlüsselwort kann benutzt werden, um Generatorfunktionen in einem Ausdruck zu definieren.">function* Ausdruck</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/in" title="Der in operator gibt true zurück, falls die gegebene Eigenschaft im gegebenen Objekt existiert.">in operator</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/instanceof" title="Der instanceof Operator prüft, ob ein Objekt die prototype Eigenschaft einer Konstruktorfunktion in seiner Prototypenkette besitzt.">instanceof</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/new" title="Der new Operator erzeugt eine Instanz eines benutzerdefinierten Objekttyps oder eines Standardtyps, welcher eine Konstruktorfunktion besitzt.">new Operator</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/new.target" title="Die new.target Eigenschaft lässt erkennen, ob eine Funktion oder ein Konstruktor mit dem new Operator aufgerufen wurde. In Konstruktoren und Funktionen die mit dem new Operator instanziiert wurde, gibt new.target eine Referenz zu dem Konstruktor oder der Funktion zurück. In normalen Funktionsaufrufen hat new.target den Wert undefined.">new.target</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/super" title="Wenn ein Konstruktor verwendet wird, muss das super Schlüsselwort verwendet werden, bevor das this Schlüsselwort verwendet werden kann. Mit dem super Schlüsselwort kann man auch Funktionen im Vaterobjekt ausführen.">super</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/this" title="Das this Schlüsselwort einer Funktion in JavaScript verhält sich verglichen mit anderen Sprachen ein bisschen anders. Es gibt zudem Unterschiede zwischen dem strict Modus und nicht strict Modus.">this</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/typeof" title="Der typeof Operator gibt einen String zurück, der den Typ des unausgewerteten Operanden beschreibt.">typeof</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/void" title="Der void Operator evaluiert einen gegebenen Ausdruck und gibt dann undefined zurück.">void Ausdruck</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/yield" title="Das yield Schlüsselwort wird eingesetzt zum Anhalten und Fortsetzen einer Generatorfunktion (function* oder veralteten Generatorfunktion) eingesetzt.">yield</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Operators/yield*" title="Der yield* Ausdruck wird eingesetzt um an einen anderen Generator oder iterierbares Objekt zu delegieren.">yield*</a></li></ol>
    </details>
  </li>
  <li class="toggle">
    <details>
      <summary>Anweisungen &amp; Deklarationen</summary>
      <ol><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/async_function" title=" Die async function Deklaration definiert eine asynchrone Funktion, die ein AsyncFunction Objekt zurück gibt.">async function</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/block" title="Eine Blockanweisung (oder in anderen Sprachen Verbundanweisung) wird genutzt, um Anweisungen zu gruppieren. Ein Block wird durch ein Paar geschweifte Klammern abgegrenzt. Optional kann ihm ein Label zugewiesen werden.">block</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/break" title="Die break Anweisung beendet die aktuelle Schleife, switch-Anweisung oder Anweisungen die mit einem label versehen sind und sorgt dafür, dass das Programm mit der Anweisung weiterläuft, die auf die beendete Anweisung folgt.">break</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/class" title="Genau wie mit class expressions, wird der body der Klassendeklaration im strict mode ausgeführt. Die constructor Eigenschaft ist optional.">Klasse</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/const" title="Die const-Deklaration erstellt eine Konstante. Wie bei der Deklaration einer Variablen mit let ist der Gültigkeitsbereich auf den lokalen Block begrenzt. Der Wert einer Konstanten kann nicht verändert werden durch Zuweisung oder Neudeklaration.">const</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/continue" title="Die continue Anweisung beendet die Ausführung von Anweisungen im aktuellen Durchlauf der aktuellen oder benannten Schleife und setzt die Schleife mit der nächsten Iteration fort.">continue</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/debugger" title="Die Anweisung debugger ruft eine nicht näher bestimmte Debugging-Funktionalität des Interpreters auf. Naheliegend, jedoch nicht vorgeschrieben, ist das Pausieren des Programmablaufs und Öffnen des Debuggers an dieser Stelle.
 Stellt der Interpreter keine Debugging-Möglichkeiten zur Verfügung, hat die Anweisung keine Auswirkungen.">debugger</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/do...while" title="Das do...while statement erstellt eine Schleife, die einen bestimmten Ausdruck ausführt, bis die zu überprüfende Aussage falsch wird. Die Aussage wird überprüft, nachdem der Ausdruck ausgeführt wurde, sodass der Ausdruck mindenstens einmal ausgeführt wird.">do...while</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/Empty" title="Eine leere Anweisung dient der Angabe keiner Anweisung, obwohl die JavaScript Syntax eine erwarten würde.">empty</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/export" title="Das export-Statement wird verwendet, um Funktionen und Objekte aus einer gegebenen Datei (oder Modul) zu exportieren.">export</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/for" title="Die for Anweisung beschreibt eine Schleife mit drei optionalen Ausdrücken und einer oder mehreren Anweisungen.">for</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/for-await...of" rel="nofollow" title="The for await...of statement creates a loop iterating over async iterable objects as well as on sync iterables, including: built-in String, Array, Array-like objects (e.g., arguments or NodeList), TypedArray, Map, Set, and user-defined async/sync iterables. It invokes a custom iteration hook with statements to be executed for the value of each distinct property of the object. Like await operator, the statement can only be used inside an async function.">for await...of</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/for-await...of$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/for...in" title="Die Schleife for…in durchläuft alle aufzählbaren Eigenschaften eines Objekts (mit Ausnahme jener, deren Name ein Symbol ist) in willkürlicher Reihenfolge und führt für jede ihren Anweisungsblock aus.">for...in</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/for...of" title="Mit dem for...of statement können sogenannte iterable objects durchlaufen werden (Array, Map, Set, das arguments Objekt und weitere eingeschlossen), wobei auf jeden gefundenen Wert eigene Statements ausgeführt werden können.">for...of</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/funktion" title="Die Funktionsdeklaration definiert eine Funktion mit den angegebenen Parametern.">Funktion</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/function*" title="Die function*-Deklaration ( Schlüsselwort function gefolgt von einem Stern) definiert eine Generatorfunktion, welche ein  Generator-Objekt zurückgibt.">function*</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/if...else" title="Die if-Anweisung führt Anweisungen aus, wenn eine bestimmte Bedingung zu true ausgewertet wird. Wird die Bedingung zu false ausgewertet, können andere Anweisungen ausgeführt werden.">if...else</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/import" title="Das import Statement wird verwendet um Funktionen, Objekte und Primitives zu importieren die von einem externen Modul, einem anderen Script, etc. exportiert wurden.">import</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/import.meta" rel="nofollow" title="The import.meta object exposes context-specific metadata to a JavaScript module. It contains information about the module, like the module&#39;s URL.">import.meta</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/import.meta$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/label" title="Ein Statement kann ein Label erhalten und zusammen mit dem break oder continue Statements verwendet werden. Das Label ist das Präfix von einem Statement mit einer Bezeichner zum referenzieren.">label</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/let" title="Das Schlüsselwort let deklariert eine Variable im Gültigkeitsbereich des lokalen Blocks. Optional wird die Variable mit einem Wert initialisiert. let leitet sich vom englischen Verb &quot;to let&quot; ab, so daß man die Zeile &quot;let x = 3&quot; lesen kann als: &quot;lassen wir x 3 sein&quot; (let x be three), bekannt aus der Programmiersprache BASIC.">let</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/return" title="Die return  Anweisung beendet einen Funktionsaufruf und spezifiziert einen Wert, der von der Funktion zum Aufrufer zurückgegeben wird.">return</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/switch" title="Die switch Anweisung wertet einen Ausdruck aus. Diese Auswertung wird mit einer case Klausel verglichen und (bei Übereinstimmung) die entsprechenden Anweisungen ausgeführt.">switch</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/throw" title="Die throw Anweisung &quot;wirft&quot; eine benutzerdefinierte Exception (Ausnahme). Die Programmausführung der aktuellen Funktion bzw. des globalen Codes wird angehalten (Anweisungen nach throw werden dann nicht mehr ausgeführt), und die Programmausführung wird an den nächsthöheren catch Block in der Ausführungshierarchie übergeben. Falls in der gesamten Ausführungschierarchie kein catch Block definiert wurde, wird das Programm komplett angehalten.">throw</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/try...catch" title="Die try...catch-Anweisung (sinngemäß: testen und verarbeiten) rahmt einen Block von Anweisungen (try statements) ein und legt Reaktionen (catch statementes) fest, die im Fehlerfall ausgeführt werden.">try...catch</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/var" title="Mit dem Schlüsselwort var deklariert man Variablen und initialisiert diese optional.">var</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/while" title="Die while-Anweisung (Engl. statement) beschreibt eine Schleife, die solange durchlaufen wird wie die Schleifenbedingung wahr (Engl. true) ergibt. Die Schleifenbedingung (Engl. condition) wird am Anfang der Schleife ausgewertet.">while</a></li><li><span class="sidebar-icon"><span class="icon-only-inline" title="This deprecated API should no longer be used, but will probably still work."><i class="icon-thumbs-down-alt"> </i></span></span><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/with" rel="nofollow" title="The with statement extends the scope chain for a statement.">with</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/with$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li></ol>
    </details>
  </li>
  <li class="toggle">
    <details>
      <summary>Funktionen</summary>
      <ol><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Functions/Pfeilfunktionen" title="Der Ausdruck einer Pfeilfunktion hat eine kürzere Syntax als ein Funktionsausdruck und hat kein eigenes this, arguments, super, oder new.target. Solche Funktionsausdrücke sind am besten für Funktionen, die nicht als Methode genutzt werden, geeignet und können nicht als Konstruktoren verwendet werden.">Pfeilfunktionen</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Functions/Default_parameters" title="Standard Funktionsparameter erlaubt es formale Parameter mit vorgegebenen Werten zu initialisieren, wenn beim Funktionsaufruf kein Wert oder undefined übergeben wird.">Default parameters</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Functions/Methoden_Definitionen" title="Beginnend mit ECMAScript 2015 wurde eine kürzere Syntax für Methodendefinitionen in Objekt Initialisierungen eingeführt. Es ist eine Abkürzung für die Zuweisung einer Funktion an einen Methodennamen.">Methoden Definitionen</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Functions/rest_parameter" title="Mit der Rest Parameter Syntax kann man beliebig viele Parameter als Array empfangen.">Rest Parameter</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Functions/arguments" title="Das arguments-Objekt ist ein Array-ähnliches Objekt, das auf die übergebenen Parameter einer Funktion verweist.">Arguments object</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Functions/get" title="Die get Syntax bindet eine Objekteigenschaft an eine Funktion welche aufgerufen wird, wenn die Eigenschaft abgefragt wird.">Getter</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Functions/set" title="Die set Syntax bindet eine Objekteigenschaft an eine Funktion welche aufgerufen wird, wenn die Eigenschaft neu beschrieben wird.">Setter</a></li></ol>
    </details>
  </li>
  <li class="toggle">
    <details>
      <summary>Klassen</summary>
      <ol><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Classes/Private_class_fields" rel="nofollow" title="Class properties are public by default and can be examined or modified outside the class. In ES2019, the ability to define private class fields using a hash # prefix is added.">Private class fields</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Classes/Private_class_fields$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Classes/Public_class_fields" rel="nofollow" title="Both static and instance public fields are writable, enumerable, and configurable properties. As such, unlike their private counterparts, they participate in prototype inheritance.">Public class fields</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Classes/Public_class_fields$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Klassen/constructor" title="Die constructor Methode ist eine spezielle Methode für das erzeugen und initialisieren von Objekten, die mit dem Schlüsselwort class erzeugt wurden.">Konstruktor</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Klassen/extends" title="Das extends Schlüsselwort wird in einer Klassendeklaration oder in einem Klassenausdruck verwendet, um eine, von einer anderen Klasse, abgeleitete Klasse zu erzeugen.">Erweitern</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Klassen/static" title="Das static Schüsselwort definiert statische Methoden für eine Klasse.">Statische Methoden</a></li></ol>
    </details>
  </li>
  <li class="toggle">
    <details>
      <summary>Fehler</summary>
      <ol><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Property_access_denied" title="Es wurde versucht auf ein Objekt zuzugreifen, wofür man nicht ausreichend berechtig ist. In den meisten Fällen handelt es sich um ein &lt;iframe&gt; Element, das von einer anderen Domäne geladen wurde und die Same-Origin Policy verletzt.">Error: Permission denied to access property "x"</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Too_much_recursion" title="InternalError.">InternalError: too much recursion</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Not_a_codepoint" title="RangeError">RangeError: argument is not a valid code point</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Invalid_array_length" title="RangeError">RangeError: invalid array length</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Invalid_date" title="RangeError">RangeError: invalid date</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Precision_range" title="RangeError">RangeError: precision is out of range</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Bad_radix" title="RangeError">RangeError: radix must be an integer</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Resulting_string_too_large" title="RangeError">RangeError: repeat count must be less than infinity</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Negative_repetition_count" title="RangeError">RangeError: repeat count must be non-negative</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Not_defined" title="ReferenceError.">ReferenceError: "x" is not defined</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Undeclared_var" title="ReferenceError Warnung nur im Strict mode.">ReferenceError: assignment to undeclared variable "x"</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Cant_access_lexical_declaration_before_init" title="ReferenceError">ReferenceError: can't access lexical declaration`X' before initialization</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Deprecated_caller_or_arguments_usage" title="Eine ReferenceError Warnung, die nur im Strict Mode auftaucht. Die JavaScript-Ausführung wird dadurch nicht angehalten.">ReferenceError: deprecated caller or arguments usage</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Invalid_assignment_left-hand_side" title="ReferenceError.">ReferenceError: invalid assignment left-hand side</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Undefined_prop" title="ReferenceError Fehlermeldung tritt nur im  strikten Modus auf.">ReferenceError: reference to undefined property "x"</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Deprecated_octal" title="SyntaxError nur im Strict Mode.">SyntaxError: "0"-prefixed octal literals and octal escape seq. are deprecated</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Strict_Non_Simple_Params" title="SyntaxError.">SyntaxError: "use strict" not allowed in function with non-simple parameters</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Reserved_identifier" title="SyntaxError">SyntaxError: "x" is a reserved identifier</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/JSON_bad_parse" title="SyntaxError">SyntaxError: JSON.parse: bad parsing</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Malformed_formal_parameter" title="SyntaxError">SyntaxError: Malformed formal parameter</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Unexpected_token" title="SyntaxError">SyntaxError: Unexpected token</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Deprecated_source_map_pragma" title="Eine Warnung die als SyntaxError auftritt. Die Ausführung von JavaScript wird nicht unterbrochen.">SyntaxError: Using //@ to indicate sourceURL pragmas is deprecated. Use //# instead</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Invalid_for-of_initializer" title="SyntaxError">SyntaxError: a declaration in the head of a for-of loop can't have an initializer</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Delete_in_strict_mode" title="SyntaxError nur im Strict Mode.">SyntaxError: applying the 'delete' operator to an unqualified name is deprecated</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Invalid_for-in_initializer" title="SyntaxError nur im Strict Mode.">SyntaxError: for-in loop head declarations may not have initializers</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Unnamed_function_statement" title="SyntaxError">SyntaxError: function statement requires a name</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Identifier_after_number" title="SyntaxError">SyntaxError: identifier starts immediately after numeric literal</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Illegal_character" title="SyntaxError">SyntaxError: illegal character</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Bad_regexp_flag" title="SyntaxError">SyntaxError: invalid regular expression flag "x"</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Missing_parenthesis_after_argument_list" title="SyntaxError.">SyntaxError: missing ) after argument list</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Missing_parenthesis_after_condition" title="SyntaxError">SyntaxError: missing ) after condition</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Missing_colon_after_property_id" title="SyntaxError">SyntaxError: missing : after property id</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Missing_semicolon_before_statement" title="SyntaxError.">SyntaxError: missing ; before statement</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Missing_initializer_in_const" title="SyntaxError">SyntaxError: missing = in const declaration</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Missing_bracket_after_list" title="SyntaxError.">SyntaxError: missing ] after element list</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Missing_formal_parameter" title="SyntaxError">SyntaxError: missing formal parameter</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Missing_name_after_dot_operator" title="SyntaxError">SyntaxError: missing name after . operator</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/No_variable_name" title="SyntaxError">SyntaxError: missing variable name</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Missing_curly_after_function_body" title="SyntaxError">SyntaxError: missing } after function body</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Missing_curly_after_property_list" title="SyntaxError">SyntaxError: missing } after property list</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Redeclared_parameter" title="SyntaxError">SyntaxError: redeclaration of formal parameter "x"</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Bad_return_or_yield" title="SyntaxError.">SyntaxError: return not in function</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Equal_as_assign" title="SyntaxError Warnung nur im strict mode.">SyntaxError: test for equality (==) mistyped as assignment (=)?</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Unterminated_string_literal" title="SyntaxError">SyntaxError: unterminated string literal</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/No_properties" title="TypeError.">TypeError: "x" has no properties</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Unexpected_type" title="TypeError.">TypeError: "x" is (not) "y"</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Not_a_constructor" title="TypeError">TypeError: "x" is not a constructor</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Not_a_function" title="TypeError.">TypeError: "x" is not a function</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/No_non-null_object" title="TypeError">TypeError: "x" is not a non-null object</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Read-only" title="TypeError">TypeError: "x" is read-only</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/is_not_iterable" title="TypeError">TypeError: 'x' is not iterable</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/More_arguments_needed" title="TypeError.">TypeError: More arguments needed</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Reduce_of_empty_array_with_no_initial_value" title="TypeError">TypeError: Reduce of empty array with no initial value</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Called_on_incompatible_type" title="TypeError">X.prototype.y called on incompatible type</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Dead_object" title="TypeError">TypeError: can't access dead object</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Cant_access_property" title="TypeError.">TypeError: can't access property "x" of "y"</a></li><li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Errors/Cant_assign_to_property" rel="nofollow" title="The JavaScript strict mode exception &quot;can&#39;t assign to property&quot; occurs when attempting to create a property on primitive value such as a symbol, a string, a number or a boolean. Primitive values cannot hold any property.">TypeError: can't assign to property "x" on "y": not an object</a> <a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Errors/Cant_assign_to_property$translate" rel="nofollow" style="opacity: 0.5;" title="Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche übersetzt. Machen Sie mit und helfen Sie, das zu erledigen!">[Übersetzen]</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Cant_define_property_object_not_extensible" title="TypeError">TypeError: can't define property "x": "obj" is not extensible</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Non_configurable_array_element" title="TypeError">TypeError: can't delete non-configurable array element</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Cant_redefine_property" title="TypeError">TypeError: can't redefine non-configurable property "x"</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/in_operator_no_object" title="TypeError">TypeError: cannot use 'in' operator to search for 'x' in 'y'</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Cyclic_object_value" title="TypeError">TypeError: cyclic object value</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/invalid_right_hand_side_instanceof_operand" title="TypeError">TypeError: invalid 'instanceof' operand 'x'</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Array_sort_argument" title="TypeError">TypeError: invalid Array.prototype.sort argument</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Typed_array_invalid_arguments" title="TypeError">TypeError: invalid arguments</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Invalid_const_assignment" title="TypeError">TypeError: invalid assignment to const "x"</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Cant_delete" title="TypeError nur im strict mode.">TypeError: property "x" is non-configurable and can't be deleted</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Getter_only" title="TypeError nur im strict mode.">TypeError: setting getter-only property "x"</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Var_hides_argument" title="TypeError Warnung nur im strict mode.">TypeError: variable "x" redeclares argument</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Malformed_URI" title="URIError">URIError: malformed URI sequence</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Already_has_pragma" title="Warnung. Die Ausführung von JavaScript wird nicht unterbrochen.">Warning: -file- is being assigned a //# sourceMappingURL, but already has one</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Bad_octal" title="Warnung. Die Ausführung von JavaScript wird nicht gestoppt.">Warning: 08/09 is not a legal ECMA-262 octal constant</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Deprecated_toLocaleFormat" title="Warnung. JavaScript stoppt die ausführung nicht an.">Warning: Date.prototype.toLocaleFormat is deprecated</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/For-each-in_loops_are_deprecated" title="Warnung">Warning: JavaScript 1.6's for-each-in loops are deprecated</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Deprecated_String_generics" title="Warnung. JavaScript unterbricht die Ausführung nicht.">Warning: String.x is deprecated; use String.prototype.x instead</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Deprecated_expression_closures" title="Warnung. Die Ausführung von JavaScript wird nicht angehalten.">Warning: expression closures are deprecated</a></li><li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Fehler/Stmt_after_return" title="Warnung">Warning: unreachable code after return statement</a></li></ol>
    </details>
  </li>
  <li class="toggle">
    <details>
      <summary>Weiteres</summary>
      <ol>
        <li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/JavaScript_technologies_overview" rel="nofollow">Technologienübersicht</a></li>
        <li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Lexical_grammar">Lexikalische Grammatik</a></li>
        <li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Data_structures" rel="nofollow">JavaScript Datenstrukturen</a></li>
        <li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Enumerability_and_ownership_of_properties" rel="nofollow">Enumerability und Ownership von Eigenschaften</a></li>
        <li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Iteration_protocols">Protokolle zur Iteration</a></li>
        <li><a href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Strict_mode">Strict Modus</a></li>
        <li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Strict_mode/Transitioning_to_strict_mode" rel="nofollow">Zum Strict Modus wechseln</a></li>
        <li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Template_literals" rel="nofollow">Template Strings</a></li>
        <li><a class="new" href="https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Deprecated_and_obsolete_features" rel="nofollow">Veraltete Bestandteile</a></li>
      </ol>
    </details>
  </li>
 </ol>
</div></div></div></div></main><section class="newsletter-container"><div id="newsletter-form-container" class="newsletter"><form class="newsletter-form nodisable" name="newsletter-form"><section class="newsletter-head"><h2 class="newsletter-teaser">Lernen Sie das Beste aus dem Bereich Web-Entwicklung</h2><p class="newsletter-description">Erhalten Sie das Neueste und Wichtigste von MDN direkt in Ihren Posteingang.</p><p class="newsletter-lang" aria-hidden="false">Der Newsletter wird derzeit nur auf Englisch angeboten.</p></section><fieldset class="newsletter-fields"><input type="hidden" name="fmt" value="H"><input type="hidden" name="newsletters" value="app-dev"><div class="form-group newsletter-group-email"><label for="newsletter-email-input" class="form-label offscreen">E-Mail-Adresse</label><input type="email" id="newsletter-email-input" name="email" class="form-input newsletter-input-email" placeholder="Sie@example.com" required=""></div><div id="newsletter-privacy" class="hidden" aria-hidden="true"><input type="checkbox" id="newsletter-privacy-input" name="privacy" required=""><label for="newsletter-privacy-input">Ich bin einverstanden, dass Mozilla meine Daten wie in diesem <a href="https://www.mozilla.org/privacy/">Datenschutzhinweis beschrieben verwendet</a> beschrieben verwendet.</label></div><div class="newsletter-group-submit"><button id="newsletter-submit" type="submit" class="button neutral newsletter-submit">Jetzt anmelden</button></div></fieldset></form><button type="button" class="only-icon newsletter-hide" aria-controls="newsletter-form-container"><span>Newsletter-Abonnement ausblenden</span><svg xmlns="http://www.w3.org/2000/svg" role="presentation" viewBox="0 0 24 24"><path d="M18.3 5.71a.996.996 0 00-1.41 0L12 10.59 7.11 5.7A.996.996 0 105.7 7.11L10.59 12 5.7 16.89a.996.996 0 101.41 1.41L12 13.41l4.89 4.89a.996.996 0 101.41-1.41L13.41 12l4.89-4.89c.38-.38.38-1.02 0-1.4z" fill-rule="nonzero"></path></svg></button></div></section><footer id="nav-footer" class="nav-footer" data-testid="footer"><div class="content-container"><a href="https://developer.mozilla.org/de/" class="nav-footer-logo">MDN-Web-Dokumentation</a><ul class="link-list-mdn"><li><a href="https://developer.mozilla.org/de/docs/Web">Web-Technologien</a></li><li><a href="https://developer.mozilla.org/de/docs/Learn">Lernen Sie Web-Entwicklung</a></li><li><a href="https://developer.mozilla.org/de/docs/MDN/About">Über MDN</a></li><li><a href="https://developer.mozilla.org/de/docs/MDN/Feedback">Feedback</a></li></ul><ul class="link-list-moz"><li><a href="https://www.mozilla.org/about/" target="_blank" rel="noopener noreferrer">Über</a></li><li><a href="https://shop.spreadshirt.com/mdn-store/" target="_blank" rel="noopener noreferrer">MDN Web Docs Store</a></li><li><a href="https://www.mozilla.org/contact/" target="_blank" rel="noopener noreferrer">Kontakt</a></li><li><a href="https://www.mozilla.org/firefox/?utm_source=developer.mozilla.org&amp;utm_campaign=footer&amp;utm_medium=referral" target="_blank" rel="noopener noreferrer">Firefox</a></li></ul><div class="social social-mdn"><h4>MDN</h4><ul><li><a href="https://twitter.com/mozdevnet" target="_blank" rel="noopener noreferrer"><svg class="icon icon-twitter" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 26 28" aria-label="Twitter" role="img" focusable="false"><path d="M25.312 6.375a10.85 10.85 0 01-2.531 2.609c.016.219.016.438.016.656 0 6.672-5.078 14.359-14.359 14.359-2.859 0-5.516-.828-7.75-2.266.406.047.797.063 1.219.063 2.359 0 4.531-.797 6.266-2.156a5.056 5.056 0 01-4.719-3.5c.313.047.625.078.953.078.453 0 .906-.063 1.328-.172a5.048 5.048 0 01-4.047-4.953v-.063a5.093 5.093 0 002.281.641 5.044 5.044 0 01-2.25-4.203c0-.938.25-1.797.688-2.547a14.344 14.344 0 0010.406 5.281 5.708 5.708 0 01-.125-1.156 5.045 5.045 0 015.047-5.047 5.03 5.03 0 013.687 1.594 9.943 9.943 0 003.203-1.219 5.032 5.032 0 01-2.219 2.781c1.016-.109 2-.391 2.906-.781z"></path></svg></a></li><li><a href="https://github.com/mdn/" target="_blank" rel="noopener noreferrer"><svg class="icon icon-github" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 28" aria-label="GitHub" role="img" focusable="false"><path d="M12 2c6.625 0 12 5.375 12 12 0 5.297-3.437 9.797-8.203 11.391-.609.109-.828-.266-.828-.578 0-.391.016-1.687.016-3.297 0-1.125-.375-1.844-.812-2.219 2.672-.297 5.484-1.313 5.484-5.922 0-1.313-.469-2.375-1.234-3.219.125-.313.531-1.531-.125-3.187-1-.313-3.297 1.234-3.297 1.234a11.28 11.28 0 00-6 0S6.704 6.656 5.704 6.969c-.656 1.656-.25 2.875-.125 3.187-.766.844-1.234 1.906-1.234 3.219 0 4.594 2.797 5.625 5.469 5.922-.344.313-.656.844-.766 1.609-.688.313-2.438.844-3.484-1-.656-1.141-1.844-1.234-1.844-1.234-1.172-.016-.078.734-.078.734.781.359 1.328 1.75 1.328 1.75.703 2.141 4.047 1.422 4.047 1.422 0 1 .016 1.937.016 2.234 0 .313-.219.688-.828.578C3.439 23.796.002 19.296.002 13.999c0-6.625 5.375-12 12-12zM4.547 19.234c.031-.063-.016-.141-.109-.187-.094-.031-.172-.016-.203.031-.031.063.016.141.109.187.078.047.172.031.203-.031zm.484.532c.063-.047.047-.156-.031-.25-.078-.078-.187-.109-.25-.047-.063.047-.047.156.031.25.078.078.187.109.25.047zm.469.703c.078-.063.078-.187 0-.297-.063-.109-.187-.156-.266-.094-.078.047-.078.172 0 .281s.203.156.266.109zm.656.656c.063-.063.031-.203-.063-.297-.109-.109-.25-.125-.313-.047-.078.063-.047.203.063.297.109.109.25.125.313.047zm.891.391c.031-.094-.063-.203-.203-.25-.125-.031-.266.016-.297.109s.063.203.203.234c.125.047.266 0 .297-.094zm.984.078c0-.109-.125-.187-.266-.172-.141 0-.25.078-.25.172 0 .109.109.187.266.172.141 0 .25-.078.25-.172zm.906-.156c-.016-.094-.141-.156-.281-.141-.141.031-.234.125-.219.234.016.094.141.156.281.125s.234-.125.219-.219z"></path></svg></a></li></ul></div><div class="social social-moz"><h4>Mozilla</h4><ul><li><a href="https://twitter.com/mozilla" target="_blank" rel="noopener noreferrer"><svg class="icon icon-twitter" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 26 28" aria-label="Twitter" role="img" focusable="false"><path d="M25.312 6.375a10.85 10.85 0 01-2.531 2.609c.016.219.016.438.016.656 0 6.672-5.078 14.359-14.359 14.359-2.859 0-5.516-.828-7.75-2.266.406.047.797.063 1.219.063 2.359 0 4.531-.797 6.266-2.156a5.056 5.056 0 01-4.719-3.5c.313.047.625.078.953.078.453 0 .906-.063 1.328-.172a5.048 5.048 0 01-4.047-4.953v-.063a5.093 5.093 0 002.281.641 5.044 5.044 0 01-2.25-4.203c0-.938.25-1.797.688-2.547a14.344 14.344 0 0010.406 5.281 5.708 5.708 0 01-.125-1.156 5.045 5.045 0 015.047-5.047 5.03 5.03 0 013.687 1.594 9.943 9.943 0 003.203-1.219 5.032 5.032 0 01-2.219 2.781c1.016-.109 2-.391 2.906-.781z"></path></svg></a></li><li><a href="https://www.instagram.com/mozillagram/" target="_blank" rel="noopener noreferrer"><svg class="icon icon-instagram" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 28" aria-label="Instagram" role="img" focusable="false"><path d="M16 14c0-2.203-1.797-4-4-4s-4 1.797-4 4 1.797 4 4 4 4-1.797 4-4zm2.156 0c0 3.406-2.75 6.156-6.156 6.156S5.844 17.406 5.844 14 8.594 7.844 12 7.844s6.156 2.75 6.156 6.156zm1.688-6.406c0 .797-.641 1.437-1.437 1.437S16.97 8.39 16.97 7.594s.641-1.437 1.437-1.437 1.437.641 1.437 1.437zM12 4.156c-1.75 0-5.5-.141-7.078.484-.547.219-.953.484-1.375.906s-.688.828-.906 1.375c-.625 1.578-.484 5.328-.484 7.078s-.141 5.5.484 7.078c.219.547.484.953.906 1.375s.828.688 1.375.906c1.578.625 5.328.484 7.078.484s5.5.141 7.078-.484c.547-.219.953-.484 1.375-.906s.688-.828.906-1.375c.625-1.578.484-5.328.484-7.078s.141-5.5-.484-7.078c-.219-.547-.484-.953-.906-1.375s-.828-.688-1.375-.906C17.5 4.015 13.75 4.156 12 4.156zM24 14c0 1.656.016 3.297-.078 4.953-.094 1.922-.531 3.625-1.937 5.031s-3.109 1.844-5.031 1.937c-1.656.094-3.297.078-4.953.078s-3.297.016-4.953-.078c-1.922-.094-3.625-.531-5.031-1.937S.173 20.875.08 18.953C-.014 17.297.002 15.656.002 14s-.016-3.297.078-4.953c.094-1.922.531-3.625 1.937-5.031s3.109-1.844 5.031-1.937c1.656-.094 3.297-.078 4.953-.078s3.297-.016 4.953.078c1.922.094 3.625.531 5.031 1.937s1.844 3.109 1.937 5.031C24.016 10.703 24 12.344 24 14z"></path></svg></a></li></ul></div><p id="license" class="footer-license">© 2005-<!-- -->2020<!-- --> Mozilla and individual contributors. Content is available under<!-- --> <a href="https://developer.mozilla.org/docs/MDN/About#Copyrights_and_licenses">these licenses</a>.</p><ul class="footer-legal"><li><a href="https://www.mozilla.org/about/legal/terms/mozilla" target="_blank" rel="noopener noreferrer">Nutzungsbedingungen</a></li><li><a href="https://www.mozilla.org/privacy/websites/" target="_blank" rel="noopener noreferrer">Datenschutz</a></li><li><a href="https://www.mozilla.org/privacy/websites/#cookies" target="_blank" rel="noopener noreferrer">Cookies</a></li></ul></div></footer><div class="developer-needs mdn-cta-container cta-background-linear"><div id="mdn-cta-content" class="mdn-cta-content"><div id="mdn_browser_compat_report" class="mdn-cta-content-container"><h2 class="mdn-cta-title slab-text">MDN-Browser-Kompatibilitätsbericht</h2><p class="mdn-cta-copy">A deep dive into web compatibility frustrations, with useful <a href="https://insights.developer.mozilla.org/" target="_blank" rel="noopener noreferrer">insights</a> into how they could be overcome.</p></div><p class="mdn-cta-button-container"><a href="https://mdn-web-dna.s3-us-west-2.amazonaws.com/MDN-Browser-Compatibility-Report-2020.pdf" class="mdn-cta-button" target="_blank" rel="noopener noreferrer">Lesen Sie den Bericht (PDF, 1,8 MB)</a></p></div><div class="mdn-cta-controls"><button type="button" id="mdn-cta-close" class="mdn-cta-close" aria-label="Banner schließen"><svg xmlns="http://www.w3.org/2000/svg" role="presentation" viewBox="0 0 24 24" class="icon icon-close"><path d="M18.3 5.71a.996.996 0 00-1.41 0L12 10.59 7.11 5.7A.996.996 0 105.7 7.11L10.59 12 5.7 16.89a.996.996 0 101.41 1.41L12 13.41l4.89 4.89a.996.996 0 101.41-1.41L13.41 12l4.89-4.89c.38-.38.38-1.02 0-1.4z" fill-rule="nonzero"></path></svg></button></div></div></div>
<script>window._react_data = JSON.parse("{\"locale\":\"de\",\"stringCatalog\":{\"$5 <perMontSub />\":\"5 $ <perMontSub />\",\"${subscription.brand} ending in ${subscription.last4}\":\"${subscription.brand} endet auf ${subscription.last4}\",\"%(sentDate)s by %(user)s\":\"%(sentDate)s von %(user)s\",\"...more docs\":\"\u2026weitere Dokumente\",\"/mo\":\"/Monat\",\"2018 Mozilla Annual Report\":\"Mozilla-Gesch\u00E4ftsbericht 2018\",\"A newer version of this article has been published since this draft was saved. You can restore the draft to view the content, but you will not be able to submit it for publishing.\":\"Seit dieser Entwurf gespeichert wurde, wurde eine neuere Version dieses Artikels ver\u00F6ffentlicht. Sie k\u00F6nnen den Entwurf wiederherstellen, um den Inhalt anzusehen, k\u00F6nnen ihn aber nicht zur Ver\u00F6ffentlichung \u00FCbermitteln.\",\"APIs / DOM\":\"APIs / DOM\",\"About\":\"\u00DCber\",\"About MDN\":\"\u00DCber MDN\",\"Accessibility\":\"Barrierefreiheit\",\"Account Settings\":\"Kontoeinstellungen\",\"Add a translation\":\"Eine \u00DCbersetzung hinzuf\u00FCgen\",\"Adding more content, and updating current content\":\"Hinzuf\u00FCgen weiterer Inhalte und Aktualisieren des aktuellen Inhalts\",\"Adding offline access to MDN\":\"Offline-Zugriff auf MDN hinzuf\u00FCgen\",\"All payment information goes through payment processor <stripeLink />, and a record of your payment will be stored by Mozilla. Mozilla does not receive or store your credit card number.\":\"Alle Zahlungsdaten laufen \u00FCber unseren Zahlungsdienstleister <stripeLink /> und Mozilla speichert eine Aufzeichnung Ihrer Zahlung. Mozilla erh\u00E4lt und speichert Ihre Kreditkartennummer nicht.\",\"An error happened trying to load the Stripe integration\":\"Beim Laden der Stripe-Integration ist ein Fehler aufgetreten\",\"An error occurred trying to set up the subscription with Stripe's server. We've recorded the error and will investigate it.\":\"Beim Einrichten des Dauerauftrags auf dem Stripe-Server ist ein Fehler aufgetreten. Wir haben den Fehler aufgezeichnet und werden ihn untersuchen.\",\"An unhandled error occurred in the application. We apologize for the inconvenience!\":\"In der Anwendung ist ein nicht behandelter Fehler aufgetreten. Wir entschuldigen uns f\u00FCr die Unannehmlichkeiten!\",\"Application rendering error\":\"Fehler bei der Darstellung der Anwendung\",\"Are you sure you want to cancel?\":\"Soll dies wirklich abgebrochen werden?\",\"Article Title Lookup / Link Text\":\"Suche nach Artikel-Titel / Link-Text\",\"Aspect ratio\":\"Seitenverh\u00E4ltnis\",\"Attachments\":\"Anh\u00E4nge\",\"Autosave enabled.\":\"Automatisches Speichern aktiviert.\",\"Because we aren\u2019t looking for a lump sum. Our goal is to create a broad base of financial support from the people who benefit from the work of MDN.\":\"Weil wir keinen Pauschalbetrag suchen. Unser Ziel ist es, eine breite Basis finanzieller Unterst\u00FCtzung von den Menschen zu schaffen, die von der Arbeit des MDN profitieren.\",\"Become a monthly supporter\":\"Werden Sie monatlicher Unterst\u00FCtzer\",\"Briefly outline the issue you are highlighting.\":\"Beschreiben Sie kurz das von Ihnen hervorgehobene Problem.\",\"Browser Extensions\":\"Browser-Erweiterungen\",\"Browser documentation and release notes are good supporting items to accompany your message. A demo hosted on services like Codepen or JSBin are perfect for providing real examples of your findings.\":\"Browserdokumentation und Versionshinweise sind gute unterst\u00FCtzende Elemente f\u00FCr Ihre Nachricht. Eine auf Diensten wie Codepen oder JSBin gehostete Demo ist perfekt, um echte Beispiele f\u00FCr Ihre Funde zu liefern.\",\"By clicking this button, I authorize Mozilla to charge this payment method each month, according to the <paymentTermsLink />, until I cancel my subscription.\":\"Durch Klicken auf diese Schaltfl\u00E4che erm\u00E4chtige ich Mozilla, diese Zahlung jeden Monat gem\u00E4\u00DF den <paymentTermsLink /> abzubuchen bis ich Dauerauftrag storniere.\",\"CSS\":\"CSS\",\"Can I keep track of my report?\":\"Kann ich meinen Bericht weiterverfolgen?\",\"Can you provide a brief explanation?\":\"K\u00F6nnen Sie eine kurze Erkl\u00E4rung geben?\",\"Cancel or manage your subscription\":\"Ihren Dauerauftrag stornieren oder bearbeiten\",\"Cancel subscription\":\"Abonnement k\u00FCndigen\",\"Changes saved.\":\"\u00C4nderungen gespeichert.\",\"Check back for invitations to attend special events and conferences.\":\"Hier erhalten Sie sp\u00E4ter Einladungen zu exklusiven Veranstaltungen und Konferenzen.\",\"Close\":\"Schlie\u00DFen\",\"Close Account\":\"Konto schlie\u00DFen\",\"Close account\":\"Konto schlie\u00DFen\",\"Close banner\":\"Banner schlie\u00DFen\",\"Close notification\":\"Benachrichtigung schlie\u00DFen\",\"Close search\":\"Suche schlie\u00DFen\",\"Close submenu\":\"Untermen\u00FC schlie\u00DFen\",\"Compare this date to the latest revision date to ensure you're not overwriting later changes.\":\"Vergleichen Sie dieses Datum mit dem Datum der letzten Version, um keine neueren \u00C4nderungen zu \u00FCberschreiben.\",\"Connection error:\":\"Verbindungsfehler:\",\"Contact Us\":\"Kontakt\",\"Content rendering error\":\"Fehler bei der Darstellung der Inhalte\",\"Continue\":\"Weiter\",\"Contributions\":\"Mitarbeit\",\"Cookies\":\"Cookies\",\"Create a Redirect\":\"Eine Weiterleitung einrichten\",\"Current language is %s. Choose your preferred language.\":\"Die aktuelle Sprache ist %s. W\u00E4hlen Sie Ihre bevorzugte Sprache.\",\"Currently, Mozilla pays for site operations and overhead (including staff writers and web developers). MDN user payments will fund accelerating current projects or launching new ones, including:\":\"Zurzeit bezahlt Mozilla f\u00FCr den Betrieb der Website und den Overhead (einschlie\u00DFlich angestellter Autoren und Webentwicklern). MDN-Nutzerzahlungen werden zur Beschleunigung laufender Projekte oder zur Einf\u00FChrung neuer Projekte beitragen, darunter:\",\"Default\":\"Standard\",\"Delete your account and account data.\":\"L\u00F6schen Sie Ihr Konto und Ihre Kontodaten.\",\"Details\":\"Details\",\"Developer Guides\":\"Entwickler-Leitf\u00E4den\",\"Discard draft.\":\"Entwurf verwerfen.\",\"Discounts on swag\":\"Rabatte auf Fanartikel\",\"Dismiss\":\"Schlie\u00DFen\",\"Do you have any supporting material?\":\"Haben Sie irgendwelche unterst\u00FCtzenden Materialien?\",\"Document\":\"Dokument\",\"Draft autosaved:\":\"Entwurf automatisch gespeichert:\",\"Draft discarded.\":\"Entwurf verworfen.\",\"Draft discarded:\":\"Entwurf verworfen:\",\"Draft published:\":\"Entwurf ver\u00F6ffentlicht:\",\"Draft restored.\":\"Entwurf wiederhergestellt.\",\"E-mail\":\"E-Mail-Adresse\",\"Edit Page\":\"Seite bearbeiten\",\"Edit in wiki\":\"Im Wiki bearbeiten\",\"Edit profile\":\"Profil bearbeiten\",\"Email\":\"E-Mail-Adresse\",\"Embed YouTube Video\":\"YouTube-Video einbetten\",\"English\":\"Englisch\",\"Enjoy exclusive member perks\":\"Genie\u00DFen Sie exklusive Vorteile f\u00FCr Mitglieder\",\"Enter optional feedback\u2026\":\"Geben Sie optionales Feedback ein\u2026\",\"Error loading content, please refresh the page\":\"Fehler beim Laden des Inhalts, bitte aktualisieren Sie die Seite\",\"Error submitting as %(type)s\":\"Fehler \u00FCbermittelt als %(type)s\",\"Expires ${subscription.expires_at}\":\"L\u00E4uft ab am ${subscription.expires_at}\",\"FAQ\":\"FAQ\",\"FAQs\":\"H\u00E4ufig gestellte Fragen (FAQ)\",\"Feedback\":\"Feedback\",\"Finish\":\"Abschlie\u00DFen\",\"Game development\":\"Spieleentwicklung\",\"Get 20% off at the <merchStoreLink /> with the coupon code MDN20OFF.\":\"Erhalten Sie 20% auf Artikel aus dem <merchStoreLink /> mit dem Coupon-Code MDN20OFF.\",\"Get Firefox help\":\"Holen Sie sich Hilfe zu Firefox\",\"Get discounts on sweet loot from the <merchStoreLink />.\":\"Erhalten Sie Rabatte auf Fanartikel aus dem <merchStoreLink />.\",\"Get exclusive content, offers and invitations to your inbox\":\"Erhalten Sie exklusive Inhalte, Angebote und Einladungen in Ihren Posteingang\",\"Get invited to attend special events and conferences.\":\"Erhalten Sie Einladungen zu exklusiven Veranstaltungen und Konferenzen.\",\"Get the latest and greatest from MDN delivered straight to your inbox.\":\"Erhalten Sie das Neueste und Wichtigste von MDN direkt in Ihren Posteingang.\",\"Get web development help\":\"Holen Sie sich Hilfe zu Web-Entwicklung\",\"Graphics\":\"Grafik\",\"HTML\":\"HTML\",\"HTTP\":\"HTTP\",\"Hang on! Updating filters\u2026\":\"Einen Moment! Die Filter werden aktualisiert\u2026\",\"Help us understand the top 10 needs of Web developers and designers.\":\"Helfen Sie uns, die zehn wichtigsten Anforderungen von Webentwicklern und -designern zu verstehen.\",\"Hide Newsletter Sign-up\":\"Newsletter-Abonnement ausblenden\",\"History\":\"Versionsgeschichte\",\"If you have questions, please read the <faqLink /> or you can also <supportEmail />\":\"Wenn Sie Fragen haben, lesen Sie bitte das <faqLink />, oder Sie k\u00F6nnen <supportEmail />\",\"If you haven\u2019t previously confirmed a subscription to a Mozilla - related newsletter you may have to do so. Please check your inbox or your spam filter for an email from us.\":\"Falls Sie bislang kein Abonnement eines Mozilla-Newsletters best\u00E4tigen mussten, so ist das eventuell jetzt notwendig. Bitte pr\u00FCfen Sie den Posteingang und den Spamordner auf eine E-Mail von uns.\",\"If you would like to cancel or manage your monthly subscription, go to <subscriptionLink />.\":\"Wenn Sie Ihren monatlichen Dauerauftrag stornieren oder verwalten m\u00F6chten, gehen Sie zu <subscriptionLink />.\",\"If you would like to manage your monthly subscription, such as changing your card account details, you will need to cancel your subscription and sign up again using the new card details. To cancel, go to the <subscriptionsLink />, or if you have any questions please contact <emailLink />.\":\"Wenn Sie Ihr monatliches Abonnement verwalten m\u00F6chten, z.&thinsp;B. Ihre Kartenkontodaten \u00E4ndern m\u00F6chten, m\u00FCssen Sie Ihr Abonnement k\u00FCndigen und sich erneut mit den neuen Kartendaten anmelden. Zum Stornieren besuchen Sie <subscriptionsLink /> oder wenden Sie sich bei Fragen an <emailLink />.\",\"Improving performance of the site\":\"Verbesserung der Leistung der Website\",\"Insert Code Sample Template\":\"Vorlage f\u00FCr Beispielquelltext einf\u00FCgen\",\"Insert Code Sample iFrame\":\"iFrame mit Beispielquelltext einf\u00FCgen\",\"Invitations to events\":\"Einladungen zu Veranstaltungen\",\"I\u2019m okay with Mozilla handling my info as explained in this <privacyLink/>.\":\"Ich bin einverstanden, dass Mozilla meine Daten wie in diesem <privacyLink/> beschrieben verwendet.\",\"JavaScript\":\"JavaScript\",\"Join the MDN community\":\"Werden Sie Teil der MDN-Gemeinschaft\",\"Jump to section\":\"Zum Abschnitt springen\",\"Keep subscription\":\"Abonnement behalten\",\"Language\":\"Sprache\",\"Last modified:\":\"Zuletzt ver\u00E4ndert:\",\"Launch\":\"Starten\",\"Learn Web Development\":\"Lernen Sie Web-Entwicklung\",\"Learn more\":\"Weitere Informationen\",\"Learn the best of web development\":\"Lernen Sie das Beste aus dem Bereich Web-Entwicklung\",\"Learn web development\":\"Web-Entwicklung lernen\",\"Link\":\"Link\",\"Loading\u2026\":\"Wird geladen\u2026\",\"Locate a YouTube Video\":\"Ein YouTube-Video finden\",\"MDN\":\"MDN\",\"MDN Browser Compatibility Report\":\"MDN-Browser-Kompatibilit\u00E4tsbericht\",\"MDN Merch store\":\"MDN-Fanshop\",\"MDN Redirect\":\"MDN-Weiterleitung\",\"MDN Web DNA\":\"MDN Web DNA\",\"MDN Web Docs\":\"MDN-Web-Dokumentation\",\"MDN is funded out of the Mozilla Corporation general budget (and has been since it was founded in 2005). Mozilla Corporation intends to continue to financially support MDN into the future, even as we broaden and diversify the sources of MDN funding. We just want to do more things with you and for you!\":\"MDN wird aus dem Gesamthaushalt der Mozilla Corporation finanziert (so wie seit seiner Gr\u00FCndung im Jahr 2005). Die Mozilla Corporation beabsichtigt, MDN weiterhin finanziell zu unterst\u00FCtzen, auch wenn wir die Quellen der MDN-Finanzierung erweitern und diversifizieren. Wir wollen einfach mehr mit Ihnen und f\u00FCr Sie tun!\",\"MDN is seeking direct support from our users. We\u2019d like to accelerate our growth and extend the maintenance of MDN\u2019s content and platform, with assistance from those who use it.\":\"MDN bittet unsere Benutzer um direkte Unterst\u00FCtzung. Wir m\u00F6chten unser Wachstum beschleunigen und die Wartung der Inhalte und Plattformen von MDN mit Unterst\u00FCtzung derjenigen, die sie verwenden, erweitern.\",\"Manage email addresses\":\"E-Mail-Adressen verwalten\",\"Manage monthly subscription\":\"Monatlichen Dauerauftrag verwalten\",\"MathML\":\"MathML\",\"Minimum %(min)s and maximum %(max)s characters.\":\"Mindestens %(min)s und maximal %(max)s Zeichen.\",\"Modernizing the MDN platform\":\"Modernisierung der MDN-Plattform\",\"Monthly payments\":\"Monatliche Zahlungen\",\"More tutorials and guides\":\"Weitere Anleitungen und Leitf\u00E4den\",\"Mozilla\":\"Mozilla\",\"Mozilla Corporation\":\"Mozilla Corporation\",\"Mozilla Foundation\":\"Mozilla Foundation\",\"Mozilla will collect and store your name and email, which will be used to send transactional emails (e.g. receipts and notifications). Mozilla will not have access to or store your credit card number.\":\"Mozilla sammelt und speichert Ihren Namen und Ihre E-Mail-Adresse, die zum Senden von Transaktions-E-Mails (z.&thinsp;B. Quittung und Benachrichtigungen) verwendet werden. Mozilla hat keinen Zugriff auf Ihre Kreditkartennummer und speichert sie auch nicht.\",\"Name\":\"Name\",\"Never\":\"Nie\",\"New tag...\":\"Neues Schlagwort\u2026\",\"Next\":\"Weiter\",\"Next step (2 of 2)\":\"N\u00E4chster Schritt (2 von 2)\",\"No\":\"Nein\",\"No Highlight\":\"Keine Hervorherbung\",\"No attachments available\":\"Keine Anh\u00E4nge verf\u00FCgbar\",\"No matching documents found.\":\"Keine passenden Dokumente gefunden.\",\"No selection\":\"Keine Auswahl\",\"No. Payments to Mozilla Corporation in support of MDN are not tax deductible in the United States or other countries.\":\"Nein. Zahlungen an die Mozilla Corporation zur Unterst\u00FCtzung von MDN sind in den USA oder anderen L\u00E4ndern nicht steuerlich absetzbar.\",\"Nothing found if nothing searched.\":\"Ohne Suchbegriff keine Ergebnisse.\",\"On this Page\":\"Auf dieser Seite\",\"Open\":\"\u00D6ffnen\",\"Open implementation notes\":\"Implementierungshinweise \u00F6ffnen\",\"Open in %(site)s\":\"\u00D6ffnen in %(site)s\",\"Open in CodePen\":\"In CodePen \u00F6ffnen\",\"Open in JSFiddle\":\"In JSFiddle \u00F6ffnen\",\"Open search\":\"Suche \u00F6ffnen\",\"Open the survey in a new tab\":\"Die Umfrage in einem neuen Tab \u00F6ffnen\",\"Optional\":\"Optional\",\"Our goal is to provide accurate, real values for all our compatibility data tables. Notifying MDN of inaccurate data or supplying new data pushes us further towards our goal of providing 100% real values to the developer community.\":\"Unser Ziel ist es, genaue, echte Werte f\u00FCr alle unsere Kompatibilit\u00E4tsdatentabellen bereitzustellen. Durch die Benachrichtigung von MDN \u00FCber ungenaue Daten oder die Bereitstellung neuer Daten kommen wir unserem Ziel n\u00E4her, der Entwicklergemeinschaft 100% echte Werte zu liefern.\",\"Our team will review your report. Once we verify the information you have supplied we will update this browser compatability table accordingly.\":\"Unser Team \u00FCberpr\u00FCft Ihren Bericht. Sobald wir die von Ihnen angegebenen Informationen \u00FCberpr\u00FCft haben, aktualisieren wir diese Browserkompatibilit\u00E4tstabelle entsprechend.\",\"Our user base has grown exponentially in the last few years and we have a large list of improvements we\u2019d like to make. While MDN is currently wholly funded by Mozilla, and has been from the beginning, we\u2019d like to create a closer, more collaborative relationship between our audience (that\u2019s you!), our content (written for you and sometimes by you), and our supporters (also, you, again)-- to accelerate those improvements.\":\"Unsere Benutzerbasis ist in den letzten Jahren exponentiell gewachsen und wir haben eine gro\u00DFe Liste von Verbesserungen, die wir vornehmen m\u00F6chten. W\u00E4hrend MDN derzeit vollst\u00E4ndig von Mozilla finanziert wird und dies von Anfang an war, m\u00F6chten wir eine engere, kooperativere Beziehung zwischen unserem Publikum (das sind Sie!), Unseren Inhalten (f\u00FCr Sie und manchmal von Ihnen geschrieben) und unsere Unterst\u00FCtzer (wieder Sie) \u2013 um diese Verbesserungen zu beschleunigen.\",\"Page has not yet been created.\":\"Seite wurde noch nicht erstellt.\",\"Paste YouTube Video URL\":\"URL von YouTube-Video einf\u00FCgen\",\"Payment Terms\":\"Zahlungsbedingungen\",\"Payments are not tax deductible\":\"Zahlungen sind nicht steuerlich absetzbar\",\"Please <signInLink /> to continue.\":\"Bitte <signInLink /> um fortzufahren.\",\"Please help translate this article from English\":\"Bitte helfen Sie uns, diesen Artikel aus dem Englischen zu \u00FCbersetzen\",\"Please read our <paymentLink /> for more information.\":\"Weitere Informationen finden Sie in unseren <paymentLink />.\",\"Please read our <termsLink /> for more information.\":\"Weitere Informationen finden Sie in unseren <termsLink />.\",\"Please select the browser or browsers which are affected.\":\"Bitte w\u00E4hlen Sie den oder die betroffenen Browser aus.\",\"Postal/Zip Code: ${subscription.zip}\":\"Postleitzahl: ${subscription.zip}\",\"Previous\":\"Zur\u00FCck\",\"Previous step\":\"Zur\u00FCck\",\"Privacy\":\"Datenschutz\",\"Privacy Policy\":\"Datenschutzhinweis beschrieben verwendet\",\"Published version\":\"Ver\u00F6ffentlichte Version\",\"Publishing changes\u2026\":\"\u00C4nderungen werden ver\u00F6ffentlicht\u2026\",\"Publishing failed. Please copy and paste your changes into a safe place and try submitting the form using the \\\"Publish\\\" button.\":\"Ver\u00F6ffentlichung fehlgeschlagen. Bitte kopieren Sie Ihre \u00C4nderungen an einen sicheren Ort und versuchen Sie, das Formular mit der Schaltfl\u00E4che \u201EVer\u00F6ffentlichen\u201C abzusenden.\",\"Publishing failed. You are not currently signed in. Please use a new tab to sign in and try publishing again.\":\"Ver\u00F6ffentlichung fehlgeschlagen. Sie sind derzeit nicht angemeldet. Bitte verwenden Sie einen neuen Tab, um sich anzumelden und erneut zu versuchen, den Inhalt zu ver\u00F6ffentlichen.\",\"Read the report (PDF, 1.8mb)\":\"Lesen Sie den Bericht (PDF, 1,8 MB)\",\"References\":\"Nachschlagewerke\",\"References & Guides\":\"Referenzen & Leitf\u00E4den\",\"Related Topics\":\"Verwandte Themen\",\"Related topics\":\"Verwandte Themen\",\"Report a content problem\":\"Melden Sie ein Inhaltsproblem\",\"Report an issue\":\"Ein Problem melden\",\"Report sent\":\"Bericht gesendet\",\"Restore draft.\":\"Entwurf wiederherstellen.\",\"Result\":\"Ergebnis\",\"Return to compatibility table.\":\"Zur Kompatibilit\u00E4tstabelle zur\u00FCckkehren.\",\"Revert\":\"Zur\u00FCcksetzen\",\"Revision history.\":\"Versionsgeschichte.\",\"Sample CSS Content\":\"CSS-Beispielinhalt\",\"Sample Finder\":\"Beispielfinder\",\"Sample HTML Content\":\"HTML-Beispielinhalt\",\"Sample JavaScript Content\":\"JavaScript-Beispielinhalt\",\"Save\":\"Speichern\",\"Search MDN\":\"MDN durchsuchen\",\"Search Stack Overflow\":\"Stack Overflow durchsuchen\",\"Section\":\"Abschnitt\",\"Sections in Document\":\"Abschnitte im Dokument\",\"See\":\"Siehe\",\"Select a section\":\"W\u00E4hlen Sie einen Abschnitt aus\",\"Select an attachment\":\"W\u00E4hlen Sie einen Anhang aus\",\"Select language\":\"Sprache w\u00E4hlen\",\"Selected: \":\"Ausgew\u00E4hlt: \",\"Send\":\"Senden\",\"Send Feedback\":\"Feedback senden\",\"Send report\":\"Bericht senden\",\"Separately, the Mozilla Foundation is a not-for-profit, making its money primarily from donations and royalties from Mozilla Corporation. As a not-for-profit, the Mozilla Foundation reports these revenues publicly every trailing year, as in our most recent <annualReportLink />.\":\"Unabh\u00E4ngig davon ist die Mozilla Foundation eine gemeinn\u00FCtzige Organisation, die ihr Geld haupts\u00E4chlich aus Spenden und Lizenzgeb\u00FChren der Mozilla Corporation bezieht. Als gemeinn\u00FCtzige Organisation berichtet die Mozilla Foundation jedes Jahr \u00F6ffentlich \u00FCber diese Einnahmen, wie in unserem letzten <annualReportLink />.\",\"Showing all \":\"Alle Ergebnisse werden angezeigt\",\"Showing results %(start)s to %(end)s.\":\"Ergebnisse von %(start)s bis %(end)s werden angezeigt.\",\"Sign in\":\"Anmelden\",\"Sign in to support MDN. If you haven't already created an account, you will be prompted to do so after signing in.\":\"Melden Sie sich an, um MDN zu unterst\u00FCtzen. Wenn Sie noch kein Konto erstellt haben, werden Sie nach der Anmeldung dazu aufgefordert.\",\"Sign out\":\"Abmelden\",\"Sign up now\":\"Jetzt anmelden\",\"Skip to main content\":\"Zum Hauptinhalt springen\",\"Skip to search\":\"Zur Suche springen\",\"Sorry!\":\"Es tut uns leid!\",\"Sorry, we can\u2019t seem to reach the server. We are working to fix the problem. Please try again later.\":\"Es tut uns leid, wir k\u00F6nnen den Server anscheinend nicht erreichen. Wir arbeiten daran, das Problem zu beheben. Bitte versuchen Sie es sp\u00E4ter noch einmal.\",\"Step %(current)s of %(total)s\":\"Schritt %(current)s von %(total)s\",\"Stripe\":\"Stripe\",\"Submitted as %(submissionType)s\":\"\u00DCbermittelt als %(submissionType)s\",\"Submitting...\":\"\u00DCbermitteln\u2026\",\"Subscription\":\"Abonnement\",\"Subscription terms\":\"Bedingungen zum Dauerauftrag\",\"Support MDN with a %(amount)s monthly subscription\":\"Unterst\u00FCtzen Sie MDN mit einem monatlichen Abonnement von %(amount)s US-Dollar\",\"Support MDN with a %(amount)s monthly subscription and get back more of the knowledge and tools you rely on for when your work has to work.\":\"Unterst\u00FCtzen Sie MDN mit einem monatlichen Betrag von %(amount)s. Sie erhalten im Gegenzug mehr Wissen und Werkzeuge, auf die Sie sich verlassen k\u00F6nnen, wenn Ihre Arbeit funktionieren muss.\",\"Supporting integrations with popular developer tools\":\"Unterst\u00FCtzung von Integration mit g\u00E4ngigen Entwicklerwerkzeugen\",\"Syntax Highlighter\":\"Syntaxhervorhebung\",\"Take the survey\":\"An Umfrage teilnehmen\",\"Technologies\":\"Technologien\",\"Technologies Overview\":\"Technologie\u00FCbersicht\",\"Tell us what\u2019s wrong with this table\":\"Sagen Sie uns, was mit dieser Tabelle nicht stimmt\",\"Terms\":\"Nutzungsbedingungen\",\"Thank you for becoming a monthly supporter!\":\"Vielen Dank, dass Sie ein monatlicher Unterst\u00FCtzer werden!\",\"Thank you for helping.\":\"Danke f\u00FCr Ihre Mitteilung!\",\"Thank you for submitting your feedback!\":\"Danke f\u00FCr Ihre Meinung!\",\"Thank you!\":\"Vielen Dank!\",\"Thanks! Please check your inbox to confirm your subscription.\":\"Vielen Dank! Bitte kontrollieren Sie Ihren Posteingang, um Ihr Abonnement zu best\u00E4tigen.\",\"The <mozillaLink /> and MDN are separate organizations and programs. Donations to the Mozilla Foundation are <taxLink /> to the fullest extent permitted by law, and go to support Mozilla public and charitable programs in one general fund. MDN is part of <mocoLink /> and payments to MDN are not used in Mozilla\u2019s charitable programs but are reinvested into MDN\u2019s content, tools, and platform.\":\"Die <mozillaLink /> und MDN sind separate Organisationen und Programme. Spenden an die Mozilla Foundation sind <taxLink />, soweit gesetzlich zul\u00E4ssig, und dienen der Unterst\u00FCtzung \u00F6ffentlicher und gemeinn\u00FCtziger Programme von Mozilla in einem allgemeinen Fonds. MDN ist Teil von <mocoLink /> und Zahlungen an MDN werden nicht in Mozillas Wohlt\u00E4tigkeitsprogrammen verwendet, sondern in die Inhalte, Werkzeuge und Plattformen von MDN reinvestiert.\",\"The Mozilla Corporation, which funds MDN, makes money primarily from royalties from search providers on Firefox (such as Google, Amazon, DuckDuckGo, and others).\":\"Die Mozilla Corporation, die MDN finanziert, verdient Geld in erster Linie mit Lizenzgeb\u00FChren von Suchanbietern in Firefox (wie Google, Amazon, DuckDuckGo und anderen).\",\"The URL you've entered doesn't appear to be valid\":\"Die eingegebene URL scheint ung\u00FCltig zu sein\",\"The money collected through MDN (minus processing fees, taxes, etc.) will be reinvested back into MDN. We will publish a monthly report on MDN Web Docs showing what work was completed.\":\"Die \u00FCber MDN gesammelten Betr\u00E4ge (abz\u00FCglich Bearbeitungsgeb\u00FChren, Steuern usw.) werden wieder in MDN investiert. Wir werden einen monatlichen Bericht \u00FCber MDN Web Docs ver\u00F6ffentlichen, der zeigt, welche Arbeiten abgeschlossen wurden.\",\"The newsletter is offered in English only at the moment.\":\"Der Newsletter wird derzeit nur auf Englisch angeboten.\",\"This translation is in progress.\":\"Diese \u00DCbersetzung ist in Arbeit.\",\"This translation is incomplete.\":\"Diese \u00DCbersetzung ist unvollst\u00E4ndig.\",\"To find out more about why MDN is raising money through monthly subscriptions, please visit our <faqLink />.\":\"Um mehr dar\u00FCber zu erfahren, warum MDN durch monatliche Abonnements Geld sammelt, besuchen Sie bitte unseren <faqLink />.\",\"To see your member perks, visit the <thankYouLink />\":\"Um die Vorteile Ihrer Mitgliedschaft zu sehen, besuchen Sie die <thankYouLink />\",\"Training and webinars\":\"Schulungen und Webinare\",\"Try again\":\"Erneut versuchen\",\"Tutorials\":\"Anleitungen\",\"URL\":\"URL\",\"Update your details and manage your preferences\":\"Aktualisieren Sie Ihre Daten und verwalten Sie Ihre Einstellungen\",\"Updated filters.\":\"Die Filter wurden aktualisiert.\",\"Useful things\":\"N\u00FCtzliche Dinge\",\"Username\":\"Benutzername\",\"View Page\":\"Seite betrachten\",\"View draft.\":\"Entwurf ansehen.\",\"View profile\":\"Profil ansehen\",\"Viewing old draft. This draft cannot be published.\":\"Dies ist ein alter Entwurf. Er kann nicht ver\u00F6ffentlicht werden.\",\"We're sorry, something went wrong. Please contact <emailLink />.\":\"Es tut uns leid. Etwas ist schief gegangen. Bitte wenden Sie sich an <emailLink />.\",\"Web Technologies\":\"Web-Technologien\",\"What are we missing?\":\"Was fehlt bei uns?\",\"What happens next?\":\"Was passiert als n\u00E4chstes?\",\"What should the sample title be?\":\"Welchen Titel sollte das Beispiel haben?\",\"When you request to delete your account we will also cancel your monthly subscription and not charge you for subsequent months.\":\"Wenn Sie die L\u00F6schung Ihres Kontos beantragen, wird Ihr monatlicher Dauerauftrag ebenfalls gel\u00F6scht und Ihre Zahlungskarte wird in Zukunft nicht mehr belastet.\",\"Which browsers are affected?\":\"Welche Browser sind betroffen?\",\"Which table row is affected?\":\"Welche Tabellenzeile ist betroffen?\",\"Why is MDN asking me for money?\":\"Warum bittet mich MDN um Geld?\",\"Would you answer 4 questions for us?\":\"W\u00FCrden Sie uns vier Fragen beantworten?\",\"Would you answer 4 questions for us? <a %(url)s>Open the survey in a new tab</a> and fill it out when you are done on the site. Thanks!\":\"Beantworten Sie uns vier Fragen? <a %(url)s>\u00D6ffnen Sie die Umfrage in einem neuen Tab</a> und nehmen Sie teil, wenn Sie auf dieser Seite fertig sind. Vielen Dank!\",\"Yes\":\"Ja\",\"Yes, cancel subscription\":\"Ja, Abonnement k\u00FCndigen\",\"You are MDN member number %(num)s\":\"Sie sind MDN-Mitgliedsnummer %(num)s\",\"You are now viewing this site in %(localeName)s. Do you always want to view this site in %(localeName)s?\":\"Sie sehen sich diese Seite jetzt auf %(localeName)s an. M\u00F6chten Sie diese Seite immer auf %(localeName)s ansehen?\",\"You can cancel your monthly subscription at any time. Please go to the <subscriptionsLink /> to cancel your subscription. If you choose to cancel, we will not charge your payment card for subsequent months. For any other questions or inquiries please <emailLink />.\":\"Sie k\u00F6nnen Ihr monatliches Abonnement jederzeit k\u00FCndigen. Bitte besuchen Sie <subscriptionsLink />, um Ihr Abonnement zu k\u00FCndigen. Wenn Sie es stornieren, wird Ihre Zahlungskarte f\u00FCr die folgenden Monate nicht belastet. F\u00FCr weitere Fragen oder Anfragen wenden Sie sich bitte an <emailLink />.\",\"You can change your email address by adding a new one\":\"Sie k\u00F6nnen Ihre E-Mail-Adresse \u00E4ndern, indem Sie eine neue hinzuf\u00FCgen\",\"You can join the GitHub repository to see updates and commits for this table data:\":\"Sie k\u00F6nnen dem GitHub-Repository beitreten, um Aktualisierungen und Commits f\u00FCr diese Tabellendaten anzuzeigen:\",\"You have %(count)s Wiki revisions\":\"Sie haben %(count)s Wiki-Bearbeitungen\",\"You have a draft from: %(time)s.\":\"Sie haben einen Entwurf vom: %(time)s.\",\"You have no active subscription. Why not <signupLink />?\":\"Sie haben kein aktives Abonnement. M\u00F6chten Sie sich <signupLink />?\",\"You must input a valid YouTube video URL.\":\"Sie m\u00FCssen eine g\u00FCltige Video-URL von YouTube eingeben.\",\"You need to be <signInLink /> to access account settings.\":\"Sie m\u00FCssen <signInLink /> sein, um auf die Kontoeinstellungen zugreifen zu k\u00F6nnen.\",\"You will be MDN member number %(num)s\":\"Sie werden MDN-Mitgliedsnummer %(num)s\",\"Your browser does not support MathML. A CSS fallback has been used instead.\":\"Ihr Browser unterst\u00FCtzt kein MathML. Stattdessen wurde eine CSS-Alternative verwendet.\",\"Your monthly subscription has been successfully canceled.\":\"Ihr monatlicher Dauerauftrag wurde erfolgreich entfernt.\",\"an unknown date\":\"[unbekanntes Datum]\",\"and fill it out when you are done on the site. Thanks!\":\"und f\u00FCllen Sie sie aus, wenn Sie auf der Website fertig sind. Vielen Dank!\",\"by MDN contributors\":\"von MDN-Mitwirkenden\",\"contact support\":\"Support kontaktieren\",\"contact support.\":\"den Support kontaktieren.\",\"https://github.com/mdn/browser-compat-data \":\"https://github.com/mdn/browser-compat-data \",\"manage monthly subscription page\":\"Seite \u201EMonatlichen Dauerauftrag bearbeiten\u201C\",\"payment terms\":\"Zahlungsbedingungen\",\"set one up\":\"Abonnement einrichten\",\"sign in\":\"Anmelden\",\"signed in\":\"angemeldet\",\"subscription terms\":\"Bedingungen zum Dauerauftrag\",\"tax-deductible in the U.S.\":\"in den USA steuerlich absetzbar\",\"thank you page.\":\"Dankesseite.\",\"you@example.com\":\"Sie@example.com\",\"%(count)s document found for \\\"%(query)s\\\" in %(locale)s.\":[\"%(count)s Dokument f\u00FCr \u201E%(query)s\u201C auf %(locale)s gefunden.\",\"%(count)s Dokumente f\u00FCr \u201E%(query)s\u201C auf %(locale)s gefunden.\"]},\"pluralExpression\":\"(n != 1)\",\"url\":\"/de/docs/Web/JavaScript/Guide/Using_promises\",\"documentData\":{\"locale\":\"de\",\"slug\":\"Web/JavaScript/Guide/Using_promises\",\"enSlug\":\"Web/JavaScript/Guide/Using_promises\",\"id\":230200,\"title\":\"Promises benutzen\",\"summary\":\"Ein <a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Promise\\\"><code>Promise</code></a> ist ein\u00A0Objekt, das die finale Beendigung einer asynchronen Operation repr\u00E4sentiert. Je nachdem, ob die Operation erfolgreich oder fehlerhaft beendet wurde, wird das Promise entsprechend gekennzeichnet.\",\"language\":\"Deutsch\",\"hrefLang\":\"de\",\"absoluteURL\":\"/de/docs/Web/JavaScript/Guide/Using_promises\",\"wikiURL\":\"https://wiki.developer.mozilla.org/de/docs/Web/JavaScript/Guide/Using_promises\",\"editURL\":\"https://wiki.developer.mozilla.org/de/docs/Web/JavaScript/Guide/Using_promises$edit\",\"translateURL\":null,\"translationStatus\":\"outdated\",\"bodyHTML\":\"<div><div class=\\\"prevnext\\\" style=\\\"text-align: right;\\\">\\n    <p><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Guide/Details_of_the_Object_Model\\\" rel=\\\"nofollow\\\" style=\\\"float: left;\\\">\u00AB zur\u00FCck</a><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Guide/Iterators_and_Generators\\\" rel=\\\"nofollow\\\">weiter  \u00BB</a></p>\\n</div></div>\\n\\n<p class=\\\"summary\\\">Ein <a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Promise\\\"><code>Promise</code></a> ist ein\u00A0Objekt, das die finale Beendigung einer asynchronen Operation repr\u00E4sentiert. Je nachdem, ob die Operation erfolgreich oder fehlerhaft beendet wurde, wird das Promise entsprechend gekennzeichnet.</p>\\n\\n<p class=\\\"summary\\\">Da in den meisten F\u00E4llen bereits existierende Promises benutzt werden, wird diese Anleitung zuerst die Benutzung von zur\u00FCckgegebenen Promises erkl\u00E4ren, und dann darauf eingehen, wie diese erzeugt werden.</p>\\n\\n<p class=\\\"summary\\\">Grob gesagt ist ein Promise ein zur\u00FCckgegebenes Objekt, an welches Callback-Funktionen angeh\u00E4ngt werden k\u00F6nnen, anstatt dass diese einer Funktion \u00FCbergeben werden.</p>\\n\\n<p class=\\\"summary\\\">Betrachten wir z.B. folgende Funktion <code>createAudioFileAsync()</code>, welche asynchron eine Audio-Datei generiert; an diese werden Audio-Einstellungen sowie zwei Callback-Funktionen \u00FCbergeben - eine f\u00FCr das erfolgreiche Erzeugen der Audio-Datei, und die andere f\u00FCr auftretende Fehler.</p>\\n\\n<p class=\\\"summary\\\">Ein beispielhafter Code, den <code>createAudioFileAsync()</code> nutzen w\u00FCrde, sieht in etwa so aus:</p>\\n\\n<pre class=\\\"summary notranslate\\\">function successCallback(result) {\\n  console.log(\\\"Audio-Datei bereit unter URL: \\\" + result);\\n}\\n\\nfunction failureCallback(error) {\\n  console.error(\\\"Fehlerhafte Generierung der Audio-Datei: \\\" + error);\\n}\\n\\ncreateAudioFileAsync(audioSettings, successCallback, failureCallback);\\n</pre>\\n\\n<p>In modernen Funktionen, welche Promises zur\u00FCckgeben, kann man die Callbacks stattdessen direkt anh\u00E4ngen:</p>\\n\\n<p>W\u00FCrde <code>createAudioFileAsync()</code> so umgeschrieben, dass es als R\u00FCckgabewert ein Promise h\u00E4tte, w\u00E4re die Nutzung davon einfach so:</p>\\n\\n<pre class=\\\"notranslate\\\">createAudioFileAsync(audiosettings).then(successCallback, failureCallback);</pre>\\n\\n<p>Das ist die Kurzform von:</p>\\n\\n<pre class=\\\"notranslate\\\">const promise = createAudioFileAsync(audioSettings);\\npromise.then(successCallback, failureCallback);\\n</pre>\\n\\n<p>Dies nennt man einen <em>asynchronen Funktionsaufruf</em>. Diese Vorgehensweise hat mehrere Vorteile, von denen in diesem Artikel jeder einzeln geschildert wird.</p>\\n\\n<h2 id=\\\"Garantien\\\">Garantien</h2>\\n\\n<p>Anders als bei Callback-\u00DCbergabe nach dem alten Verfahren, k\u00F6nnen Promise-Objekte folgendes sicherstellen:</p>\\n\\n<ul>\\n <li>Callback-Funktionen werden erst aufgerufen, wenn der <a href=\\\"/en-US/docs/Web/JavaScript/EventLoop#Run-to-completion\\\">derzeitige Durchlauf des Javascript Event Loops </a>vollst\u00E4ndig ist.</li>\\n <li>Callback-Funktionen, die in <code>.then()</code> angeh\u00E4ngt werden, werden <em>nach</em> dem Ende der asynchronen Operation aufgerufen.</li>\\n <li>Mehrere Callback-Funktionen k\u00F6nnen durch mehrmaliges Aufrufen von <code>.then()</code> angeh\u00E4ngt werden, um unabh\u00E4ngig von der Funktion selbst in der Anh\u00E4nge-Reihenfolge aufgerufen zu werden.</li>\\n</ul>\\n\\n<p>Allerdings ist der wohl kurzfristigste Nutzen von Promises das Chaining.</p>\\n\\n<h2 id=\\\"Chaining\\\">Chaining</h2>\\n\\n<p>Eine h\u00E4ufige Aufgabenstellung ist der Aufruf von zwei oder mehr asynchronen Funktionen nacheinander in Sequenz, wobei Ergebnisse aus der vorangegangenen Funktion in die folgende Funktion \u00FCbernommen werden. Dies ist realisierbar mittels einer <em>Promise chain</em>.</p>\\n\\n<p>Hier steckt der Zauber drin: Die Funktion <code>.then()</code> gibt stets ein neues Promise-Objekt zur\u00FCck:</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">const promise = doSomething();\\nconst promise2 = promise.then(successCallback, failureCallback);\\n</pre>\\n\\n<p>oder auch</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">const promise2 = doSomething().then(successCallback, failureCallback);\\n</pre>\\n\\n<p>Hierbei repr\u00E4sentiert <code>promise2</code> nicht nur den vollst\u00E4ndigen Aufruf von <code>doSomething()</code>, sondern auch die Ergebnisse der beiden angeh\u00E4ngten Funktionen <code>successCallback</code> oder <code>failureCallback</code> - diese k\u00F6nnen ebenfalls asynchrone Funktionen sein, die Promises zur\u00FCckgeben. In diesem Fall werden jegliche Callback-Funktionen, die an <code>promise2</code> angeh\u00E4ngt w\u00FCrden, jeweils auch eingereiht in den jeweiligen Promise-R\u00FCckgabewerten von <code>successCallback</code> oder <code>failureCallback</code>.</p>\\n\\n<p>Grunds\u00E4tzlich repr\u00E4sentiert jedes Promise-Objekt die Vervollst\u00E4ndigung eines asynchronen Schritts in der Kette.</p>\\n\\n<p>Nach dem alten Verfahren f\u00FChrte das Aneinanderreihen von mehreren asynchronen Operationen zur klassischen <em>Callback pyramid of doom</em>:</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">doSomething(function(result) {\\n  doSomethingElse(result, function(newResult) {\\n    doThirdThing(newResult, function(finalResult) {\\n      console.log('Got the final result: ' + finalResult);\\n    }, failureCallback);\\n  }, failureCallback);\\n}, failureCallback);\\n</pre>\\n\\n<p>Mit moderenen Funktionen k\u00F6nnen diese Callback-Funktionen stattdessen an die zur\u00FCckgegebenen Promise-Objekte angeh\u00E4ngt werden, womit die <em>Promise chain</em> geformt wird:</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">doSomething().then(function(result) {\\n  return doSomethingElse(result);\\n})\\n.then(function(newResult) {\\n  return doThirdThing(newResult);\\n})\\n.then(function(finalResult) {\\n  console.log('Got the final result: ' + finalResult);\\n})\\n.catch(failureCallback);\\n</pre>\\n\\n<p>Die Argumente f\u00FCr <code>.then()</code> sind optional, und <code>.catch(failureCallback)</code> ist die Kurzschreibform von <code>.then(null, failureCallback)</code>. Dies kann stattdessen auch mit <a href=\\\"/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions\\\">Pfeil-Funktionen</a> ausgedr\u00FCckt werden:</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">doSomething()\\n.then(result =&gt; doSomethingElse(result))\\n.then(newResult =&gt; doThirdThing(newResult))\\n.then(finalResult =&gt; {\\n  console.log(`Got the final result: ${finalResult}`);\\n})\\n.catch(failureCallback);\\n</pre>\\n\\n<p><strong>Wichtig</strong>: Immer R\u00FCckgabewerte angeben; sonst k\u00F6nnen die Callback das Ergebnis eines vorherigen Promise nicht abfangen.</p>\\n\\n<h3 id=\\\"Chaining_nach_einem_.catch\\\">Chaining nach einem <code>.catch()</code></h3>\\n\\n<p>Es ist auch m\u00F6glich, nach einem Fehler, sprich <code>.catch()</code>, weiter zu verkettern. Dies ist n\u00FCtzlich um neue Operationen auszuf\u00FChren, auch nachdem es einen Fehler in der Kette gab.</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">new Promise((resolve, reject) =&gt; {\\n    console.log('Initial');\\n\\n    resolve();\\n})\\n.then(() =&gt; {\\n    throw new Error('Something failed');\\n        \\n    console.log('Do this');\\n})\\n.catch(() =&gt; {\\n    console.log('Do that');\\n})\\n.then(() =&gt; {\\n    console.log('Do this, no matter what happened before');\\n});\\n</pre>\\n\\n<p>Das obige Beispiel hat die nachfolgenden Ausgaben:</p>\\n\\n<pre class=\\\"notranslate\\\">Initial\\nDo that\\nDo this, no matter what happened before\\n</pre>\\n\\n<p>Zu beachten ist hier, dass der Text \\\"Do this\\\" nicht ausgegeben wird, weil der Fehler \\\"Something failed\\\" einen Abbruch ausgel\u00F6st hat.</p>\\n\\n<h2 id=\\\"Fehler\u00FCbertragung\\\">Fehler\u00FCbertragung</h2>\\n\\n<p>Schaut man sich weiter oben die <em>Callback pyramid of doom</em> an, wird sichtbar, dass <code>failureCallback</code> dort mehrmals angegeben werden muss, anders als nur einmal beim Beispiel unten:</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">doSomething()\\n.then(result =&gt; doSomethingElse(result))\\n.then(newResult =&gt; doThirdThing(newResult))\\n.then(finalResult =&gt; console.log(`Got the final result: ${finalResult}`))\\n.catch(failureCallback);\\n</pre>\\n\\n<p>Grunds\u00E4tzlich h\u00E4lt eine Promise chain bei einer Exception an und erlaubt nur noch Zugriffe von <code>.catch()</code>-Handlern. Dies ist modelliert nach der Funktionsweise von synchronem Code:</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">try {\\n  const result = syncDoSomething();\\n  const newResult = syncDoSomethingElse(result);\\n  const finalResult = syncDoThirdThing(newResult);\\n  console.log(`Got the final result: ${finalResult}`);\\n} catch(error) {\\n  failureCallback(error);\\n}\\n</pre>\\n\\n<p>Diese Symmetrie mit synchronem Code erreichte ihren H\u00F6hepunkt in der <code><a href=\\\"/en-US/docs/Web/JavaScript/Reference/Statements/async_function\\\">async/await</a></code>-Komfortschreibweise in ECMAScript 2017:</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">async function foo() {\\n  try {\\n    const result = await doSomething();\\n    const newResult = await doSomethingElse(result);\\n    const finalResult = await doThirdThing(newResult);\\n    console.log(`Got the final result: ${finalResult}`);\\n  } catch(error) {\\n    failureCallback(error);\\n  }\\n}\\n</pre>\\n\\n<p>Diese Schreibweise baut auf Promises auf; so ist <code>doSomething()</code> die selbe Funktion wie vorher. <a class=\\\"external\\\" href=\\\"https://developers.google.com/web/fundamentals/getting-started/primers/async-functions\\\" rel=\\\"noopener\\\">Hier</a> kann man mehr \u00FCber diese Syntax erfahren.</p>\\n\\n<p>Promise-Objekte l\u00F6sen mit der <em>Callback pyramid of doom </em>ein fundamentales Designproblem, indem sie alle Fehler, auch geworfene Exceptions und Programmierfehler, abfangen. Diese Eigenschaft ist essentiell f\u00FCr die funktionale Komposition von asynchronen Operationen.</p>\\n\\n<h2 id=\\\"Promise_rejection-Events\\\">Promise rejection-Events</h2>\\n\\n<p>Immer, wenn ein Promise abgelehnt (\\\"rejected\\\") wird, wird eines von zwei Events zum globalen Scope (grunds\u00E4tzlich entweder <code><a href=\\\"/de/docs/Web/API/Window\\\">window</a></code>, oder, falls in einem Web-Worker gearbeitet wird, der <code><a href=\\\"/de/docs/Web/API/Worker\\\">Worker</a></code> selbst oder ein anderes, <code>Worker</code>-basiertes Interface) geschickt. Diese beiden Events sind:</p>\\n\\n<dl>\\n <dt><code><a href=\\\"/en-US/docs/Web/API/Window/rejectionhandled_event\\\">rejectionHandled</a></code></dt>\\n <dd>Wird bei der Ablehnung eines Promise gesendet, nachdem die Ablehnung von der reject-Funktion des Ausf\u00FChrenden verarbeitet wurde.</dd>\\n <dt><code><a href=\\\"/en-US/docs/Web/API/Window/unhandledrejection_event\\\">unhandledRejection</a></code></dt>\\n <dd>Wird bei der Ablehnung eines Promise gesendet, wenn es keinen Rejection-Handler gibt.</dd>\\n</dl>\\n\\n<p>In beiden F\u00E4llen hat das Event (vom Typ <code><a href=\\\"/en-US/docs/Web/API/PromiseRejectionEvent\\\">PromiseRejectionEvent</a></code>) als Member das Attribut <code><a href=\\\"/en-US/docs/Web/API/PromiseRejectionEvent/promise\\\">promise</a></code> welches auf das abgelehnte Promise zeigt, sowie ein Attribut <code><a href=\\\"/en-US/docs/Web/API/PromiseRejectionEvent/reason\\\">reason</a></code> welches eine Begr\u00FCndung f\u00FCr die Ablehnung des Promise enth\u00E4lt.</p>\\n\\n<p>Diese Events bilden ein Fallback f\u00FCr die Fehlerbehandlung bei Promises sowie eine Hilfestellung beim Debugging des eigenen Promise-Managements. Da die H\u00E4ndler im Kontext global sind, werden alle Fehler unabh\u00E4ngig von der Quelle zu ihnen geschickt.</p>\\n\\n<p>Ein Fall der besonderen N\u00FCtzlichkeit: Wenn man Code in <a href=\\\"/de/docs/Glossary/Node.js\\\">Node.js</a> schreibt, kann es oft passieren, dass im Projekt hinzugef\u00FCgte Module unverarbeitete abgelehnte Promises haben. Diese werden von der Node-Laufzeitumgebung in die Konsole geloggt. Zu Analysezwecken, zur Verarbeitung durch den eigenen Code, oder auch einfach zur Verhinderung von \u00FCberm\u00E4\u00DFigem Output, kann man diese abgelehnten Promises einfangen, indem man f\u00FCr das <a href=\\\"/en-US/docs/Web/API/Window/unhandledrejection_event\\\"><code>unhandledrejection</code> event</a> einen Handler hinzuf\u00FCgen:</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">window.addEventListener('unhandledrejection', event =&gt; {\\n  /* Hier l\u00E4sst sich Code einf\u00FCgen, um die Attribute des Events\\n     zu untersuchen */\\n  event.preventDefault();\\n}, false);</pre>\\n\\n<p>Indem die <code><a href=\\\"/en-US/docs/Web/API/Event/preventDefault\\\">preventDefault()</a></code>-Methode des Events aufgerufen wird, wird die standardm\u00E4\u00DFige Operation bei unverarbeiteten abgelehnten Promises verhindert. \u00DCblicherweise beinhaltet dies das Loggen des Fehlers in der Konsole; im Fall von Node ist das tats\u00E4chlich der Fall.</p>\\n\\n<p>Idealerweise sollte man abgelehnte Promises immer untersuchen, um sicher zu gehen, dass es sich nicht um Code-Fehler handelt.</p>\\n\\n<h2 id=\\\"Ein_Promise-Objekt_in_einer_alten_Callback-API_erzeugen\\\">Ein Promise-Objekt in einer alten Callback-API erzeugen</h2>\\n\\n<p>Ein einfaches <a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Promise\\\"><code>Promise</code></a> kann durch dessen Konstruktor-Methode erzeugt werden. Diese Art und Weise sollte nur genutzt werden, um alte APIs damit zu umschlie\u00DFen.</p>\\n\\n<p>Idealerweise w\u00FCrden alle asynchronen Funktionen bereits Promises zur\u00FCckgeben. In der Realit\u00E4t erwarten einige APIs immer Callback-Funktionen f\u00FCr Erfolg und Fehlerfall, die nach dem alten Prinzip \u00FCbergeben werden m\u00FCssen. Ein eindeutiges Beispiel hierf\u00FCr ist die Funktion <a href=\\\"/de/docs/Web/API/WindowTimers/setTimeout\\\"><code>setTimeout()</code></a>:</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">setTimeout(() =&gt; saySomething(\\\"10 seconds passed\\\"), 10000);\\n</pre>\\n\\n<p>Callback-Funktionen nach dem alten Verfahren und Promises zu vermischen, bringt Probleme mit sich. Wenn <code>saySomething()</code> fehlschl\u00E4gt oder Programmierfehler enth\u00E4lt, wird dies durch nichts abgefangen.</p>\\n\\n<p>Gl\u00FCcklicherweise kann man solche F\u00E4lle mit einem Promise umschlie\u00DFen. Ein Best Practice besteht darin, problematische Funktionen auf der niedrigstm\u00F6glichen Ebene zu umschlie\u00DFen, und sie nie wieder direkt aufzurufen:</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">const wait = (ms) =&gt; new Promise(resolve =&gt; setTimeout(resolve, ms));\\n\\nwait(10000).then(() =&gt; saySomething(\\\"10 seconds\\\")).catch(failureCallback);\\n</pre>\\n\\n<p>Der Promise-Konstruktor empf\u00E4ngt grunds\u00E4tzlich eine Ausf\u00FChrenden-Funktion, die es m\u00F6glich macht, ein Promise manuell aufzul\u00F6sen oder abzulehnen. Da <code>setTimeout()</code> nicht wirklich fehlschl\u00E4gt, wurde im oberen Beispiel die Ablehnung ausgelassen.</p>\\n\\n<h2 id=\\\"Komposition\\\">Komposition</h2>\\n\\n<p><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve\\\" rel=\\\"nofollow\\\"><code>Promise.resolve()</code></a> und <a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Promise/reject\\\"><code>Promise.reject()</code></a> sind Abk\u00FCrzungen f\u00FCr das manuelle Erzeugen von jeweils bereits aufgel\u00F6sten oder abgelehnten Promises. In bestimmten F\u00E4llen kann dies n\u00FCtzlich sein.</p>\\n\\n<p><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Promise/all\\\"><code>Promise.all()</code></a> und <a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Promise/race\\\"><code>Promise.race()</code></a> sind zwei Kompositionswerkzeuge f\u00FCr das parallele Durchf\u00FChren von asynchronen Operationen.</p>\\n\\n<p>Sequenzielle Komposition ist m\u00F6glich durch cleveres Javascript:</p>\\n\\n<pre class=\\\"notranslate\\\">[func1, func2].reduce((p, f) =&gt; p.then(f), Promise.resolve());</pre>\\n\\n<p>Im oberen Beispiel wird ein Array von asynchronen Funktionen auf eine Promise chain reduziert. Somit ist es das gleiche, wie <code>Promise.resolve().then(func1).then(func2);</code>.</p>\\n\\n<p>Auch ist es m\u00F6glich, dies mit einer wiederverwendbaren Kompositionsfunktion umzusetzen, die h\u00E4ufig in der funktionalen Programmierung vorkommt:</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">const applyAsync = (acc,val) =&gt; acc.then(val);\\nconst composeAsync = (...funcs) =&gt; x =&gt; funcs.reduce(applyAsync, Promise.resolve(x));</pre>\\n\\n<p>Die Funktion <code>composeAsync()</code> akzeptiert eine dynamische Anzahl von Funktionen als Parameter, und hat als R\u00FCckgabewert eine Funktion, die einen Initialwert akzeptiert, welcher durch die Kompositions-Pipeline durchgereicht wird. Der Nutzen besteht darin, dass einige oder alle \u00FCbergebenen Funktionen entweder synchron oder asynchron sein k\u00F6nnen, und garantiert wird, dass sie in der richtigen Reihenfolge ausgef\u00FChrt werden.</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">const transformData = composeAsync(func1, asyncFunc1, asyncFunc2, func2);\\ntransformData(data);\\n</pre>\\n\\n<p>In ECMAScript 2017 kann sequenzielle Komposition mittels <code>async/await</code> noch einfacher durchgef\u00FChrt werden:</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">for (const f of [func1, func2]) {\\n  await f();\\n}\\n</pre>\\n\\n<h2 id=\\\"Timing\\\">Timing</h2>\\n\\n<p>Um \u00DCberraschungen vorzubeugen, werden Funktionen die an <code>.then()</code> \u00FCbergeben werden niemals synchron aufgerufen, auch wenn das Promise bereits aufgel\u00F6st wurde:</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">Promise.resolve().then(() =&gt; console.log(2));\\nconsole.log(1); // 1, 2\\n</pre>\\n\\n<p>Anstatt sofort ausgef\u00FChrt zu werden, wird die \u00FCbergebene Funktion in eine Microtask-Warteschlange eingereiht; das bedeutet, sie wird erst ausgef\u00FChrt, wenn die Warteschlange am ende des aktuellen Durchlaufs des Javascript event loops geleert wird, sprich zeitnah:</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">const wait = ms =&gt; new Promise(resolve =&gt; setTimeout(resolve, ms));\\n\\nwait().then(() =&gt; console.log(4));\\nPromise.resolve().then(() =&gt; console.log(2)).then(() =&gt; console.log(3));\\nconsole.log(1); // 1, 2, 3, 4\\n</pre>\\n\\n<h2 id=\\\"Nesting\\\">Nesting</h2>\\n\\n<p>Einfache Promise chains sollten m\u00F6glichst flach und ohne Nesting implementiert werden, da Nesting auch das Ergebnis von undurchdachter Komposition sein kann. Siehe auch bei typischen Fehlern.</p>\\n\\n<p>Als Nesting wird eine Kontrollstruktur bezeichnet, um den Scope von catch-Statements zu begrenzen. Ein nested catch f\u00E4ngt nur Fehler in seinem Scope und niedriger ab, nicht au\u00DFerhalb. Korrekt genutzt f\u00FChrt dies zu h\u00F6herer Pr\u00E4zision in der Fehlerbehandlung:</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">doSomethingCritical()\\n.then(result =&gt; doSomethingOptional(result)\\n  .then(optionalResult =&gt; doSomethingExtraNice(optionalResult))\\n  .catch(e =&gt; {})) // Ignorieren, wenn optionale Operation fehlschl\u00E4gt\\n.then(() =&gt; moreCriticalStuff())\\n.catch(e =&gt; console.error(\\\"Critical failure: \\\" + e.message));</pre>\\n\\n<h2 id=\\\"Typische_Fehler\\\">Typische Fehler</h2>\\n\\n<p>In diesem Abschnitt werden \u00FCbliche Programmierfehler thematisiert, auf die man achten sollte, um Promise chains nicht zu kompromittieren. Im unteren Beispiel wurden drei der am h\u00E4ufigsten vorkommenden Fehler untergebracht:</p>\\n\\n<pre class=\\\"brush: js example-bad notranslate\\\">eineFunktion().then(function (ergebnis) {\\n  eineZweiteFunktion(ergebnis) // Kein Promise-R\u00FCckgabewert f\u00FCr innere Chain + unn\u00F6tiges Nesting\\n  .then(neuesErgebnis =&gt; eineDritteFunktion(neuesErgebnis));\\n}).then(() =&gt; eineVierteFunktion());\\n// Keine Chain-Terminierung mit einem catch!</pre>\\n\\n<p>Der erste Programmierfehler ist, dass die Promise chain nicht ordentlich gekn\u00FCpft wurde. Passieren tut dies, wenn ein neues Promise erzeugt, aber nicht zur\u00FCckgegeben wird. Das f\u00FChrt dazu, dass die Promise chain reisst, oder aber, dass zwei chains entstehen, die sich in einer Race condition befinden. Im Klartext heisst das, dass <code>eineVierteFunktion()</code> nicht darauf wartet, dass <code>eineZweiteFunktion()</code> oder <code>eineDritteFunktion()</code> abgeschlossen sind, und, wahrscheinlich unbeabsichtigt, parallel mit ihnen ausgef\u00FChrt wird. Einzelne Promise chains haben zus\u00E4tzlich eigene Fehlerbehandlungen, was in diesem Fall zu nicht abgefangenen Fehlern f\u00FChrt.</p>\\n\\n<p>Der zweite Programmierfehler ist das unn\u00F6tige Nesting, welches den ersten Fehler mitverursachen kann. Da Nesting auch den Scope der inneren Fehler-Handler begrenzt, kann dies zu nicht abgefangenen Fehlern f\u00FChren. Eine Variante hiervon ist das <a class=\\\"external\\\" href=\\\"https://stackoverflow.com/questions/23803743/what-is-the-explicit-promise-construction-antipattern-and-how-do-i-avoid-it\\\" rel=\\\"noopener\\\">Promise-Konstruktor-Antipattern</a>, welches Nesting mit der redundanten Nutzung eines Promise-Konstruktors, um Code, der bereits Promises nutzt, zu umschlie\u00DFen, kombiniert.</p>\\n\\n<p>Der dritte Programmierfehler ist, die Terminierung der Promise chain mit einem <code>.catch()</code> wegzulassen. Unterminierte chains f\u00FChren in den meisten Browsern zu nicht abgefangenen Promise-Ablehnungen.</p>\\n\\n<p>Als Faustregel sei genannt, dass Promise chains immer entweder zur\u00FCckgegeben oder terminiert werden sollen, und neue Promises sofort zur\u00FCckgegeben werden sollten, um die Hierarchie flach zu halten:</p>\\n\\n<pre class=\\\"brush: js example-good notranslate\\\">eineFunktion()\\n.then(function(ergebnis) {\\n  return eineZweiteFunktion(ergennis);\\n})\\n.then(neuesErgebnis =&gt; eineDritteFunktion(neuesErgebnis))\\n.then(() =&gt; eineVierteFunktion())\\n.catch(fehler =&gt; console.error(fehler));</pre>\\n\\n<p>Zu beachten ist, dass <code>() =&gt; x</code> die Kurzschreibform f\u00FCr <code>() =&gt; { return x; }</code> ist.</p>\\n\\n<p>Im oberen Beispiel steht jetzt eine einzelne, deterministische Promise chain mit ordentlicher Fehlerbehandlung.</p>\\n\\n<p>Das Verwenden von <a href=\\\"/en-US/docs/Web/JavaScript/Reference/Statements/async_function\\\"><code>async</code>/<code>await</code></a> adressiert die meisten, wenn nicht alle dieser Fehlerquellen; stattdessen kann dann der typische Fehler entstehen, dass man <a class=\\\"external\\\" href=\\\"https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function\\\" rel=\\\"noopener\\\"><code>await</code></a>-Keyword vergisst.</p>\\n\\n<h2 id=\\\"Wenn_Promises_auf_Tasks_treffen\\\">Wenn Promises auf Tasks treffen</h2>\\n\\n<p>In einer Situation, in der es Promises und Tasks (z.B. Events oder Callbacks) gibt, die in einer unvorhergesehenen Reihenfolge ausgef\u00FChrt werden / feuern k\u00F6nnen, ist es m\u00F6glich, sich einen Microtask zunutze zu machen, um den Status von Promises zu pr\u00FCfen oder diese auszubalancieren, wenn diese unter bestimmten Bedingungen erzeugt werden.</p>\\n\\n<p>F\u00FCr weitere Informationen \u00FCber Microtasks und das Einreihen einer Funktion als Microtask mittels <code><a href=\\\"/en-US/docs/Web/API/WindowOrWorkerGlobalScope/queueMicrotask\\\">queueMicrotask()</a></code>, kann im <a href=\\\"/en-US/docs/Web/API/HTML_DOM_API/Microtask_guide\\\">Microtask-Guide</a> nachlesen.</p>\\n\\n<h2 id=\\\"Siehe_auch\\\">Siehe auch</h2>\\n\\n<ul>\\n <li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Promise/then\\\"><code>Promise.then()</code></a></li>\\n <li><code><a href=\\\"/en-US/docs/Web/API/WindowOrWorkerGlobalScope/queueMicrotask\\\">async/await</a></code></li>\\n <li><a class=\\\"external\\\" href=\\\"http://promisesaplus.com/\\\" rel=\\\"noopener\\\">Promises/A+ specification</a></li>\\n <li><a class=\\\"external\\\" href=\\\"https://medium.com/@ramsunvtech/promises-of-promise-part-1-53f769245a53\\\" rel=\\\"noopener\\\">Venkatraman.R - JS Promise (Part 1, Basics)</a></li>\\n <li><a class=\\\"external\\\" href=\\\"https://medium.com/@ramsunvtech/js-promise-part-2-q-js-when-js-and-rsvp-js-af596232525c#.dzlqh6ski\\\" rel=\\\"noopener\\\">Venkatraman.R - JS Promise (Part 2 - Using Q.js, When.js and RSVP.js)</a></li>\\n <li><a class=\\\"external\\\" href=\\\"https://tech.io/playgrounds/11107/tools-for-promises-unittesting/introduction\\\" rel=\\\"noopener\\\">Venkatraman.R - Tools for Promises Unit\u00A0Testing</a></li>\\n <li><a class=\\\"external\\\" href=\\\"http://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html\\\" rel=\\\"noopener\\\">Nolan Lawson: We have a problem with promises \u2014 Common mistakes with promises</a></li>\\n</ul>\\n\\n<div class=\\\"prevnext\\\" style=\\\"text-align: right;\\\">\\n    <p><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Guide/Details_of_the_Object_Model\\\" rel=\\\"nofollow\\\" style=\\\"float: left;\\\">\u00AB zur\u00FCck</a><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Guide/Iterators_and_Generators\\\" rel=\\\"nofollow\\\">weiter  \u00BB</a></p>\\n</div>\",\"quickLinksHTML\":\"\\n <ol>\\n  <li><a href=\\\"/de/docs/Web/JavaScript\\\"><strong><em>JavaScript</em></strong></a></li>\\n  <li><a href=\\\"/de/docs/Web/JavaScript/Tutorials\\\"><strong>Tutorials:</strong></a></li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n      <summary>Einleitend</summary>\\n      <ol>\\n        <li><a class=\\\"new\\\" href=\\\"/de/docs/Learn/Getting_started_with_the_web/JavaScript_basics\\\" rel=\\\"nofollow\\\">JavaScript Grundlagen</a></li>\\n        <li><a href=\\\"/de/docs/Learn/JavaScript/First_steps\\\">JavaScript first steps</a></li>\\n        <li><a class=\\\"new\\\" href=\\\"/de/docs/Learn/JavaScript/Building_blocks\\\" rel=\\\"nofollow\\\">JavaScript building blocks</a></li>\\n        <li><a href=\\\"/de/docs/Learn/JavaScript/Objects\\\">Introducing JavaScript objects</a></li>\\n      </ol>\\n    </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n    <details open>\\n      <summary>JavaScript Guide</summary>\\n      <ol>\\n          <li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Guide/Introduction\\\" rel=\\\"nofollow\\\">Einf\u00FChrung</a></li>\\n          <li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Guide/Grammar_and_Types\\\" rel=\\\"nofollow\\\">Grammatik und Typen</a></li>\\n          <li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Guide/Control_flow_and_error_handling\\\" rel=\\\"nofollow\\\">Kontrollfluss und Fehlerbehandlung</a></li>\\n          <li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Guide/Loops_and_iteration\\\" rel=\\\"nofollow\\\">Schleifen und Iterationen</a></li>\\n          <li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Guide/Functions\\\" rel=\\\"nofollow\\\">Funktionen</a></li>\\n          <li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Guide/Expressions_and_Operators\\\" rel=\\\"nofollow\\\">Ausdr\u00FCcke und Operatoren</a></li>\\n          <li><a href=\\\"/de/docs/Web/JavaScript/Guide/Numbers_and_dates\\\">Zahlen und Zeitangaben</a></li>\\n          <li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Guide/Text_formatting\\\" rel=\\\"nofollow\\\">Textformatierung</a></li>\\n          <li><a href=\\\"/de/docs/Web/JavaScript/Guide/Regular_Expressions\\\">Regul\u00E4re Ausdr\u00FCcke</a></li>\\n          <li><a href=\\\"/de/docs/Web/JavaScript/Guide/Indexed_collections\\\">Indexierte Collections</a></li>\\n          <li><a href=\\\"/de/docs/Web/JavaScript/Guide/Keyed_collections\\\">Collections mit Schl\u00FCsseln</a></li>\\n          <li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Guide/Working_with_Objects\\\" rel=\\\"nofollow\\\">Mit Objekten arbeiten</a></li>\\n          <li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Guide/Details_of_the_Object_Model\\\" rel=\\\"nofollow\\\">Feinheiten des Objektmodells</a></li>\\n          <li><a href=\\\"/de/docs/Web/JavaScript/Guide/Using_promises\\\">Using promises</a></li>\\n          <li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Guide/Iterators_and_generators\\\" rel=\\\"nofollow\\\">Iteratoren und Generatoren</a></li>\\n          <li><a href=\\\"/de/docs/Web/JavaScript/Guide/Meta_programming\\\">Metaprogrammierung</a></li>\\n          <li><a href=\\\"/de/docs/Web/JavaScript/Guide/Modules\\\">JavaScript modules</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n      <summary>Fortgeschritten</summary>\\n      <ol>\\n        <li><a class=\\\"new\\\" href=\\\"/de/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks\\\" rel=\\\"nofollow\\\">Client-side JavaScript frameworks</a></li>\\n        <li><a class=\\\"new\\\" href=\\\"/de/docs/Learn/JavaScript/Client-side_web_APIs\\\" rel=\\\"nofollow\\\">Client-side web APIs</a></li>\\n        <li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/A_re-introduction_to_JavaScript\\\" rel=\\\"nofollow\\\">Eine Wiedereinf\u00FChrung in JavaScript</a></li>\\n        <li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Data_structures\\\" rel=\\\"nofollow\\\">JavaScript Datenstrukturen</a></li>\\n        <li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Equality_comparisons_and_sameness\\\" rel=\\\"nofollow\\\">Vergleiche auf Gleichheit</a></li>\\n        <li><a href=\\\"/de/docs/Web/JavaScript/Closures\\\">Closures</a></li>\\n      </ol>\\n    </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n      <summary>Erweitert</summary>\\n      <ol>\\n        <li><a href=\\\"/de/docs/Web/JavaScript/Inheritance_and_the_prototype_chain\\\">Vererbung und Prototypenkette</a></li>\\n        <li><a href=\\\"/de/docs/Web/JavaScript/Reference/Strict_mode\\\">Strict Modus</a></li>\\n        <li><a href=\\\"/de/docs/Web/JavaScript/Typed_arrays\\\">JavaScript Typed-Arrays</a></li>\\n        <li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Memory_Management\\\" rel=\\\"nofollow\\\">Memory Management</a></li>\\n        <li><a href=\\\"/de/docs/Web/JavaScript/EventLoop\\\">Laufzeitmodell und Event-Loop</a></li>\\n      </ol>\\n    </details>\\n  </li>\\n  <li><strong><a href=\\\"/de/docs/Web/JavaScript/Reference\\\">Referenzen:</a></strong></li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n       <summary>Standardobjekte</summary>\\n        <ol><li><span class=\\\"sidebar-icon\\\"><span class=\\\"icon-only-inline\\\" title=\\\"This is an experimental API that should not be used in production code.\\\"><i class=\\\"icon-beaker\\\"> </i></span></span><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\\\" rel=\\\"nofollow\\\" title=\\\"The AggregateError object represents an error when several errors need to be wrapped in a single error. It is thrown when multiple errors need to be reported by an operation, for example by Promise.any(), when all promises passed to it reject.\\\">AggregateError</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/AggregateError$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Array\\\" title=\\\"Das JavaScript-Array ist ein globales Objekt und Konstruktor f\u00FCr das Erstellen von Arrays, welche listen\u00E4hnliche Objekte sind.\\\">Array</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\\\" title=\\\"Das\u00A0ArrayBuffer Objekt repr\u00E4sentiert einen generischen Buffer mit fester L\u00E4nge. Der Inhalt eines ArrayBuffers\u00A0kann nicht direkt bearbeitet\u00A0werden; stattdessen wird eines der\u00A0typisierten Array-Objekte\u00A0oder ein DataView Objekt verwendet, welches den Buffer in einem bestimmten Format repr\u00E4sentiert und von welchem aus sein Inhalt bearbeitet werden kann.\\\">ArrayBuffer</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/AsyncFunction\\\" title=\\\"Der\u00A0AsyncFunction Konstruktor erstellt ein neues\u00A0AsyncFunction Objekt. In JavaScript ist jede asynchrone Funktion ein AsyncFunction Objekt.\\\">AsyncFunction</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Atomics\\\" title=\\\"Das Atomics Objekt unterst\u00FCtzt atomare Operationen als statische Methoden. Diese werden mit SharedArrayBuffer Objekte benutzt.\\\">Atomics</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/BigInt\\\" rel=\\\"nofollow\\\" title=\\\"BigInt is a built-in object that provides a way to represent whole numbers larger than 253 - 1, which is the largest number JavaScript can reliably represent with the Number primitive and represented by the Number.MAX_SAFE_INTEGER constant. BigInt can be used for arbitrarily large integers.\\\">BigInt</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/BigInt$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array\\\" rel=\\\"nofollow\\\" title=\\\"The BigInt64Array typed array represents an array of 64-bit signed integers in the platform byte order. If control over byte order is needed, use DataView instead. The contents are initialized to 0n. Once established, you can reference elements in the array using the object's methods, or by using standard array index syntax (that is, using bracket notation).\\\">BigInt64Array</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/BigUint64Array\\\" rel=\\\"nofollow\\\" title=\\\"The BigUint64Array typed array represents an array of 64-bit unsigned integers in the platform byte order. If control over byte order is needed, use DataView instead. The contents are initialized to 0n. Once established, you can reference elements in the array using the object's methods, or by using standard array index syntax (that is, using bracket notation).\\\">BigUint64Array</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/BigUint64Array$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Boolean\\\" title=\\\"Das Boolean Objekt ist ein Objekt-Wrapper f\u00FCr einen booleschen Wert.\\\">Boolean</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/DataView\\\" title=\\\"Die DataView Ansicht unterst\u00FCtzt eine Low-Level Schnittstelle f\u00FCr das Lesen und Schreiben von mehrere Zahlentypen in einem ArrayBuffer. Diese Ansicht ist unabh\u00E4ngig von den Plattform Byte-Reihenfolgen.\\\">DataView</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Date\\\" title=\\\"Erstellt eine JavaScript Date Instanz, die\u00A0einen einzelnen Moment der Zeit repr\u00E4sentiert. Date Objekte basieren auf dem Zeitwert, der der Anzahl der Millisekunden seit dem\u00A01. Januar 1970 (UTC) entspricht.\\\">Date</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Error\\\" title=\\\"Der Error Konstruktor erstellt ein Fehler (Error) Objekt. Instanzen von Error Objekten werden geworfen (thrown), wenn zur Laufzeit ein Fehler auftritt. Das Error Objekt kann zudem als Basis f\u00FCr benutzerdefinierte Fehler benutzt werden. Weiter unten werden schon eingebaute Fehlertypen beschrieben.\\\">Error</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/EvalError\\\" title=\\\"Das EvalError Objekt bedeutet einen Fehler in Verbindung mit der globalen eval() Funktion. Dieser Fehler wird nicht von JavaScript erzeugt, jedoch gibt es das EvalError Objekt noch aus Kompatibilit\u00E4tsgr\u00FCnden.\\\">EvalError</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry\\\" rel=\\\"nofollow\\\" title=\\\"A FinalizationRegistry object lets you request a callback when an object is garbage-collected.\\\">FinalizationRegistry</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\\\" title=\\\"Das Float32Array getypte Array repr\u00E4sentiert ein Array von 32 Bit Gleitkommazahlen (entspricht dem C Datengyp float) in der Plattform-Byte-Reihenfolge. Wenn Kontrolle \u00FCber die Byte-Reihenfolge erforderlich ist, muss DataView stattdessen benutz werden. Die Inhalte werden mit 0 initialisiert. Wie erwartet, kann man Element in einem Array mit Objektmethoden referenzieren oder man benutzt die normale Arrayindex-Syntax (das ist die Klammernotation).\\\">Float32Array</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Float64Array\\\" title=\\\"Das Float64Array getypte Array repr\u00E4sentiert ein Array von 64 Bit Gleitkommazahlen (entspricht dem C Datentyp double) in der Plattform-Byte-Reihenfolge. Wenn Kontrolle \u00FCber die Byte-Reihenfolge erforderlich ist, muss stattdessen DataView benutz werden. Die Inhalte werden mit 0 initialisiert. Wie erwartet, kann man Elemente in einem Array mit Objektmethoden referenzieren oder man benutzt die normale Array-Index-Syntax (das ist die Klammernotation).\\\">Float64Array</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Function\\\" title=\\\"Der Function Konstruktor erstellt ein neues Funktion Objekt. Das direkte Aufrufen kann Funktionen dynamisch erstellen, hat aber Sicherheits- und Performanceprobleme genau wie der Einsatz von eval. Im Gegensatz zu eval erm\u00F6glicht der Function-Konstruktor die Ausf\u00FChrung von Code im globalen G\u00FCltigkeitsbereich, was zu besseren Programmiergewohnheiten f\u00FChrt und eine effizientere Code-Minimierung erm\u00F6glicht.\\\">Function</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Generator\\\" title=\\\"Das Generator Objekt wird von der Generator Function zur\u00FCckgegeben und entspricht beidem, dem Iterable Protokoll und dem Iterator Protokoll.\\\">Generator</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction\\\" title=\\\"Der GeneratorFunction Konstruktor erstellt eine neues Generator Funktion Objekt. aktuell ist in JavaScript jede Generatorfunktion ein GeneratorFunction Objekt.\\\">GeneratorFunction</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Infinity\\\" title=\\\"Die globale Eigenschaft Infinity ist ein numerischer Wert, der die Unendlichkeit repr\u00E4sentiert.\\\">Infinity</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Int16Array\\\" title=\\\"Das Int16Array getypte Array repr\u00E4sentiert ein Array von zweierkomplement 16 Bit vorzeichenbehafteten, ganze Zahlen in der Plattform-Byte-Reihenfolge. Wenn Kontrolle \u00FCber die Byte-Reihenfolge erforderlich ist, muss DataView stattdessen benutz werden. Die Inhalte werden mit 0 initialisiert. Wie erwartet, kann man Element in einem Array mit Objektmethoden referenzieren oder man benutzt die normale Arrayindex-Syntax (das ist die Klammernotation).\\\">Int16Array</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Int32Array\\\" title=\\\"Das Int32Array getypte Array repr\u00E4sentiert ein Array von zweierkomplement 32 Bit vorzeichenbehafteten, ganze Zahlen in der Plattform-Byte-Reihenfolge. Wenn Kontrolle \u00FCber die Byte-Reihenfolge erforderlich ist, muss DataView stattdessen benutz werden. Die Inhalte werden mit 0 initialisiert. Wie erwartet, kann man Element in einem Array mit Objektmethoden referenzieren oder man benutzt die normale Arrayindex-Syntax (das ist die Klammernotation).\\\">Int32Array</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Int8Array\\\" title=\\\"Das Int8Array getypte Array repr\u00E4sentiert ein Array von zweierkomplement 8 Bit vorzeichenbehafteten, ganze Zahlen in der Plattform-Byte-Reihenfolge. Die Inhalte werden mit 0 initialisiert. Wie erwartet, kann man Element in einem Array mit Objektmethoden referenzieren oder man benutzt die normale Arrayindex-Syntax (das ist die Klammernotation).\\\">Int8Array</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/InternalError\\\" title='Das InternalError Objekt zeigt einen Fehler an, der in der JavaScript-Umgebung auftritt. Zum Beispiel: \\\"InternalError: too much recursion\\\".'>InternalError</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Intl\\\" title=\\\"Das Intl Objekt ist der Namensraum f\u00FCr die ECMAScript Internationalisierunges API, welche sprachenabh\u00E4ngige Stringvergleiche, Zahlenformate und Datums bzw. Zeitformate unterst\u00FCtzt. Der Konstruktoren f\u00FCr Collator, NumberFormat und DateTimeFormat Objekte sind Eigenschaften des Intl Objektes. Diese Seite dokumentiert diese Eigenschaften sowie die Funktionalit\u00E4t, die in Internationalisierungskonstruktoren und anderen sprachsensitiven Funktionen gemeinsam sind.\\\">Intl</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/JSON\\\" title=\\\"Das JSON Objekt enth\u00E4lt Methoden f\u00FCr das Einlesen und Konvertieren der JavaScript Objekt Notation (JSON) in JavaScript und umgekehrt. Es kann nicht aufgerufen oder erstellt werden. Au\u00DFer seinen zwei Methoden hat das Objekt keine interessante Funktionalit\u00E4t.\\\">JSON</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Map\\\" title=\\\"Ein Map Object iteriert in der Reihenfolge des Einf\u00FCgens \u00FCber seine Elemente \u2014 eine for...of Schleife gibt ein Array mit [key, value] f\u00FCr jede Iteration zur\u00FCck.\\\">Map</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Math\\\" title=\\\"Math ist ein Standardobjekt, das Eigenschaften und Methoden f\u00FCr mathematische Konstanten und Funktionen besitzt. Es ist kein Funktionsobjekt.\\\">Math</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/NaN\\\" title=\\\"Die globale NaN Eigenschaft ist ein Wert, der Not-A-Number (keine Zahl) repr\u00E4sentiert.\\\">NaN</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Number\\\" title=\\\"Das JavaScript Objekt Number ist ein Container Objekt (Wrapper Objekt), welches das Arbeiten mit numerischen Werten erlaubt. Ein Number Objekt wird erzeugt indem der Number() Konstruktor verwendet wird.\\\">Number</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Object\\\" title=\\\"Der Object-Konstruktor erstellt ein Objekt\\\">Object</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Promise\\\" title=\\\"Das Promise Objekt stellt eine Representation einer eventuellen Ausf\u00FChrung (oder eines Fehlschlags) einer asynchronen Operation und den daraus resultierenden Ergebnissen dar.\\\">Promise</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Proxy\\\" rel=\\\"nofollow\\\" title=\\\"The Proxy object enables you to create a proxy for another object, which can intercept and redefine fundamental operations for that object.\\\">Proxy</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Proxy$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/RangeError\\\" title=\\\"The RangeError object indicates an error when a value is not in the set or range of allowed values.\\\">RangeError</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError\\\" rel=\\\"nofollow\\\" title=\\\"The ReferenceError object represents an error when a non-existent variable is referenced.\\\">ReferenceError</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Reflect\\\" title=\\\"Im Gegensatz zu den meisten globalen Objekten hat\u00A0Reflect keinen Konstruktor. Sie k\u00F6nnen es nicht mit einem\u00A0new operator verwenden, oder\u00A0Reflect\u00A0als Funktion aufrufen.\\\">Reflect</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/RegExp\\\" title=\\\"Der RegExp\u00A0constructor erstellt ein Objekt mit regul\u00E4ren Werten, um diese dann als Muster an einem Text anzuwenden.\\\">RegExp</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Set\\\" title=\\\"Ein Set-Objekt speichert eindeutige\u00A0Werte jedes beliebigen Typs, egal ob es sich dabei um\u00A0primitive Werte oder Objektreferenzen handelt.\\\">Set</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\\\" rel=\\\"nofollow\\\" title=\\\"The SharedArrayBuffer object is used to represent a generic, fixed-length raw binary data buffer, similar to the ArrayBuffer object, but in a way that they can be used to create views on shared memory. Unlike an ArrayBuffer, a SharedArrayBuffer cannot become detached.\\\">SharedArrayBuffer</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/String\\\" title=\\\"Das globale String-Objekt ist ein Konstruktor f\u00FCr Strings, auch Zeichenketten genannt.\\\">String</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Symbol\\\" rel=\\\"nofollow\\\" title='The data type\u00A0symbol is a primitive data type. The Symbol() function returns a value of type symbol, has static properties that expose several members of built-in objects, has static methods that expose the global symbol registry, and resembles a built-in object class, but is incomplete as a constructor because it does not support the syntax \\\"new Symbol()\\\".'>Symbol</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Symbol$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\\\" title=\\\"Das SyntaxError Objekt repr\u00E4sentiert einen Fehler, der auftritt, wenn versucht wird syntaktisch falschen Quelltext zu interpretieren.\\\">SyntaxError</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/TypeError\\\" title=\\\"Das TypeError Objekt repr\u00E4sentiert einen Fehler, wenn ein Wert nicht dem erwartetem Typ enspricht.\\\">TypeError</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\\\" rel=\\\"nofollow\\\" title=\\\"A TypedArray object describes an array-like view of an underlying binary data buffer. There is no global property named TypedArray, nor is there a directly visible TypedArray constructor.\u00A0 Instead, there are a number of different global properties, whose values are typed array constructors for specific element types, listed below. On the following pages you will find common properties and methods that can be used with any typed array containing elements of any type.\\\">TypedArray</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/TypedArray$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/URIError\\\" rel=\\\"nofollow\\\" title=\\\"The URIError object represents an error when a global URI handling function was used in a wrong way.\\\">URIError</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/URIError$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array\\\" rel=\\\"nofollow\\\" title=\\\"The Uint16Array typed array represents an array of 16-bit unsigned integers in the platform byte order. If control over byte order is needed, use DataView instead. The contents are initialized to 0. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).\\\">Uint16Array</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array\\\" rel=\\\"nofollow\\\" title=\\\"The Uint32Array typed array represents an array of 32-bit unsigned integers in the platform byte order. If control over byte order is needed, use DataView instead. The contents are initialized to 0. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).\\\">Uint32Array</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array\\\" rel=\\\"nofollow\\\" title=\\\"The Uint8Array typed array represents an array of 8-bit unsigned integers. The contents are initialized to 0. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).\\\">Uint8Array</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray\\\" rel=\\\"nofollow\\\" title=\\\"The Uint8ClampedArray typed array represents an array of 8-bit unsigned integers clamped to 0-255; if you specified a value that is out of the range of [0,255], 0 or 255 will be set instead; if you specify a non-integer, the nearest integer\u00A0will be set. The contents are initialized to 0. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).\\\">Uint8ClampedArray</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\\\" rel=\\\"nofollow\\\" title=\\\"The WeakMap object is a collection of key/value pairs in which the keys are weakly referenced. The keys must be objects and the values can be arbitrary values.\\\">WeakMap</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/WeakMap$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/WeakRef\\\" rel=\\\"nofollow\\\" title=\\\"A WeakRef object lets you hold a weak reference to another object, without preventing that object from getting garbage-collected.\\\">WeakRef</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/WeakRef$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/WeakSet\\\" rel=\\\"nofollow\\\" title=\\\"The WeakSet object lets you store weakly held objects in a collection.\\\">WeakSet</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/WeakSet$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly\\\" title=\\\"Das\u00A0WebAssembly JavaScript Objekt existiert als Namensraum f\u00FCr alle\u00A0WebAssembly-bezogenen Funktionalit\u00E4ten.\\\">WebAssembly</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/decodeURI\\\" rel=\\\"nofollow\\\" title=\\\"The decodeURI() function decodes a Uniform Resource Identifier (URI) previously created by encodeURI() or by a similar routine.\\\">decodeURI()</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/decodeURI$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent\\\" title=\\\"Die Funktion decodeURIComponent() dekodiert eine URI-Komponente die zuvor durch encodeURIComponent (oder einer \u00E4hnlichen Funktion) kodiert wurden.\\\">decodeURIComponent()</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/encodeURI\\\" title=\\\"Die\u00A0encodeURI()\u00A0Funktion kodiert ein\u00A0Uniform Resource Identifier (Abk.\u00A0URI, englisch f\u00FCr\u00A0einheitlicher Bezeichner f\u00FCr Ressurcen), indem sie\u00A0jedes Vorkommen von speziellen Zeichen durch\u00A0die jeweilige\u00A0UTF-8 Zeichenkette ersetzt, die das Zeichen repr\u00E4sentiert.\\\">encodeURI()</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\\\" title='Die Methode encodeURIComponent() kodiert eine Komponente des Uniform Resource Identifier (URI) indem jedes Vorkommen bestimmter Zeichen durch ein, zwei, drei oder vier Escape-Sequenzen ersetzt werden, die der UTF8-Kodierung des Zeichens entsprechen. Vier Escape-Sequenzen werden nur bei Zeichen bestehend aus zwei \\\"Surrogate\\\"-Zeichen verwendet.'>encodeURIComponent()</a></li><li><span class=\\\"sidebar-icon\\\"><span class=\\\"icon-only-inline\\\" title=\\\"This deprecated API should no longer be used, but will probably still work.\\\"><i class=\\\"icon-thumbs-down-alt\\\"> </i></span></span><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/escape\\\" title=\\\"Die veraltete Funktion\u00A0escape()\u00A0erzeugt\u00A0einen neuen Text, in welchem gewisse Zeichen durch eine Hexadezimal-Escape-Sequenz ersetzt wurden. Es wird empfohlen, encodeURI oder\u00A0encodeURIComponent stattdessen zu nutzen.\\\">escape()</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/eval\\\" rel=\\\"nofollow\\\" title=\\\"The eval() function evaluates JavaScript code represented as a string.\\\">eval()</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/eval$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/globalThis\\\" rel=\\\"nofollow\\\" title=\\\"The global globalThis property contains the global this value, which is akin to the global object.\\\">globalThis</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/globalThis$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/isFinite\\\" title=\\\"Die globale Funktion isFinite() pr\u00FCft, ob eine Zahl endlich ist oder nicht. Wenn der \u00FCbergeben Wert keine Nummer ist, wird dieser zuerst konvertiert.\\\">isFinite()</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/isNaN\\\" title=\\\"Die isNaN() Methode pr\u00FCft, ob ein Wert NaN ist. Bemerkung: Aufgrund innerer Zw\u00E4nge weist die isNaN Methode interessante Regeln auf. Alternativ kann die in ECMAScript 2015 definierte Methode Number.isNaN() genutzt werden.\\\">isNaN()</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/null\\\" title=\\\"Der Wert null repr\u00E4sentiert das absichtliche\u00A0Fehlen eines Wertes. Es ist einer der Primitiven Werte in Javascript.\\\">null</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/parseFloat\\\" title=\\\"Die parseFloat()-Funktion parst ein Zeichenketten-Argument und gibt eine Flie\u00DFkommazahl zur\u00FCck.\\\">parseFloat()</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/parseInt\\\" title=\\\"Die parseInt() Methode liest ein String-Argument ein und gibt eine ganze Zahl im angegebenen Zahlensystem zur\u00FCck.\\\">parseInt()</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/undefined\\\" title=\\\"Die globale Eigenschaft undefined repr\u00E4sentiert den Wert undefined . Dieser Wert ist einer der primitiven Typen in JavaScript.\\\">undefined</a></li><li><span class=\\\"sidebar-icon\\\"><span class=\\\"icon-only-inline\\\" title=\\\"This deprecated API should no longer be used, but will probably still work.\\\"><i class=\\\"icon-thumbs-down-alt\\\"> </i></span></span><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/unescape\\\" title=\\\"Die veraltete\u00A0unescape() Methode erstellt einen neuen String, in dem hexadezimal escapte Sequenzen mit den entsprechenden umgewandelten\u00A0Zeichen ersetzt werden. Die escape Sequenz kann vorher durch\u00A0eine\u00A0Funktion wie escape erzeugt werden. Da\u00A0unescape\u00A0veraltet ist, sollte decodeURI oder\u00A0decodeURIComponent verwendet werden.\\\">unescape()</a></li><li><span class=\\\"sidebar-icon\\\"><span class=\\\"icon-only-inline\\\" title=\\\"This API has not been standardized.\\\"><i class=\\\"icon-warning-sign\\\"> </i></span></span><a href=\\\"/de/docs/Web/JavaScript/Reference/Global_Objects/uneval\\\" title=\\\"Die uneval() Funktion gibt den Quelltext eines Objekts als String zur\u00FCck.\\\">uneval()</a></li></ol>\\n    </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n      <summary>Ausdr\u00FCcke &amp; Operatoren</summary>\\n      <ol><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Addition\\\" rel=\\\"nofollow\\\" title=\\\"The addition operator (+) produces the sum of numeric operands or string concatenation.\\\">Addition (+)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Addition$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Addition_assignment\\\" rel=\\\"nofollow\\\" title=\\\"The addition assignment operator (+=) adds the value of the right operand to a variable and assigns the result to the variable. The types of the two operands determine the behavior of the addition assignment operator. Addition or concatenation is possible.\\\">Addition assignment (+=)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Addition_assignment$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Assignment\\\" rel=\\\"nofollow\\\" title=\\\"The simple assignment operator (=) is used to assign a value to a variable. The assignment operation\u00A0evaluates to\u00A0the assigned value. Chaining the assignment operator is possible in order to assign a single value to multiple variables\\\">Assignment (=)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Assignment$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Bitwise_AND\\\" rel=\\\"nofollow\\\" title=\\\"The bitwise AND operator (&amp;) returns a 1 in each bit position for which the corresponding bits of both operands are 1s.\\\">Bitwise AND (&amp;)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Bitwise_AND$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Bitwise_AND_assignment\\\" rel=\\\"nofollow\\\" title=\\\"The bitwise AND assignment operator (&amp;=) uses the binary representation of both operands, does a bitwise AND operation on them and assigns the result to the variable.\\\">Bitwise AND assignment (&amp;=)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Bitwise_AND_assignment$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Bitwise_NOT\\\" rel=\\\"nofollow\\\" title=\\\"The bitwise NOT operator (~) inverts the bits of its operand.\\\">Bitwise NOT (~)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Bitwise_NOT$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Bitwise_OR\\\" rel=\\\"nofollow\\\" title=\\\"The bitwise OR operator (|) returns a 1 in each bit position for which the corresponding bits of either or both operands are 1s.\\\">Bitwise OR (|)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Bitwise_OR$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Bitwise_OR_assignment\\\" rel=\\\"nofollow\\\" title=\\\"The bitwise OR assignment operator (|=) uses the binary representation of both operands, does a bitwise OR operation on them and assigns the result to the variable.\\\">Bitwise OR assignment (|=)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Bitwise_OR_assignment$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR\\\" rel=\\\"nofollow\\\" title=\\\"The bitwise XOR operator (^) returns a 1 in each bit position for which the corresponding bits of either but not both operands are 1s.\\\">Bitwise XOR (^)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR_assignment\\\" rel=\\\"nofollow\\\" title=\\\"The bitwise XOR assignment operator (^=) uses the binary representation of both operands, does a bitwise XOR operation on them and assigns the result to the variable.\\\">Bitwise XOR assignment (^=)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Bitwise_XOR_assignment$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Comma_Operator\\\" title=\\\"Der Kommaoperator wertet jeden Operanden (von links nach rechts) aus und gibt den Wert des letzten Operanden zur\u00FCck.\\\">Kommaoperator</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Conditional_Operator\\\" title=\\\"Der bedingte (tern\u00E4re) Operator ist der einzige Operator in JavaScript, der drei Operanden hat. Er wird h\u00E4ufig als Kurzform eines if Statements genutzt.\\\">Bedingter (tern\u00E4rer) Operator</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Decrement\\\" rel=\\\"nofollow\\\" title=\\\"The decrement operator (--) decrements (subtracts one from) its operand and returns a value.\\\">Decrement (--)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Decrement$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Destrukturierende_Zuweisung\\\" title=\\\"Die destrukturierende Zuweisung erm\u00F6glicht es, Daten aus Arrays oder Objekten zu extrahieren, und zwar mit Hilfe einer Syntax, die der Konstruktion von Array- und Objekt-Literalen nachempfunden ist.\\\">Destrukturierende Zuweisung</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Division\\\" rel=\\\"nofollow\\\" title=\\\"The division operator (/) produces the quotient of its operands where the left operand is the dividend and the right operand is the divisor.\\\">Division (/)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Division$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Division_assignment\\\" rel=\\\"nofollow\\\" title=\\\"The division assignment operator (/=) divides a variable by the value of the right operand and assigns the result to the variable.\\\">Division assignment (/=)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Division_assignment$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Equality\\\" rel=\\\"nofollow\\\" title=\\\"The equality operator (==) checks whether its two operands are equal, returning a Boolean result. Unlike the strict equality operator, it attempts to convert and compare operands that are of different types.\\\">Equality (==)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Equality$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Exponentiation\\\" rel=\\\"nofollow\\\" title=\\\"The exponentiation operator (**) returns the result of raising the first operand to the power of the second operand.\\\">Exponentiation (**)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Exponentiation$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Exponentiation_assignment\\\" rel=\\\"nofollow\\\" title=\\\"The exponentiation assignment operator (**=) raises the value of a variable to the power of the right operand.\\\">Exponentiation assignment (**=)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Exponentiation_assignment$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Operators/function\\\" title=\\\"Das Schl\u00FCsselwort function kann benutzt werden, um eine Funktion innerhalb eines Ausdrucks zu definieren.\\\">Funktionsausdruck</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Greater_than\\\" rel=\\\"nofollow\\\" title=\\\"The greater than operator (>) returns true if the left operand is greater than the right operand, and false otherwise.\\\">Greater than (&gt;)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Greater_than$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Greater_than_or_equal\\\" rel=\\\"nofollow\\\" title=\\\"The greater than or equal operator (>=) returns true if the left operand is greater than or equal to the right operand, and false otherwise.\\\">Greater than or equal (&gt;=)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Greater_than_or_equal$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Grouping\\\" title=\\\"Der Gruppierungsoperator ( ) kontrolliert die Priorit\u00E4t beim Auswerten von Ausdr\u00FCcken.\\\">Gruppierungsoperator</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Increment\\\" rel=\\\"nofollow\\\" title=\\\"The increment operator (++) increments (adds one to) its operand and returns a value.\\\">Increment (++)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Increment$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Inequality\\\" rel=\\\"nofollow\\\" title=\\\"The inequality operator (!=) checks whether its two operands are not equal, returning a Boolean result. Unlike the strict inequality operator, it attempts to convert and compare operands that are of different types.\\\">Inequality (!=)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Inequality$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Left_shift\\\" rel=\\\"nofollow\\\" title=\\\"The left shift operator (&lt;&lt;) shifts the first operand the specified number of bits to the left. Excess bits shifted off to the left are discarded. Zero bits are shifted in from the right.\\\">Left shift (&lt;&lt;)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Left_shift$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Left_shift_assignment\\\" rel=\\\"nofollow\\\" title=\\\"The left shift assignment operator (&lt;&lt;=) moves the specified amount of bits to the left and assigns the result to the variable.\\\">Left shift assignment (&lt;&lt;=)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Left_shift_assignment$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Less_than\\\" rel=\\\"nofollow\\\" title=\\\"The less than operator (&lt;) returns true if the left operand is less than the right operand, and false otherwise.\\\">Less than (&lt;)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Less_than$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Less_than_or_equal\\\" rel=\\\"nofollow\\\" title=\\\"The less than or equal operator (&lt;=) returns true if the left operand is less than or equal to the right operand, and false otherwise.\\\">Less than or equal (&lt;=)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Less_than_or_equal$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Logical_AND\\\" rel=\\\"nofollow\\\" title=\\\"The logical AND (&amp;&amp;) operator (logical conjunction) for a set of operands is true if and only if all of its operands are true. It is typically used with Boolean (logical) values. When it is, it returns a Boolean value. However, the &amp;&amp; operator actually returns the value of one of the specified operands, so if this operator is used with non-Boolean values, it will return a non-Boolean value.\\\">Logical AND (&amp;&amp;)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Logical_AND$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Logical_AND_assignment\\\" rel=\\\"nofollow\\\" title=\\\"The logical AND assignment (x &amp;&amp;= y) operator only assigns if x is truthy.\\\">Logical AND assignment (&amp;&amp;=)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Logical_AND_assignment$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Logical_NOT\\\" rel=\\\"nofollow\\\" title=\\\"The logical NOT (!) operator (logical complement, negation) takes truth to falsity and vice versa. It is typically used with Boolean (logical) values. When used with non-Boolean values, it returns false if its single operand can be converted to true; otherwise, returns true.\\\">Logical NOT (!)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Logical_NOT$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Logical_OR\\\" rel=\\\"nofollow\\\" title=\\\"The logical OR (||) operator (logical disjunction) for a set of operands is true if and only if one or more of its operands is true. It is typically used with Boolean (logical) values. When it is, it returns a Boolean value. However, the || operator actually returns the value of one of the specified operands, so if this operator is used with non-Boolean values, it will return a non-Boolean value.\\\">Logical OR (||)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Logical_OR$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Logical_OR_assignment\\\" rel=\\\"nofollow\\\" title=\\\"The logical OR assignment (x ||= y) operator only assigns if x is falsy.\\\">Logical OR assignment (||=)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Logical_OR_assignment$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Logical_nullish_assignment\\\" rel=\\\"nofollow\\\" title=\\\"The logical nullish assignment (x ??= y) operator only assigns if x is nullish (null or undefined).\\\">Logical nullish assignment (??=)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Logical_nullish_assignment$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Multiplication\\\" rel=\\\"nofollow\\\" title=\\\"The multiplication operator (*) produces the product of the operands.\\\">Multiplication (*)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Multiplication$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Multiplication_assignment\\\" rel=\\\"nofollow\\\" title=\\\"The multiplication assignment operator (*=) multiplies a variable by the value of the right operand and assigns the result to the variable.\\\">Multiplication assignment (*=)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Multiplication_assignment$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator\\\" rel=\\\"nofollow\\\" title=\\\"The nullish coalescing operator (??) is a logical operator that returns its right-hand side operand when its left-hand side operand is null or undefined, and otherwise returns its left-hand side operand.\\\">Nullish coalescing operator (??)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Objekt_Initialisierer\\\" title=\\\"Objekte k\u00F6nnen mit new Object(), Object.create(), oder mit der literal Notation (Initialisierungs Notation) initialisiert werden. Ein Objekt Initialisierer ist eine Komma getrennte Liste von null oder mehreren Paaren von Eigenschafts-Namen und zugeh\u00F6rigen Werten eines Objektes, eingeschlossen in geschwungene Klammern ({}).\\\">Objekt Initialisierer</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\\\" title=\\\"Die Operatorpriorit\u00E4t bestimmt, in welcher Reihenfolge Operatoren ausgef\u00FChrt werden. Operatoren, die in der Rangfolge zuerst kommen, werden auch zuerst ausgef\u00FChrt.\\\">Operatorenpriorit\u00E4t</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Optionale_Verkettung\\\" title=\\\"Der ?. Operator funktioniert \u00E4hnlich wie der . -Verkettungs Operator, au\u00DFer dass er keinen Fehler bei einem nullish (null oder undefined) Wert auswirft, sondern stattdessen den Ausdruck beendet und undefined zur\u00FCckgibt.\\\">Optionale Verkettung</a></li><li><span class=\\\"sidebar-icon\\\"><span class=\\\"icon-only-inline\\\" title=\\\"This is an experimental API that should not be used in production code.\\\"><i class=\\\"icon-beaker\\\"> </i></span></span><a href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Pipeline_operator\\\" title=\\\"Der experimentelle Pipline Operator |> (aktuell in Stage 1) erlaubt es verkettete Funktionsaufrufe in einer Lesbaren form zu erstellen. Grunds\u00E4tzlich ist der Pipline Operator syntaktischer Zucker f\u00FCr den Aufruf einer Funktion mit einem Argument. Er erlaubt es\\\">Pipeline Operator</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Property_Accessors\\\" title=\\\"Eigenschaftszugriffe erlauben den Zugriff auf Eigenschaften eines Objekts, indem die Punktnotation oder Klammernotation benutzt wird.\\\">Eigenschaftszugriff</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Remainder\\\" rel=\\\"nofollow\\\" title=\\\"The remainder operator (%) returns the remainder left over when one operand is divided by a second operand. It always takes the sign of the dividend.\\\">Remainder (%)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Remainder$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Remainder_assignment\\\" rel=\\\"nofollow\\\" title=\\\"The remainder assignment operator (%=) divides a variable by the value of the right operand and assigns the remainder to the variable.\\\">Remainder assignment (%=)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Remainder_assignment$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Right_shift\\\" rel=\\\"nofollow\\\" title='The right shift operator (>>) shifts the first operand the specified number of bits to the right. Excess bits shifted off to the right are discarded. Copies of the leftmost bit are shifted in from the left. Since the new leftmost bit has the same value as the previous leftmost bit, the sign bit (the leftmost bit) does not change. Hence the name \\\"sign-propagating\\\".'>Right shift (&gt;&gt;)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Right_shift$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Right_shift_assignment\\\" rel=\\\"nofollow\\\" title=\\\"The right shift assignment operator (>>=) moves the specified amount of bits to the right and assigns the result to the variable.\\\">Right shift assignment (&gt;&gt;=)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Right_shift_assignment$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Spread_syntax\\\" title=\\\"The source for this interactive example is stored in a GitHub repository. If you'd like to contribute to the interactive examples project, please clone https://github.com/mdn/interactive-examples and send us a pull request.\\\">Spread syntax</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Strict_equality\\\" rel=\\\"nofollow\\\" title=\\\"The strict equality operator (===) checks whether its two operands are equal, returning a Boolean result. Unlike the equality operator, the strict equality operator always considers operands of different types to be different.\\\">Strict equality (===)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Strict_equality$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Strict_inequality\\\" rel=\\\"nofollow\\\" title=\\\"The strict inequality operator (!==) checks whether its two operands are not equal, returning a Boolean result. Unlike the inequality operator, the strict inequality operator always considers operands of different types to be different.\\\">Strict inequality (!==)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Strict_inequality$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Subtraction\\\" rel=\\\"nofollow\\\" title=\\\"The subtraction operator (-) subtracts the two operands, producing their difference.\\\">Subtraction (-)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Subtraction$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Subtraction_assignment\\\" rel=\\\"nofollow\\\" title=\\\"The subtraction assignment operator (-=) subtracts the value of the right operand from a variable and assigns the result to the variable.\\\">Subtraction assignment (-=)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Subtraction_assignment$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Unary_negation\\\" rel=\\\"nofollow\\\" title=\\\"The unary negation operator (-) precedes its operand and negates it.\\\">Unary negation (-)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Unary_negation$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Unary_plus\\\" rel=\\\"nofollow\\\" title=\\\"The unary plus operator (+) precedes its operand and evaluates to its operand but attempts to convert it into a number, if it isn't already.\\\">Unary plus (+)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Unary_plus$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift\\\" rel=\\\"nofollow\\\" title=\\\"The unsigned right shift operator (>>>) (zero-fill right shift) shifts the first operand the specified number of bits to the right. Excess bits shifted off to the right are discarded. Zero bits are shifted in from the left. The sign bit becomes 0, so the result is always non-negative. Unlike the other bitwise operators, zero-fill right shift returns an unsigned 32-bit integer.\\\">Unsigned right shift (&gt;&gt;&gt;)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift_assignment\\\" rel=\\\"nofollow\\\" title=\\\"The unsigned right shift assignment operator (>>>=) moves the specified amount of bits to the right and assigns the result to the variable.\\\">Unsigned right shift assignment (&gt;&gt;&gt;=)</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift_assignment$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Operators/async_function\\\" title=\\\"Das async function Schl\u00FCsselwort kann benutzt werden, um async Funktionen in Ausdr\u00FCcken zu benutzen.\\\">async function Ausdruck</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Operators/await\\\" title=\\\"Der await Operator wird genutzt, um auf einen Promise zu warten. Er kann nur in einer async Funktion benutzt werden.\\\">await</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Operators/class\\\" title=\\\"Der class-Ausdruck ist eine Methode zur Definition einer Klasse in ECMAScript 2015. \u00C4hnlich wie beim function-Ausdruck\u00A0kann der class-Ausdruck benannt oder unbenannt sein. Ist er benannt, so gilt der Name nur lokal im Klassenk\u00F6rper. JavaScript-Klassen nutzen prototyp-basierte Vererbung.\\\">Der class-Ausdruck</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Operators/delete\\\" title=\\\"Der JavaScript delete-Operator entfernt eine Eigenschaft eines Objekts. Wenn keine weitere Referenz auf dieselbe Eigenschaft mehr existiert, wird diese automatisch freigegeben.\\\">delete Operator</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Operators/function*\\\" title=\\\"Das function* Schl\u00FCsselwort kann benutzt werden, um Generatorfunktionen in einem Ausdruck zu definieren.\\\">function* Ausdruck</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Operators/in\\\" title=\\\"Der in operator gibt true zur\u00FCck, falls die gegebene Eigenschaft im gegebenen Objekt existiert.\\\">in operator</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Operators/instanceof\\\" title=\\\"Der instanceof Operator pr\u00FCft, ob ein Objekt die prototype Eigenschaft einer Konstruktorfunktion in seiner Prototypenkette besitzt.\\\">instanceof</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Operators/new\\\" title=\\\"Der new Operator erzeugt eine Instanz eines benutzerdefinierten Objekttyps oder eines Standardtyps, welcher eine Konstruktorfunktion besitzt.\\\">new Operator</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Operators/new.target\\\" title=\\\"Die new.target Eigenschaft l\u00E4sst erkennen, ob eine Funktion oder ein Konstruktor mit dem new Operator aufgerufen wurde. In Konstruktoren und Funktionen die mit dem new Operator instanziiert wurde, gibt new.target eine Referenz zu dem Konstruktor oder der Funktion zur\u00FCck. In normalen Funktionsaufrufen hat new.target den Wert undefined.\\\">new.target</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Operators/super\\\" title=\\\"Wenn ein Konstruktor verwendet wird, muss das super Schl\u00FCsselwort verwendet werden, bevor das this Schl\u00FCsselwort verwendet werden kann. Mit dem super\u00A0Schl\u00FCsselwort kann man auch Funktionen im Vaterobjekt ausf\u00FChren.\\\">super</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Operators/this\\\" title=\\\"Das this Schl\u00FCsselwort einer Funktion in JavaScript verh\u00E4lt sich verglichen mit anderen Sprachen ein bisschen anders. Es gibt zudem Unterschiede zwischen dem strict Modus und nicht strict Modus.\\\">this</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Operators/typeof\\\" title=\\\"Der typeof Operator gibt einen String zur\u00FCck, der den Typ des unausgewerteten Operanden beschreibt.\\\">typeof</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Operators/void\\\" title=\\\"Der void Operator evaluiert einen gegebenen Ausdruck und gibt dann undefined zur\u00FCck.\\\">void Ausdruck</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Operators/yield\\\" title=\\\"Das yield Schl\u00FCsselwort wird eingesetzt zum Anhalten und Fortsetzen einer Generatorfunktion (function* oder veralteten Generatorfunktion) eingesetzt.\\\">yield</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Operators/yield*\\\" title=\\\"Der yield* Ausdruck wird eingesetzt um an einen anderen Generator oder iterierbares Objekt zu delegieren.\\\">yield*</a></li></ol>\\n    </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n      <summary>Anweisungen &amp; Deklarationen</summary>\\n      <ol><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Statements/async_function\\\" title=\\\"\u00A0Die async function Deklaration definiert eine asynchrone Funktion, die ein AsyncFunction Objekt zur\u00FCck gibt.\\\">async function</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Statements/block\\\" title=\\\"Eine Blockanweisung (oder in anderen Sprachen Verbundanweisung) wird genutzt, um Anweisungen zu gruppieren. Ein Block wird durch ein Paar geschweifte Klammern abgegrenzt. Optional kann ihm ein Label zugewiesen werden.\\\">block</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Statements/break\\\" title=\\\"Die break Anweisung beendet die aktuelle Schleife, switch-Anweisung oder Anweisungen die mit einem label versehen sind und sorgt daf\u00FCr, dass das Programm mit der Anweisung weiterl\u00E4uft, die auf die beendete Anweisung folgt.\\\">break</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Statements/class\\\" title=\\\"Genau\u00A0wie mit class expressions, wird der body der Klassendeklaration im strict mode ausgef\u00FChrt. Die constructor Eigenschaft ist optional.\\\">Klasse</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Statements/const\\\" title=\\\"Die const-Deklaration erstellt eine Konstante. Wie bei der Deklaration einer Variablen mit\u00A0let ist der G\u00FCltigkeitsbereich auf den lokalen Block begrenzt. Der Wert einer Konstanten kann nicht ver\u00E4ndert werden durch Zuweisung oder Neudeklaration.\\\">const</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Statements/continue\\\" title=\\\"Die continue Anweisung beendet die Ausf\u00FChrung von Anweisungen im aktuellen Durchlauf der aktuellen oder benannten Schleife und setzt die Schleife mit der n\u00E4chsten Iteration fort.\\\">continue</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Statements/debugger\\\" title=\\\"Die Anweisung debugger ruft eine nicht n\u00E4her bestimmte Debugging-Funktionalit\u00E4t des Interpreters auf. Naheliegend, jedoch nicht vorgeschrieben, ist das Pausieren des Programmablaufs und \u00D6ffnen des Debuggers an dieser Stelle.\\n Stellt der Interpreter keine Debugging-M\u00F6glichkeiten zur Verf\u00FCgung, hat die Anweisung keine Auswirkungen.\\\">debugger</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Statements/do...while\\\" title=\\\"Das do...while statement erstellt eine Schleife, die einen bestimmten Ausdruck ausf\u00FChrt, bis die zu \u00FCberpr\u00FCfende Aussage falsch wird. Die Aussage wird \u00FCberpr\u00FCft, nachdem der Ausdruck ausgef\u00FChrt wurde, sodass der Ausdruck mindenstens einmal ausgef\u00FChrt wird.\\\">do...while</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Statements/Empty\\\" title=\\\"Eine leere Anweisung dient der Angabe keiner Anweisung, obwohl die JavaScript Syntax eine erwarten w\u00FCrde.\\\">empty</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Statements/export\\\" title=\\\"Das\u00A0export-Statement\u00A0wird verwendet, um Funktionen und Objekte aus einer gegebenen Datei (oder Modul) zu exportieren.\\\">export</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Statements/for\\\" title=\\\"Die\u00A0for Anweisung\u00A0beschreibt eine Schleife mit drei optionalen Ausdr\u00FCcken und einer oder mehreren\u00A0Anweisungen.\\\">for</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Statements/for-await...of\\\" rel=\\\"nofollow\\\" title=\\\"The for await...of statement creates a loop iterating over async iterable objects as well as on sync iterables, including: built-in String, Array,\u00A0Array-like objects (e.g.,\u00A0arguments or\u00A0NodeList), TypedArray, Map, Set, and user-defined async/sync iterables. It invokes a custom iteration hook with statements to be executed for the value of each distinct property of the object. Like await operator, the statement can only be used inside\u00A0an async function.\\\">for await...of</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Statements/for-await...of$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Statements/for...in\\\" title=\\\"Die Schleife for\u2026in durchl\u00E4uft alle aufz\u00E4hlbaren Eigenschaften eines Objekts (mit Ausnahme jener, deren Name ein Symbol ist) in willk\u00FCrlicher Reihenfolge und f\u00FChrt f\u00FCr jede ihren Anweisungsblock aus.\\\">for...in</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Statements/for...of\\\" title=\\\"Mit dem for...of statement k\u00F6nnen sogenannte\u00A0iterable objects\u00A0durchlaufen\u00A0werden (Array,\u00A0Map, Set, das\u00A0arguments\u00A0Objekt\u00A0und weitere eingeschlossen), wobei auf jeden gefundenen Wert\u00A0eigene Statements ausgef\u00FChrt werden k\u00F6nnen.\\\">for...of</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Statements/funktion\\\" title=\\\"Die Funktionsdeklaration\u00A0definiert eine Funktion mit den angegebenen Parametern.\\\">Funktion</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Statements/function*\\\" title=\\\"Die function*-Deklaration ( Schl\u00FCsselwort function gefolgt von einem Stern) definiert eine Generatorfunktion, welche ein\u00A0 Generator-Objekt zur\u00FCckgibt.\\\">function*</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Statements/if...else\\\" title=\\\"Die if-Anweisung f\u00FChrt Anweisungen aus, wenn eine bestimmte Bedingung zu true ausgewertet wird. Wird die Bedingung zu false ausgewertet, k\u00F6nnen andere Anweisungen ausgef\u00FChrt werden.\\\">if...else</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Statements/import\\\" title=\\\"Das import Statement wird verwendet um Funktionen, Objekte und Primitives zu importieren die von einem externen Modul, einem anderen Script, etc. exportiert wurden.\\\">import</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Statements/import.meta\\\" rel=\\\"nofollow\\\" title=\\\"The import.meta object exposes context-specific metadata to a JavaScript module. It contains information about the module, like the module's URL.\\\">import.meta</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Statements/import.meta$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Statements/label\\\" title=\\\"Ein Statement kann ein Label erhalten und zusammen mit dem break oder continue Statements verwendet werden. Das Label ist das Pr\u00E4fix von einem Statement mit einer Bezeichner zum referenzieren.\\\">label</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Statements/let\\\" title='Das Schl\u00FCsselwort let deklariert eine Variable im G\u00FCltigkeitsbereich des lokalen Blocks. Optional wird die Variable mit einem Wert initialisiert. let leitet sich vom englischen Verb \\\"to let\\\" ab, so da\u00DF man die Zeile \\\"let x = 3\\\" lesen kann als: \\\"lassen wir x 3 sein\\\" (let x be three), bekannt aus der Programmiersprache BASIC.'>let</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Statements/return\\\" title=\\\"Die return  Anweisung beendet einen Funktionsaufruf und spezifiziert einen Wert, der von der Funktion zum Aufrufer zur\u00FCckgegeben wird.\\\">return</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Statements/switch\\\" title=\\\"Die\u00A0switch Anweisung\u00A0wertet einen Ausdruck aus. Diese Auswertung wird mit einer case Klausel verglichen und (bei \u00DCbereinstimmung)\u00A0die entsprechenden Anweisungen\u00A0ausgef\u00FChrt.\\\">switch</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Statements/throw\\\" title='Die\u00A0throw\u00A0Anweisung\u00A0\\\"wirft\\\" eine benutzerdefinierte\u00A0Exception (Ausnahme). Die Programmausf\u00FChrung der aktuellen Funktion bzw. des globalen Codes wird angehalten\u00A0(Anweisungen nach throw werden dann nicht mehr ausgef\u00FChrt), und die Programmausf\u00FChrung wird an den\u00A0n\u00E4chsth\u00F6heren\u00A0catch\u00A0Block in der Ausf\u00FChrungshierarchie \u00FCbergeben. Falls in der gesamten Ausf\u00FChrungschierarchie kein\u00A0catch\u00A0Block definiert wurde, wird das Programm komplett angehalten.'>throw</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Statements/try...catch\\\" title=\\\"Die try...catch-Anweisung (sinngem\u00E4\u00DF: testen und verarbeiten) rahmt einen Block von Anweisungen (try statements)\u00A0ein und legt Reaktionen (catch statementes) fest, die im Fehlerfall ausgef\u00FChrt werden.\\\">try...catch</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Statements/var\\\" title=\\\"Mit dem Schl\u00FCsselwort var deklariert man Variablen und initialisiert diese optional.\\\">var</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Statements/while\\\" title=\\\"Die\u00A0while-Anweisung (Engl.\u00A0statement)\u00A0beschreibt eine Schleife, die solange durchlaufen wird wie die Schleifenbedingung\u00A0wahr (Engl.\u00A0true) ergibt.\u00A0Die Schleifenbedingung (Engl.\u00A0condition)\u00A0wird am Anfang der Schleife\u00A0ausgewertet.\\\">while</a></li><li><span class=\\\"sidebar-icon\\\"><span class=\\\"icon-only-inline\\\" title=\\\"This deprecated API should no longer be used, but will probably still work.\\\"><i class=\\\"icon-thumbs-down-alt\\\"> </i></span></span><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Statements/with\\\" rel=\\\"nofollow\\\" title=\\\"The with statement extends the scope chain for a statement.\\\">with</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Statements/with$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li></ol>\\n    </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n      <summary>Funktionen</summary>\\n      <ol><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Functions/Pfeilfunktionen\\\" title=\\\"Der Ausdruck einer Pfeilfunktion hat eine k\u00FCrzere Syntax als ein Funktionsausdruck\u00A0und hat kein eigenes this, arguments, super, oder new.target. Solche Funktionsausdr\u00FCcke sind am besten f\u00FCr Funktionen, die nicht als Methode genutzt werden, geeignet und k\u00F6nnen nicht als Konstruktoren verwendet werden.\\\">Pfeilfunktionen</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Functions/Default_parameters\\\" title=\\\"Standard Funktionsparameter erlaubt es formale Parameter mit vorgegebenen Werten zu initialisieren, wenn beim Funktionsaufruf kein Wert oder\u00A0undefined \u00FCbergeben wird.\\\">Default parameters</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Functions/Methoden_Definitionen\\\" title=\\\"Beginnend mit ECMAScript 2015\u00A0wurde eine k\u00FCrzere Syntax f\u00FCr Methodendefinitionen in Objekt Initialisierungen eingef\u00FChrt. Es ist eine Abk\u00FCrzung f\u00FCr die Zuweisung einer Funktion an einen Methodennamen.\\\">Methoden Definitionen</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Functions/rest_parameter\\\" title=\\\"Mit der Rest Parameter\u00A0Syntax kann man beliebig viele Parameter als Array empfangen.\\\">Rest Parameter</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Functions/arguments\\\" title=\\\"Das arguments-Objekt ist ein Array-\u00E4hnliches Objekt, das auf die \u00FCbergebenen Parameter einer Funktion verweist.\\\">Arguments object</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Functions/get\\\" title=\\\"Die get Syntax bindet eine Objekteigenschaft an eine Funktion welche aufgerufen wird, wenn die Eigenschaft abgefragt wird.\\\">Getter</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Functions/set\\\" title=\\\"Die set Syntax bindet eine Objekteigenschaft an eine Funktion welche aufgerufen wird, wenn die Eigenschaft neu beschrieben wird.\\\">Setter</a></li></ol>\\n    </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n      <summary>Klassen</summary>\\n      <ol><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Classes/Private_class_fields\\\" rel=\\\"nofollow\\\" title=\\\"Class properties are public by default and can be examined or modified outside the class. In ES2019, the ability to define private class fields using a hash # prefix is added.\\\">Private class fields</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Classes/Private_class_fields$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Classes/Public_class_fields\\\" rel=\\\"nofollow\\\" title=\\\"Both static and instance public fields are writable, enumerable, and configurable properties. As such, unlike their private counterparts, they participate in prototype inheritance.\\\">Public class fields</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Classes/Public_class_fields$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Klassen/constructor\\\" title=\\\"Die\u00A0constructor Methode ist eine spezielle Methode f\u00FCr das erzeugen und initialisieren\u00A0von Objekten, die mit dem Schl\u00FCsselwort\u00A0class\u00A0erzeugt wurden.\\\">Konstruktor</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Klassen/extends\\\" title=\\\"Das\u00A0extends\u00A0Schl\u00FCsselwort wird in einer Klassendeklaration oder in einem Klassenausdruck verwendet, um eine, von einer anderen Klasse, abgeleitete Klasse zu erzeugen.\\\">Erweitern</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Klassen/static\\\" title=\\\"Das static Sch\u00FCsselwort definiert statische Methoden f\u00FCr eine Klasse.\\\">Statische Methoden</a></li></ol>\\n    </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n      <summary>Fehler</summary>\\n      <ol><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Property_access_denied\\\" title=\\\"Es wurde versucht auf ein Objekt zuzugreifen, wof\u00FCr man nicht ausreichend berechtig ist. In den meisten F\u00E4llen handelt es sich um ein\u00A0&lt;iframe> Element, das von einer anderen Dom\u00E4ne\u00A0geladen wurde und die\u00A0Same-Origin Policy\u00A0verletzt.\\\">Error: Permission denied to access property \\\"x\\\"</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Too_much_recursion\\\" title=\\\"InternalError.\\\">InternalError: too much recursion</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Not_a_codepoint\\\" title=\\\"RangeError\\\">RangeError: argument is not a valid code point</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Invalid_array_length\\\" title=\\\"RangeError\\\">RangeError: invalid array length</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Invalid_date\\\" title=\\\"RangeError\\\">RangeError: invalid date</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Precision_range\\\" title=\\\"RangeError\\\">RangeError: precision is out of range</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Bad_radix\\\" title=\\\"RangeError\\\">RangeError: radix must be an integer</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Resulting_string_too_large\\\" title=\\\"RangeError\\\">RangeError: repeat count must be less than infinity</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Negative_repetition_count\\\" title=\\\"RangeError\\\">RangeError: repeat count must be non-negative</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Not_defined\\\" title=\\\"ReferenceError.\\\">ReferenceError: \\\"x\\\" is not defined</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Undeclared_var\\\" title=\\\"ReferenceError Warnung nur im Strict mode.\\\">ReferenceError: assignment to undeclared variable \\\"x\\\"</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Cant_access_lexical_declaration_before_init\\\" title=\\\"ReferenceError\\\">ReferenceError: can't access lexical declaration`X' before initialization</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Deprecated_caller_or_arguments_usage\\\" title=\\\"Eine ReferenceError Warnung, die nur im Strict Mode auftaucht. Die JavaScript-Ausf\u00FChrung wird dadurch nicht angehalten.\\\">ReferenceError: deprecated caller or arguments usage</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Invalid_assignment_left-hand_side\\\" title=\\\"ReferenceError.\\\">ReferenceError: invalid assignment left-hand side</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Undefined_prop\\\" title=\\\"ReferenceError Fehlermeldung tritt nur im\u00A0 strikten Modus auf.\\\">ReferenceError: reference to undefined property \\\"x\\\"</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Deprecated_octal\\\" title=\\\"SyntaxError nur im Strict Mode.\\\">SyntaxError: \\\"0\\\"-prefixed octal literals and octal escape seq. are deprecated</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Strict_Non_Simple_Params\\\" title=\\\"SyntaxError.\\\">SyntaxError: \\\"use strict\\\" not allowed in function with non-simple parameters</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Reserved_identifier\\\" title=\\\"SyntaxError\\\">SyntaxError: \\\"x\\\" is a reserved identifier</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/JSON_bad_parse\\\" title=\\\"SyntaxError\\\">SyntaxError: JSON.parse: bad parsing</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Malformed_formal_parameter\\\" title=\\\"SyntaxError\\\">SyntaxError: Malformed formal parameter</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Unexpected_token\\\" title=\\\"SyntaxError\\\">SyntaxError: Unexpected token</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Deprecated_source_map_pragma\\\" title=\\\"Eine Warnung die als SyntaxError auftritt. Die Ausf\u00FChrung von JavaScript wird nicht unterbrochen.\\\">SyntaxError: Using //@ to indicate sourceURL pragmas is deprecated. Use //# instead</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Invalid_for-of_initializer\\\" title=\\\"SyntaxError\\\">SyntaxError: a declaration in the head of a for-of loop can't have an initializer</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Delete_in_strict_mode\\\" title=\\\"SyntaxError nur im Strict Mode.\\\">SyntaxError: applying the 'delete' operator to an unqualified name is deprecated</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Invalid_for-in_initializer\\\" title=\\\"SyntaxError nur im Strict Mode.\\\">SyntaxError: for-in loop head declarations may not have initializers</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Unnamed_function_statement\\\" title=\\\"SyntaxError\\\">SyntaxError: function statement requires a name</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Identifier_after_number\\\" title=\\\"SyntaxError\\\">SyntaxError: identifier starts immediately after numeric literal</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Illegal_character\\\" title=\\\"SyntaxError\\\">SyntaxError: illegal character</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Bad_regexp_flag\\\" title=\\\"SyntaxError\\\">SyntaxError: invalid regular expression flag \\\"x\\\"</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Missing_parenthesis_after_argument_list\\\" title=\\\"SyntaxError.\\\">SyntaxError: missing ) after argument list</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Missing_parenthesis_after_condition\\\" title=\\\"SyntaxError\\\">SyntaxError: missing ) after condition</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Missing_colon_after_property_id\\\" title=\\\"SyntaxError\\\">SyntaxError: missing : after property id</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Missing_semicolon_before_statement\\\" title=\\\"SyntaxError.\\\">SyntaxError: missing ; before statement</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Missing_initializer_in_const\\\" title=\\\"SyntaxError\\\">SyntaxError: missing = in const declaration</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Missing_bracket_after_list\\\" title=\\\"SyntaxError.\\\">SyntaxError: missing ] after element list</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Missing_formal_parameter\\\" title=\\\"SyntaxError\\\">SyntaxError: missing formal parameter</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Missing_name_after_dot_operator\\\" title=\\\"SyntaxError\\\">SyntaxError: missing name after . operator</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/No_variable_name\\\" title=\\\"SyntaxError\\\">SyntaxError: missing variable name</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Missing_curly_after_function_body\\\" title=\\\"SyntaxError\\\">SyntaxError: missing } after function body</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Missing_curly_after_property_list\\\" title=\\\"SyntaxError\\\">SyntaxError: missing } after property list</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Redeclared_parameter\\\" title=\\\"SyntaxError\\\">SyntaxError: redeclaration of formal parameter \\\"x\\\"</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Bad_return_or_yield\\\" title=\\\"SyntaxError.\\\">SyntaxError: return not in function</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Equal_as_assign\\\" title=\\\"SyntaxError Warnung nur im strict mode.\\\">SyntaxError: test for equality (==) mistyped as assignment (=)?</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Unterminated_string_literal\\\" title=\\\"SyntaxError\\\">SyntaxError: unterminated string literal</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/No_properties\\\" title=\\\"TypeError.\\\">TypeError: \\\"x\\\" has no properties</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Unexpected_type\\\" title=\\\"TypeError.\\\">TypeError: \\\"x\\\" is (not) \\\"y\\\"</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Not_a_constructor\\\" title=\\\"TypeError\\\">TypeError: \\\"x\\\" is not a constructor</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Not_a_function\\\" title=\\\"TypeError.\\\">TypeError: \\\"x\\\" is not a function</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/No_non-null_object\\\" title=\\\"TypeError\\\">TypeError: \\\"x\\\" is not a non-null object</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Read-only\\\" title=\\\"TypeError\\\">TypeError: \\\"x\\\" is read-only</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/is_not_iterable\\\" title=\\\"TypeError\\\">TypeError: 'x' is not iterable</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/More_arguments_needed\\\" title=\\\"TypeError.\\\">TypeError: More arguments needed</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Reduce_of_empty_array_with_no_initial_value\\\" title=\\\"TypeError\\\">TypeError: Reduce of empty array with no initial value</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Called_on_incompatible_type\\\" title=\\\"TypeError\\\">X.prototype.y called on incompatible type</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Dead_object\\\" title=\\\"TypeError\\\">TypeError: can't access dead object</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Cant_access_property\\\" title=\\\"TypeError.\\\">TypeError: can't access property \\\"x\\\" of \\\"y\\\"</a></li><li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Errors/Cant_assign_to_property\\\" rel=\\\"nofollow\\\" title=\\\"The JavaScript strict mode exception &quot;can't assign to property&quot; occurs when attempting to create a property on primitive value such as a symbol, a string, a number or a boolean. Primitive values cannot hold any property.\\\">TypeError: can't assign to property \\\"x\\\" on \\\"y\\\": not an object</a> <a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Errors/Cant_assign_to_property$translate\\\" rel=\\\"nofollow\\\" style=\\\"opacity: 0.5;\\\" title=\\\"Unsere Freiwilligen haben diesen Artikel noch nicht ins Deutsche \u00FCbersetzt. Machen Sie mit und helfen Sie, das zu erledigen!\\\">[\u00DCbersetzen]</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Cant_define_property_object_not_extensible\\\" title=\\\"TypeError\\\">TypeError: can't define property \\\"x\\\": \\\"obj\\\" is not extensible</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Non_configurable_array_element\\\" title=\\\"TypeError\\\">TypeError: can't delete non-configurable array element</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Cant_redefine_property\\\" title=\\\"TypeError\\\">TypeError: can't redefine non-configurable property \\\"x\\\"</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/in_operator_no_object\\\" title=\\\"TypeError\\\">TypeError: cannot use 'in' operator to search for 'x' in 'y'</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Cyclic_object_value\\\" title=\\\"TypeError\\\">TypeError: cyclic object value</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/invalid_right_hand_side_instanceof_operand\\\" title=\\\"TypeError\\\">TypeError: invalid 'instanceof' operand 'x'</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Array_sort_argument\\\" title=\\\"TypeError\\\">TypeError: invalid Array.prototype.sort argument</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Typed_array_invalid_arguments\\\" title=\\\"TypeError\\\">TypeError: invalid arguments</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Invalid_const_assignment\\\" title=\\\"TypeError\\\">TypeError: invalid assignment to const \\\"x\\\"</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Cant_delete\\\" title=\\\"TypeError nur im strict mode.\\\">TypeError: property \\\"x\\\" is non-configurable and can't be deleted</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Getter_only\\\" title=\\\"TypeError nur im strict mode.\\\">TypeError: setting getter-only property \\\"x\\\"</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Var_hides_argument\\\" title=\\\"TypeError Warnung nur im strict mode.\\\">TypeError: variable \\\"x\\\" redeclares argument</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Malformed_URI\\\" title=\\\"URIError\\\">URIError: malformed URI sequence</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Already_has_pragma\\\" title=\\\"Warnung. Die Ausf\u00FChrung von JavaScript wird nicht unterbrochen.\\\">Warning: -file- is being assigned a //# sourceMappingURL, but already has one</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Bad_octal\\\" title=\\\"Warnung. Die Ausf\u00FChrung von JavaScript wird nicht gestoppt.\\\">Warning: 08/09 is not a legal ECMA-262 octal constant</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Deprecated_toLocaleFormat\\\" title=\\\"Warnung. JavaScript stoppt die ausf\u00FChrung nicht an.\\\">Warning: Date.prototype.toLocaleFormat is deprecated</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/For-each-in_loops_are_deprecated\\\" title=\\\"Warnung\\\">Warning: JavaScript 1.6's for-each-in loops are deprecated</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Deprecated_String_generics\\\" title=\\\"Warnung. JavaScript unterbricht die Ausf\u00FChrung nicht.\\\">Warning: String.x is deprecated; use String.prototype.x instead</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Deprecated_expression_closures\\\" title=\\\"Warnung. Die Ausf\u00FChrung von JavaScript wird nicht angehalten.\\\">Warning: expression closures are deprecated</a></li><li><a href=\\\"/de/docs/Web/JavaScript/Reference/Fehler/Stmt_after_return\\\" title=\\\"Warnung\\\">Warning: unreachable code after return statement</a></li></ol>\\n    </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n      <summary>Weiteres</summary>\\n      <ol>\\n        <li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/JavaScript_technologies_overview\\\" rel=\\\"nofollow\\\">Technologien\u00FCbersicht</a></li>\\n        <li><a href=\\\"/de/docs/Web/JavaScript/Reference/Lexical_grammar\\\">Lexikalische Grammatik</a></li>\\n        <li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Data_structures\\\" rel=\\\"nofollow\\\">JavaScript Datenstrukturen</a></li>\\n        <li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Enumerability_and_ownership_of_properties\\\" rel=\\\"nofollow\\\">Enumerability und Ownership von Eigenschaften</a></li>\\n        <li><a href=\\\"/de/docs/Web/JavaScript/Reference/Iteration_protocols\\\">Protokolle zur Iteration</a></li>\\n        <li><a href=\\\"/de/docs/Web/JavaScript/Reference/Strict_mode\\\">Strict Modus</a></li>\\n        <li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Strict_mode/Transitioning_to_strict_mode\\\" rel=\\\"nofollow\\\">Zum Strict Modus wechseln</a></li>\\n        <li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Template_literals\\\" rel=\\\"nofollow\\\">Template Strings</a></li>\\n        <li><a class=\\\"new\\\" href=\\\"/de/docs/Web/JavaScript/Reference/Deprecated_and_obsolete_features\\\" rel=\\\"nofollow\\\">Veraltete Bestandteile</a></li>\\n      </ol>\\n    </details>\\n  </li>\\n </ol>\\n\",\"tocHTML\":\"<li><a href=\\\"#Garantien\\\" rel=\\\"internal\\\">Garantien</a><li><a href=\\\"#Chaining\\\" rel=\\\"internal\\\">Chaining</a><li><a href=\\\"#Fehler\u00FCbertragung\\\" rel=\\\"internal\\\">Fehler\u00FCbertragung</a><li><a href=\\\"#Promise_rejection-Events\\\" rel=\\\"internal\\\">Promise rejection-Events</a><li><a href=\\\"#Ein_Promise-Objekt_in_einer_alten_Callback-API_erzeugen\\\" rel=\\\"internal\\\">Ein Promise-Objekt in einer alten Callback-API erzeugen</a><li><a href=\\\"#Komposition\\\" rel=\\\"internal\\\">Komposition</a><li><a href=\\\"#Timing\\\" rel=\\\"internal\\\">Timing</a><li><a href=\\\"#Nesting\\\" rel=\\\"internal\\\">Nesting</a><li><a href=\\\"#Typische_Fehler\\\" rel=\\\"internal\\\">Typische Fehler</a><li><a href=\\\"#Wenn_Promises_auf_Tasks_treffen\\\" rel=\\\"internal\\\">Wenn Promises auf Tasks treffen</a><li><a href=\\\"#Siehe_auch\\\" rel=\\\"internal\\\">Siehe auch</a>\",\"raw\":\"<div>{{jsSidebar(\\\"JavaScript Guide\\\")}}{{PreviousNext(\\\"Web/JavaScript/Guide/Details_of_the_Object_Model\\\", \\\"Web/JavaScript/Guide/Iterators_and_Generators\\\")}}</div>\\n\\n<p class=\\\"summary\\\">Ein {{jsxref(\\\"Promise\\\")}} ist ein\u00A0Objekt, das die finale Beendigung einer asynchronen Operation repr\u00E4sentiert. Je nachdem, ob die Operation erfolgreich oder fehlerhaft beendet wurde, wird das Promise entsprechend gekennzeichnet.</p>\\n\\n<p class=\\\"summary\\\">Da in den meisten F\u00E4llen bereits existierende Promises benutzt werden, wird diese Anleitung zuerst die Benutzung von zur\u00FCckgegebenen Promises erkl\u00E4ren, und dann darauf eingehen, wie diese erzeugt werden.</p>\\n\\n<p class=\\\"summary\\\">Grob gesagt ist ein Promise ein zur\u00FCckgegebenes Objekt, an welches Callback-Funktionen angeh\u00E4ngt werden k\u00F6nnen, anstatt dass diese einer Funktion \u00FCbergeben werden.</p>\\n\\n<p class=\\\"summary\\\">Betrachten wir z.B. folgende Funktion <code>createAudioFileAsync()</code>, welche asynchron eine Audio-Datei generiert; an diese werden Audio-Einstellungen sowie zwei Callback-Funktionen \u00FCbergeben - eine f\u00FCr das erfolgreiche Erzeugen der Audio-Datei, und die andere f\u00FCr auftretende Fehler.</p>\\n\\n<p class=\\\"summary\\\">Ein beispielhafter Code, den <code>createAudioFileAsync()</code> nutzen w\u00FCrde, sieht in etwa so aus:</p>\\n\\n<pre class=\\\"summary notranslate\\\">function successCallback(result) {\\n  console.log(\\\"Audio-Datei bereit unter URL: \\\" + result);\\n}\\n\\nfunction failureCallback(error) {\\n  console.error(\\\"Fehlerhafte Generierung der Audio-Datei: \\\" + error);\\n}\\n\\ncreateAudioFileAsync(audioSettings, successCallback, failureCallback);\\n</pre>\\n\\n<p>In modernen Funktionen, welche Promises zur\u00FCckgeben, kann man die Callbacks stattdessen direkt anh\u00E4ngen:</p>\\n\\n<p>W\u00FCrde <code>createAudioFileAsync()</code> so umgeschrieben, dass es als R\u00FCckgabewert ein Promise h\u00E4tte, w\u00E4re die Nutzung davon einfach so:</p>\\n\\n<pre class=\\\"notranslate\\\">createAudioFileAsync(audiosettings).then(successCallback, failureCallback);</pre>\\n\\n<p>Das ist die Kurzform von:</p>\\n\\n<pre class=\\\"notranslate\\\">const promise = createAudioFileAsync(audioSettings);\\npromise.then(successCallback, failureCallback);\\n</pre>\\n\\n<p>Dies nennt man einen <em>asynchronen Funktionsaufruf</em>. Diese Vorgehensweise hat mehrere Vorteile, von denen in diesem Artikel jeder einzeln geschildert wird.</p>\\n\\n<h2 id=\\\"Garantien\\\">Garantien</h2>\\n\\n<p>Anders als bei Callback-\u00DCbergabe nach dem alten Verfahren, k\u00F6nnen Promise-Objekte folgendes sicherstellen:</p>\\n\\n<ul>\\n <li>Callback-Funktionen werden erst aufgerufen, wenn der <a href=\\\"/en-US/docs/Web/JavaScript/EventLoop#Run-to-completion\\\">derzeitige Durchlauf des Javascript Event Loops </a>vollst\u00E4ndig ist.</li>\\n <li>Callback-Funktionen, die in <code>.then()</code> angeh\u00E4ngt werden, werden <em>nach</em> dem Ende der asynchronen Operation aufgerufen.</li>\\n <li>Mehrere Callback-Funktionen k\u00F6nnen durch mehrmaliges Aufrufen von <code>.then()</code> angeh\u00E4ngt werden, um unabh\u00E4ngig von der Funktion selbst in der Anh\u00E4nge-Reihenfolge aufgerufen zu werden.</li>\\n</ul>\\n\\n<p>Allerdings ist der wohl kurzfristigste Nutzen von Promises das Chaining.</p>\\n\\n<h2 id=\\\"Chaining\\\">Chaining</h2>\\n\\n<p>Eine h\u00E4ufige Aufgabenstellung ist der Aufruf von zwei oder mehr asynchronen Funktionen nacheinander in Sequenz, wobei Ergebnisse aus der vorangegangenen Funktion in die folgende Funktion \u00FCbernommen werden. Dies ist realisierbar mittels einer <em>Promise chain</em>.</p>\\n\\n<p>Hier steckt der Zauber drin: Die Funktion <code>.then()</code> gibt stets ein neues Promise-Objekt zur\u00FCck:</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">const promise = doSomething();\\nconst promise2 = promise.then(successCallback, failureCallback);\\n</pre>\\n\\n<p>oder auch</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">const promise2 = doSomething().then(successCallback, failureCallback);\\n</pre>\\n\\n<p>Hierbei repr\u00E4sentiert <code>promise2</code> nicht nur den vollst\u00E4ndigen Aufruf von <code>doSomething()</code>, sondern auch die Ergebnisse der beiden angeh\u00E4ngten Funktionen <code>successCallback</code> oder <code>failureCallback</code> - diese k\u00F6nnen ebenfalls asynchrone Funktionen sein, die Promises zur\u00FCckgeben. In diesem Fall werden jegliche Callback-Funktionen, die an <code>promise2</code> angeh\u00E4ngt w\u00FCrden, jeweils auch eingereiht in den jeweiligen Promise-R\u00FCckgabewerten von <code>successCallback</code> oder <code>failureCallback</code>.</p>\\n\\n<p>Grunds\u00E4tzlich repr\u00E4sentiert jedes Promise-Objekt die Vervollst\u00E4ndigung eines asynchronen Schritts in der Kette.</p>\\n\\n<p>Nach dem alten Verfahren f\u00FChrte das Aneinanderreihen von mehreren asynchronen Operationen zur klassischen <em>Callback pyramid of doom</em>:</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">doSomething(function(result) {\\n  doSomethingElse(result, function(newResult) {\\n    doThirdThing(newResult, function(finalResult) {\\n      console.log('Got the final result: ' + finalResult);\\n    }, failureCallback);\\n  }, failureCallback);\\n}, failureCallback);\\n</pre>\\n\\n<p>Mit moderenen Funktionen k\u00F6nnen diese Callback-Funktionen stattdessen an die zur\u00FCckgegebenen Promise-Objekte angeh\u00E4ngt werden, womit die <em>Promise chain</em> geformt wird:</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">doSomething().then(function(result) {\\n  return doSomethingElse(result);\\n})\\n.then(function(newResult) {\\n  return doThirdThing(newResult);\\n})\\n.then(function(finalResult) {\\n  console.log('Got the final result: ' + finalResult);\\n})\\n.catch(failureCallback);\\n</pre>\\n\\n<p>Die Argumente f\u00FCr <code>.then()</code> sind optional, und <code>.catch(failureCallback)</code> ist die Kurzschreibform von <code>.then(null, failureCallback)</code>. Dies kann stattdessen auch mit <a href=\\\"/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions\\\">Pfeil-Funktionen</a> ausgedr\u00FCckt werden:</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">doSomething()\\n.then(result =&gt; doSomethingElse(result))\\n.then(newResult =&gt; doThirdThing(newResult))\\n.then(finalResult =&gt; {\\n  console.log(`Got the final result: ${finalResult}`);\\n})\\n.catch(failureCallback);\\n</pre>\\n\\n<p><strong>Wichtig</strong>: Immer R\u00FCckgabewerte angeben; sonst k\u00F6nnen die Callback das Ergebnis eines vorherigen Promise nicht abfangen.</p>\\n\\n<h3 id=\\\"Chaining_nach_einem_.catch\\\">Chaining nach einem <code>.catch()</code></h3>\\n\\n<p>Es ist auch m\u00F6glich, nach einem Fehler, sprich <code>.catch()</code>, weiter zu verkettern. Dies ist n\u00FCtzlich um neue Operationen auszuf\u00FChren, auch nachdem es einen Fehler in der Kette gab.</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">new Promise((resolve, reject) =&gt; {\\n    console.log('Initial');\\n\\n    resolve();\\n})\\n.then(() =&gt; {\\n    throw new Error('Something failed');\\n        \\n    console.log('Do this');\\n})\\n.catch(() =&gt; {\\n    console.log('Do that');\\n})\\n.then(() =&gt; {\\n    console.log('Do this, no matter what happened before');\\n});\\n</pre>\\n\\n<p>Das obige Beispiel hat die nachfolgenden Ausgaben:</p>\\n\\n<pre class=\\\"notranslate\\\">Initial\\nDo that\\nDo this, no matter what happened before\\n</pre>\\n\\n<p>Zu beachten ist hier, dass der Text \\\"Do this\\\" nicht ausgegeben wird, weil der Fehler \\\"Something failed\\\" einen Abbruch ausgel\u00F6st hat.</p>\\n\\n<h2 id=\\\"Fehler\u00FCbertragung\\\">Fehler\u00FCbertragung</h2>\\n\\n<p>Schaut man sich weiter oben die <em>Callback pyramid of doom</em> an, wird sichtbar, dass <code>failureCallback</code> dort mehrmals angegeben werden muss, anders als nur einmal beim Beispiel unten:</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">doSomething()\\n.then(result =&gt; doSomethingElse(result))\\n.then(newResult =&gt; doThirdThing(newResult))\\n.then(finalResult =&gt; console.log(`Got the final result: ${finalResult}`))\\n.catch(failureCallback);\\n</pre>\\n\\n<p>Grunds\u00E4tzlich h\u00E4lt eine Promise chain bei einer Exception an und erlaubt nur noch Zugriffe von <code>.catch()</code>-Handlern. Dies ist modelliert nach der Funktionsweise von synchronem Code:</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">try {\\n  const result = syncDoSomething();\\n  const newResult = syncDoSomethingElse(result);\\n  const finalResult = syncDoThirdThing(newResult);\\n  console.log(`Got the final result: ${finalResult}`);\\n} catch(error) {\\n  failureCallback(error);\\n}\\n</pre>\\n\\n<p>Diese Symmetrie mit synchronem Code erreichte ihren H\u00F6hepunkt in der <code><a href=\\\"/en-US/docs/Web/JavaScript/Reference/Statements/async_function\\\">async/await</a></code>-Komfortschreibweise in ECMAScript 2017:</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">async function foo() {\\n  try {\\n    const result = await doSomething();\\n    const newResult = await doSomethingElse(result);\\n    const finalResult = await doThirdThing(newResult);\\n    console.log(`Got the final result: ${finalResult}`);\\n  } catch(error) {\\n    failureCallback(error);\\n  }\\n}\\n</pre>\\n\\n<p>Diese Schreibweise baut auf Promises auf; so ist <code>doSomething()</code> die selbe Funktion wie vorher. <a href=\\\"https://developers.google.com/web/fundamentals/getting-started/primers/async-functions\\\">Hier</a> kann man mehr \u00FCber diese Syntax erfahren.</p>\\n\\n<p>Promise-Objekte l\u00F6sen mit der <em>Callback pyramid of doom </em>ein fundamentales Designproblem, indem sie alle Fehler, auch geworfene Exceptions und Programmierfehler, abfangen. Diese Eigenschaft ist essentiell f\u00FCr die funktionale Komposition von asynchronen Operationen.</p>\\n\\n<h2 id=\\\"Promise_rejection-Events\\\">Promise rejection-Events</h2>\\n\\n<p>Immer, wenn ein Promise abgelehnt (\\\"rejected\\\") wird, wird eines von zwei Events zum globalen Scope (grunds\u00E4tzlich entweder <code><a href=\\\"/de/docs/Web/API/Window\\\">window</a></code>, oder, falls in einem Web-Worker gearbeitet wird, der <code><a href=\\\"/de/docs/Web/API/Worker\\\">Worker</a></code> selbst oder ein anderes, <code>Worker</code>-basiertes Interface) geschickt. Diese beiden Events sind:</p>\\n\\n<dl>\\n <dt><code><a href=\\\"/en-US/docs/Web/API/Window/rejectionhandled_event\\\">rejectionHandled</a></code></dt>\\n <dd>Wird bei der Ablehnung eines Promise gesendet, nachdem die Ablehnung von der reject-Funktion des Ausf\u00FChrenden verarbeitet wurde.</dd>\\n <dt><code><a href=\\\"/en-US/docs/Web/API/Window/unhandledrejection_event\\\">unhandledRejection</a></code></dt>\\n <dd>Wird bei der Ablehnung eines Promise gesendet, wenn es keinen Rejection-Handler gibt.</dd>\\n</dl>\\n\\n<p>In beiden F\u00E4llen hat das Event (vom Typ <code><a href=\\\"/en-US/docs/Web/API/PromiseRejectionEvent\\\">PromiseRejectionEvent</a></code>) als Member das Attribut <code><a href=\\\"/en-US/docs/Web/API/PromiseRejectionEvent/promise\\\">promise</a></code> welches auf das abgelehnte Promise zeigt, sowie ein Attribut <code><a href=\\\"/en-US/docs/Web/API/PromiseRejectionEvent/reason\\\">reason</a></code> welches eine Begr\u00FCndung f\u00FCr die Ablehnung des Promise enth\u00E4lt.</p>\\n\\n<p>Diese Events bilden ein Fallback f\u00FCr die Fehlerbehandlung bei Promises sowie eine Hilfestellung beim Debugging des eigenen Promise-Managements. Da die H\u00E4ndler im Kontext global sind, werden alle Fehler unabh\u00E4ngig von der Quelle zu ihnen geschickt.</p>\\n\\n<p>Ein Fall der besonderen N\u00FCtzlichkeit: Wenn man Code in <a href=\\\"/de/docs/Glossary/Node.js\\\">Node.js</a> schreibt, kann es oft passieren, dass im Projekt hinzugef\u00FCgte Module unverarbeitete abgelehnte Promises haben. Diese werden von der Node-Laufzeitumgebung in die Konsole geloggt. Zu Analysezwecken, zur Verarbeitung durch den eigenen Code, oder auch einfach zur Verhinderung von \u00FCberm\u00E4\u00DFigem Output, kann man diese abgelehnten Promises einfangen, indem man f\u00FCr das <a href=\\\"/en-US/docs/Web/API/Window/unhandledrejection_event\\\"><code>unhandledrejection</code> event</a> einen Handler hinzuf\u00FCgen:</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">window.addEventListener('unhandledrejection', event =&gt; {\\n  /* Hier l\u00E4sst sich Code einf\u00FCgen, um die Attribute des Events\\n     zu untersuchen */\\n  event.preventDefault();\\n}, false);</pre>\\n\\n<p>Indem die <code><a href=\\\"/en-US/docs/Web/API/Event/preventDefault\\\">preventDefault()</a></code>-Methode des Events aufgerufen wird, wird die standardm\u00E4\u00DFige Operation bei unverarbeiteten abgelehnten Promises verhindert. \u00DCblicherweise beinhaltet dies das Loggen des Fehlers in der Konsole; im Fall von Node ist das tats\u00E4chlich der Fall.</p>\\n\\n<p>Idealerweise sollte man abgelehnte Promises immer untersuchen, um sicher zu gehen, dass es sich nicht um Code-Fehler handelt.</p>\\n\\n<h2 id=\\\"Ein_Promise-Objekt_in_einer_alten_Callback-API_erzeugen\\\">Ein Promise-Objekt in einer alten Callback-API erzeugen</h2>\\n\\n<p>Ein einfaches {{jsxref(\\\"Promise\\\")}} kann durch dessen Konstruktor-Methode erzeugt werden. Diese Art und Weise sollte nur genutzt werden, um alte APIs damit zu umschlie\u00DFen.</p>\\n\\n<p>Idealerweise w\u00FCrden alle asynchronen Funktionen bereits Promises zur\u00FCckgeben. In der Realit\u00E4t erwarten einige APIs immer Callback-Funktionen f\u00FCr Erfolg und Fehlerfall, die nach dem alten Prinzip \u00FCbergeben werden m\u00FCssen. Ein eindeutiges Beispiel hierf\u00FCr ist die Funktion {{domxref(\\\"WindowTimers.setTimeout\\\", \\\"setTimeout()\\\")}}:</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">setTimeout(() =&gt; saySomething(\\\"10 seconds passed\\\"), 10000);\\n</pre>\\n\\n<p>Callback-Funktionen nach dem alten Verfahren und Promises zu vermischen, bringt Probleme mit sich. Wenn <code>saySomething()</code> fehlschl\u00E4gt oder Programmierfehler enth\u00E4lt, wird dies durch nichts abgefangen.</p>\\n\\n<p>Gl\u00FCcklicherweise kann man solche F\u00E4lle mit einem Promise umschlie\u00DFen. Ein Best Practice besteht darin, problematische Funktionen auf der niedrigstm\u00F6glichen Ebene zu umschlie\u00DFen, und sie nie wieder direkt aufzurufen:</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">const wait = (ms) =&gt; new Promise(resolve =&gt; setTimeout(resolve, ms));\\n\\nwait(10000).then(() =&gt; saySomething(\\\"10 seconds\\\")).catch(failureCallback);\\n</pre>\\n\\n<p>Der Promise-Konstruktor empf\u00E4ngt grunds\u00E4tzlich eine Ausf\u00FChrenden-Funktion, die es m\u00F6glich macht, ein Promise manuell aufzul\u00F6sen oder abzulehnen. Da <code>setTimeout()</code> nicht wirklich fehlschl\u00E4gt, wurde im oberen Beispiel die Ablehnung ausgelassen.</p>\\n\\n<h2 id=\\\"Komposition\\\">Komposition</h2>\\n\\n<p>{{jsxref(\\\"Promise.resolve()\\\")}} und {{jsxref(\\\"Promise.reject()\\\")}} sind Abk\u00FCrzungen f\u00FCr das manuelle Erzeugen von jeweils bereits aufgel\u00F6sten oder abgelehnten Promises. In bestimmten F\u00E4llen kann dies n\u00FCtzlich sein.</p>\\n\\n<p>{{jsxref(\\\"Promise.all()\\\")}} und {{jsxref(\\\"Promise.race()\\\")}} sind zwei Kompositionswerkzeuge f\u00FCr das parallele Durchf\u00FChren von asynchronen Operationen.</p>\\n\\n<p>Sequenzielle Komposition ist m\u00F6glich durch cleveres Javascript:</p>\\n\\n<pre class=\\\"notranslate\\\">[func1, func2].reduce((p, f) =&gt; p.then(f), Promise.resolve());</pre>\\n\\n<p>Im oberen Beispiel wird ein Array von asynchronen Funktionen auf eine Promise chain reduziert. Somit ist es das gleiche, wie <code>Promise.resolve().then(func1).then(func2);</code>.</p>\\n\\n<p>Auch ist es m\u00F6glich, dies mit einer wiederverwendbaren Kompositionsfunktion umzusetzen, die h\u00E4ufig in der funktionalen Programmierung vorkommt:</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">const applyAsync = (acc,val) =&gt; acc.then(val);\\nconst composeAsync = (...funcs) =&gt; x =&gt; funcs.reduce(applyAsync, Promise.resolve(x));</pre>\\n\\n<p>Die Funktion <code>composeAsync()</code> akzeptiert eine dynamische Anzahl von Funktionen als Parameter, und hat als R\u00FCckgabewert eine Funktion, die einen Initialwert akzeptiert, welcher durch die Kompositions-Pipeline durchgereicht wird. Der Nutzen besteht darin, dass einige oder alle \u00FCbergebenen Funktionen entweder synchron oder asynchron sein k\u00F6nnen, und garantiert wird, dass sie in der richtigen Reihenfolge ausgef\u00FChrt werden.</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">const transformData = composeAsync(func1, asyncFunc1, asyncFunc2, func2);\\ntransformData(data);\\n</pre>\\n\\n<p>In ECMAScript 2017 kann sequenzielle Komposition mittels <code>async/await</code> noch einfacher durchgef\u00FChrt werden:</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">for (const f of [func1, func2]) {\\n  await f();\\n}\\n</pre>\\n\\n<h2 id=\\\"Timing\\\">Timing</h2>\\n\\n<p>Um \u00DCberraschungen vorzubeugen, werden Funktionen die an <code>.then()</code> \u00FCbergeben werden niemals synchron aufgerufen, auch wenn das Promise bereits aufgel\u00F6st wurde:</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">Promise.resolve().then(() =&gt; console.log(2));\\nconsole.log(1); // 1, 2\\n</pre>\\n\\n<p>Anstatt sofort ausgef\u00FChrt zu werden, wird die \u00FCbergebene Funktion in eine Microtask-Warteschlange eingereiht; das bedeutet, sie wird erst ausgef\u00FChrt, wenn die Warteschlange am ende des aktuellen Durchlaufs des Javascript event loops geleert wird, sprich zeitnah:</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">const wait = ms =&gt; new Promise(resolve =&gt; setTimeout(resolve, ms));\\n\\nwait().then(() =&gt; console.log(4));\\nPromise.resolve().then(() =&gt; console.log(2)).then(() =&gt; console.log(3));\\nconsole.log(1); // 1, 2, 3, 4\\n</pre>\\n\\n<h2 id=\\\"Nesting\\\">Nesting</h2>\\n\\n<p>Einfache Promise chains sollten m\u00F6glichst flach und ohne Nesting implementiert werden, da Nesting auch das Ergebnis von undurchdachter Komposition sein kann. Siehe auch bei typischen Fehlern.</p>\\n\\n<p>Als Nesting wird eine Kontrollstruktur bezeichnet, um den Scope von catch-Statements zu begrenzen. Ein nested catch f\u00E4ngt nur Fehler in seinem Scope und niedriger ab, nicht au\u00DFerhalb. Korrekt genutzt f\u00FChrt dies zu h\u00F6herer Pr\u00E4zision in der Fehlerbehandlung:</p>\\n\\n<pre class=\\\"brush: js notranslate\\\">doSomethingCritical()\\n.then(result =&gt; doSomethingOptional(result)\\n  .then(optionalResult =&gt; doSomethingExtraNice(optionalResult))\\n  .catch(e =&gt; {})) // Ignorieren, wenn optionale Operation fehlschl\u00E4gt\\n.then(() =&gt; moreCriticalStuff())\\n.catch(e =&gt; console.error(\\\"Critical failure: \\\" + e.message));</pre>\\n\\n<h2 id=\\\"Typische_Fehler\\\">Typische Fehler</h2>\\n\\n<p>In diesem Abschnitt werden \u00FCbliche Programmierfehler thematisiert, auf die man achten sollte, um Promise chains nicht zu kompromittieren. Im unteren Beispiel wurden drei der am h\u00E4ufigsten vorkommenden Fehler untergebracht:</p>\\n\\n<pre class=\\\"brush: js example-bad notranslate\\\">eineFunktion().then(function (ergebnis) {\\n  eineZweiteFunktion(ergebnis) // Kein Promise-R\u00FCckgabewert f\u00FCr innere Chain + unn\u00F6tiges Nesting\\n  .then(neuesErgebnis =&gt; eineDritteFunktion(neuesErgebnis));\\n}).then(() =&gt; eineVierteFunktion());\\n// Keine Chain-Terminierung mit einem catch!</pre>\\n\\n<p>Der erste Programmierfehler ist, dass die Promise chain nicht ordentlich gekn\u00FCpft wurde. Passieren tut dies, wenn ein neues Promise erzeugt, aber nicht zur\u00FCckgegeben wird. Das f\u00FChrt dazu, dass die Promise chain reisst, oder aber, dass zwei chains entstehen, die sich in einer Race condition befinden. Im Klartext heisst das, dass <code>eineVierteFunktion()</code> nicht darauf wartet, dass <code>eineZweiteFunktion()</code> oder <code>eineDritteFunktion()</code> abgeschlossen sind, und, wahrscheinlich unbeabsichtigt, parallel mit ihnen ausgef\u00FChrt wird. Einzelne Promise chains haben zus\u00E4tzlich eigene Fehlerbehandlungen, was in diesem Fall zu nicht abgefangenen Fehlern f\u00FChrt.</p>\\n\\n<p>Der zweite Programmierfehler ist das unn\u00F6tige Nesting, welches den ersten Fehler mitverursachen kann. Da Nesting auch den Scope der inneren Fehler-Handler begrenzt, kann dies zu nicht abgefangenen Fehlern f\u00FChren. Eine Variante hiervon ist das <a href=\\\"https://stackoverflow.com/questions/23803743/what-is-the-explicit-promise-construction-antipattern-and-how-do-i-avoid-it\\\">Promise-Konstruktor-Antipattern</a>, welches Nesting mit der redundanten Nutzung eines Promise-Konstruktors, um Code, der bereits Promises nutzt, zu umschlie\u00DFen, kombiniert.</p>\\n\\n<p>Der dritte Programmierfehler ist, die Terminierung der Promise chain mit einem <code>.catch()</code> wegzulassen. Unterminierte chains f\u00FChren in den meisten Browsern zu nicht abgefangenen Promise-Ablehnungen.</p>\\n\\n<p>Als Faustregel sei genannt, dass Promise chains immer entweder zur\u00FCckgegeben oder terminiert werden sollen, und neue Promises sofort zur\u00FCckgegeben werden sollten, um die Hierarchie flach zu halten:</p>\\n\\n<pre class=\\\"brush: js example-good notranslate\\\">eineFunktion()\\n.then(function(ergebnis) {\\n  return eineZweiteFunktion(ergennis);\\n})\\n.then(neuesErgebnis =&gt; eineDritteFunktion(neuesErgebnis))\\n.then(() =&gt; eineVierteFunktion())\\n.catch(fehler =&gt; console.error(fehler));</pre>\\n\\n<p>Zu beachten ist, dass <code>() =&gt; x</code> die Kurzschreibform f\u00FCr <code>() =&gt; { return x; }</code> ist.</p>\\n\\n<p>Im oberen Beispiel steht jetzt eine einzelne, deterministische Promise chain mit ordentlicher Fehlerbehandlung.</p>\\n\\n<p>Das Verwenden von <a href=\\\"/en-US/docs/Web/JavaScript/Reference/Statements/async_function\\\"><code>async</code>/<code>await</code></a> adressiert die meisten, wenn nicht alle dieser Fehlerquellen; stattdessen kann dann der typische Fehler entstehen, dass man <a href=\\\"https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function\\\"><code>await</code></a>-Keyword vergisst.</p>\\n\\n<h2 id=\\\"Wenn_Promises_auf_Tasks_treffen\\\">Wenn Promises auf Tasks treffen</h2>\\n\\n<p>In einer Situation, in der es Promises und Tasks (z.B. Events oder Callbacks) gibt, die in einer unvorhergesehenen Reihenfolge ausgef\u00FChrt werden / feuern k\u00F6nnen, ist es m\u00F6glich, sich einen Microtask zunutze zu machen, um den Status von Promises zu pr\u00FCfen oder diese auszubalancieren, wenn diese unter bestimmten Bedingungen erzeugt werden.</p>\\n\\n<p>F\u00FCr weitere Informationen \u00FCber Microtasks und das Einreihen einer Funktion als Microtask mittels <code><a href=\\\"/en-US/docs/Web/API/WindowOrWorkerGlobalScope/queueMicrotask\\\">queueMicrotask()</a></code>, kann im <a href=\\\"/en-US/docs/Web/API/HTML_DOM_API/Microtask_guide\\\">Microtask-Guide</a> nachlesen.</p>\\n\\n<h2 id=\\\"Siehe_auch\\\">Siehe auch</h2>\\n\\n<ul>\\n <li>{{jsxref(\\\"Promise.then()\\\")}}</li>\\n <li><code><a href=\\\"/en-US/docs/Web/API/WindowOrWorkerGlobalScope/queueMicrotask\\\">async/await</a></code></li>\\n <li><a href=\\\"http://promisesaplus.com/\\\">Promises/A+ specification</a></li>\\n <li><a href=\\\"https://medium.com/@ramsunvtech/promises-of-promise-part-1-53f769245a53\\\">Venkatraman.R - JS Promise (Part 1, Basics)</a></li>\\n <li><a href=\\\"https://medium.com/@ramsunvtech/js-promise-part-2-q-js-when-js-and-rsvp-js-af596232525c#.dzlqh6ski\\\">Venkatraman.R - JS Promise (Part 2 - Using Q.js, When.js and RSVP.js)</a></li>\\n <li><a href=\\\"https://tech.io/playgrounds/11107/tools-for-promises-unittesting/introduction\\\">Venkatraman.R - Tools for Promises Unit\u00A0Testing</a></li>\\n <li><a href=\\\"http://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html\\\">Nolan Lawson: We have a problem with promises \u2014 Common mistakes with promises</a></li>\\n</ul>\\n\\n<p>{{PreviousNext(\\\"Web/JavaScript/Guide/Details_of_the_Object_Model\\\", \\\"Web/JavaScript/Guide/Iterators_and_Generators\\\")}}</p>\",\"parents\":[{\"url\":\"/de/docs/Web\",\"title\":\"Webtechnologien f\u00FCr Entwickler\"},{\"url\":\"/de/docs/Web/JavaScript\",\"title\":\"JavaScript\"},{\"url\":\"/de/docs/Web/JavaScript/Guide\",\"title\":\"Guide\"}],\"translations\":[{\"language\":\"English (US)\",\"hrefLang\":\"en\",\"localizedLanguage\":\"Englisch (US)\",\"locale\":\"en-US\",\"url\":\"/en-US/docs/Web/JavaScript/Guide/Using_promises\",\"title\":\"Using Promises\"},{\"language\":\"Espa\u00F1ol\",\"hrefLang\":\"es\",\"localizedLanguage\":\"Spanisch\",\"locale\":\"es\",\"url\":\"/es/docs/Web/JavaScript/Guide/Usar_promesas\",\"title\":\"Usar promesas\"},{\"language\":\"Fran\u00E7ais\",\"hrefLang\":\"fr\",\"localizedLanguage\":\"Franz\u00F6sisch\",\"locale\":\"fr\",\"url\":\"/fr/docs/Web/JavaScript/Guide/Utiliser_les_promesses\",\"title\":\"Utiliser les promesses\"},{\"language\":\"\u65E5\u672C\u8A9E\",\"hrefLang\":\"ja\",\"localizedLanguage\":\"Japanisch\",\"locale\":\"ja\",\"url\":\"/ja/docs/Web/JavaScript/Guide/Using_promises\",\"title\":\"Promise\u3092\u4F7F\u3046\"},{\"language\":\"\uD55C\uAD6D\uC5B4\",\"hrefLang\":\"ko\",\"localizedLanguage\":\"Koreanisch\",\"locale\":\"ko\",\"url\":\"/ko/docs/Web/JavaScript/Guide/Using_promises\",\"title\":\"Using promises\"},{\"language\":\"Portugu\u00EAs (do\u00A0Brasil)\",\"hrefLang\":\"pt\",\"localizedLanguage\":\"Portugiesisch (Brasilianisch)\",\"locale\":\"pt-BR\",\"url\":\"/pt-BR/docs/Web/JavaScript/Guide/Usando_promises\",\"title\":\"Usando promises\"},{\"language\":\"\u0420\u0443\u0441\u0441\u043A\u0438\u0439\",\"hrefLang\":\"ru\",\"localizedLanguage\":\"Russisch\",\"locale\":\"ru\",\"url\":\"/ru/docs/Web/JavaScript/Guide/Ispolzovanie_promisov\",\"title\":\"\u0418\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u0435 \u043F\u0440\u043E\u043C\u0438\u0441\u043E\u0432\"},{\"language\":\"\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430\",\"hrefLang\":\"uk\",\"localizedLanguage\":\"Ukrainisch\",\"locale\":\"uk\",\"url\":\"/uk/docs/Web/JavaScript/Guide/Using_promises\",\"title\":\"\u0412\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u043D\u043D\u044F \u043F\u0440\u043E\u043C\u0456\u0441\u0456\u0432\"},{\"language\":\"Ti\u1EBFng Vi\u1EC7t\",\"hrefLang\":\"vi\",\"localizedLanguage\":\"Vietnamesisch\",\"locale\":\"vi\",\"url\":\"/vi/docs/Web/JavaScript/Guide/Using_promises\",\"title\":\"S\u1EED d\u1EE5ng Promise\"},{\"language\":\"\u4E2D\u6587 (\u7B80\u4F53)\",\"hrefLang\":\"zh\",\"localizedLanguage\":\"Chinesisch (Vereinfacht)\",\"locale\":\"zh-CN\",\"url\":\"/zh-CN/docs/Web/JavaScript/Guide/Using_promises\",\"title\":\"\u4F7F\u7528 Promise\"},{\"language\":\"\u6B63\u9AD4\u4E2D\u6587 (\u7E41\u9AD4)\",\"hrefLang\":\"zh-TW\",\"localizedLanguage\":\"Chinesisch (Traditionell)\",\"locale\":\"zh-TW\",\"url\":\"/zh-TW/docs/Web/JavaScript/Guide/Using_promises\",\"title\":\"\u4F7F\u7528 Promise\"}],\"lastModified\":\"2020-07-30T12:41:00.985340\"}}");</script>


  
    <div id="auth-modal" class="modal hidden">
    <section class="auth-providers" tabindex="-1" role="dialog" aria-modal="true" aria-labelledby="modal-main-heading">
        <header>
            <h2 id="modal-main-heading">Anmelden</h2>
        </header>
        
  <p>
    Melden Sie sich an, um die Vorteile eines MDN-Kontos zu nutzen. Wenn Sie noch kein Konto erstellt haben, werden Sie nach der Anmeldung dazu aufgefordert.
</p>
<div class="auth-button-container">
    <a href="https://developer.mozilla.org/users/github/login/?next=%2Fde%2Fdocs%2FWeb%2FJavaScript%2FGuide%2FUsing_promises" class="github-auth" data-first-focusable="true">
        Mit GitHub anmelden
    </a>
    <a href="https://developer.mozilla.org/users/google/login/?next=%2Fde%2Fdocs%2FWeb%2FJavaScript%2FGuide%2FUsing_promises" class="google-auth">
        Mit Google anmelden
    </a>
</div>

        <button id="close-modal" class="close-modal" data-last-focusable="true">
            <span>Modal schließen</span>
        </button>
    </section>
</div>
  

  <!-- site js -->
  <script defer="" type="text/javascript" src="./Promises benutzen - JavaScript _ MDN_files/react-main.c74b5c815269.js" charset="utf-8"></script>
  <script defer="" type="text/javascript" src="./Promises benutzen - JavaScript _ MDN_files/mathml.3cb4c04c0706.js" charset="utf-8"></script>
  <script defer="" type="text/javascript" src="./Promises benutzen - JavaScript _ MDN_files/auth-modal.119e5d70465f.js" charset="utf-8"></script>
  
    <script defer="" type="text/javascript" src="./Promises benutzen - JavaScript _ MDN_files/react-bcd-signal.cf0fc711cfa2.js" charset="utf-8"></script>
  

</body></html>